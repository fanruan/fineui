{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/foundation.js","webpack:///./src/core/lodash.js?c24b","webpack:///./node_modules/script-loader/addScript.js","webpack:///./src/core/lodash.js","webpack:///./src/core/base.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./src/core/ob.js","webpack:///./_mobile/date.i18n.cn.js","webpack:///./src/core/utils/aes.js","webpack:///./src/core/utils/aspect.js","webpack:///./src/core/utils/base64.js","webpack:///./src/core/utils/cache.js","webpack:///./src/core/utils/cellSizeAndPositionManager.js","webpack:///./src/core/utils/chinesePY.js","webpack:///./src/core/utils/heap.js","webpack:///./src/core/utils/linkedHashMap.js","webpack:///./src/core/utils/lru.js","webpack:///./src/core/utils/prefixIntervalTree.js","webpack:///./src/core/utils/queue.js","webpack:///./src/core/utils/sectionManager.js","webpack:///./src/core/utils/tree.js","webpack:///./src/core/utils/vector.js","webpack:///./src/core/alias.js","webpack:///./src/core/func/array.js","webpack:///./src/core/func/date.js","webpack:///./src/core/func/function.js","webpack:///./src/core/func/number.js","webpack:///./src/core/func/string.js","webpack:///./src/core/i18n.js","webpack:///./src/core/inject.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/core/var.js","webpack:///./src/data/pool/pool.buffer.js","webpack:///./src/data/pool/pool.sharing.js","webpack:///./src/data/req/req.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/process/browser.js","webpack:///./i18n/i18n.cn.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_global","undefined","window","global","self","this","BI","prepares","src","log","error","console","execScript","attachEvent","addEventListener","eval","nextTickHandler","pending","copies","callbacks","slice","length","counter","observer","textNode","timerFunc","traverse","_apply","_applyFunc","func","context","obj","_","apply","arguments","args","Array","isFunction","extend","assert","v","is","Error","isArray","deepContains","warn","message","UUID","f","str","parseInt","Math","random","isWidget","widget","Widget","View","createWidgets","items","options","map","flatten","item","createWidget","deepClone","createItems","data","innerAttr","outerAttr","makeArray","shift","type","el","packageItems","layouts","k","it","formatEL","stripEL","trans2Element","widgets","wi","element","each","count","from","to","predicate","inverse","firstKey","res","any","lastKey","firstObject","lastObject","concat","obj1","obj2","isKey","idx","join","isObject","backEach","iteratee","index","backAny","backEvery","backFindKey","keys","backFind","findLastIndex","remove","target","contains","splice","removeAt","string2Array","split","array2String","array","abc2Int","len","toUpperCase","charAt","charCodeAt","int2Abc","num","DIGITS","isNull","push","makeObject","makeArrayByArray","callee","uniq","isSorted","isBoolean","inherit","sb","sp","overrides","F","spp","superclass","init","___fineuiExposedFunction","initialized","has","every","freeze","isNumber","isString","isCapitalEqual","a","b","toLowerCase","isEqual","isWidthOrHeight","w","exec","isNotNull","isEmptyArray","arr","isEmpty","isNotEmptyArray","isEmptyObject","isNotEmptyObject","isPlainObject","isEmptyString","isNotEmptyString","isWindow","cloneDeep","deepExtend","merge","isDeepMatch","attrs","fromIndex","isArrayLike","values","indexOf","copy","deepIndexOf","deepRemove","done","deepWithout","result","deepUnique","deepDiff","other","used","nextTick","Promise","resolve","then","MutationObserver","document","createTextNode","String","observe","characterData","setImmediate","setTimeout","cb","_resolve","e","reject","getTime","performance","now","webkitNow","Date","getDate","number","radix","test","parseSafeInt","MAX_SAFE_INTEGER","clamp","parseFloat","isNaturalNumber","isPositiveInteger","isNegativeInteger","isInteger","isNumeric","isNaN","isFinite","isFloat","isOdd","isEven","sum","Number","average","trim","string","toLocaleUpperCase","toLocaleLowerCase","isEndWithBlank","isLiteral","exp","stripQuotes","camelize","replace","character","hyphenate","encrypt","text","CRYPT_TYPE","AES","aesEncrypt","decrypt","aesDecrypt","escape","leftPad","val","size","ch","toString","format","isLeapYear","year","checkDateVoid","YY","MM","DD","minDate","maxDate","back","match","checkDateLegal","ar","MD","_MD","parseDateTime","fmt","today","y","substring","yearlength","j","hr","min","sec","_MN","substr","getFullYear","getMonth","getHours","getMinutes","getSeconds","search","dt","timeZone","localTime","localOffset","getTimezoneOffset","clearImmediate","handle","tasksByHandle","runIfPresent","currentlyRunningATask","task","callback","run","nextHandle","doc","registerImmediate","html","channel","messagePrefix","onGlobalMessage","attachTo","getPrototypeOf","process","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","event","source","MessageChannel","port1","port2","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","Function","OB","config","_constructor","props","destroyed","_initProps","_init","_initRef","_defaultConfig","_initListeners","listeners","lis","once","eventName","action","ref","_purgeRef","_getEvents","events","on","fn","fns","proxy","un","newFns","ifn","purgeListeners","fireEvent","isArguments","destroy","_DN","_SDN","_FD","_SMN","_QN","_OFFSET","C","C_lib","Base","WordArray","C_enc","Hex","Latin1","Utf8","BufferedBlockAlgorithm","C_algo","MD5","EvpKDF","ECB","CryptoJS","lib","subtype","mixIn","$super","instance","properties","propertyName","clone","words","sigBytes","encoder","stringify","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","thatByte","ceil","nBytes","enc","hexChars","bite","parse","hexStr","hexStrLength","latin1Chars","fromCharCode","latin1Str","latin1StrLength","decodeURIComponent","utf8Str","unescape","encodeURIComponent","reset","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","offset","_doProcessBlock","processedWords","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","Base64","_map","base64Chars","triplet","paddingChar","base64Str","paddingIndex","base64StrLength","bits1","bits2","T","abs","sin","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","hash","H_i","x","HmacMD5","keySize","iterations","compute","password","salt","derivedKey","derivedKeyWords","block","Cipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","_key","dataUpdate","ivSize","cipher","selectCipherStrategy","ciphertext","PasswordBasedCipher","SerializableCipher","StreamCipher","CBC","C_mode","BlockCipherMode","iv","Encryptor","Decryptor","_cipher","_iv","processBlock","xorBlock","encryptBlock","_prevBlock","thisBlock","decryptBlock","Pkcs7","pad","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","CipherParams","BlockCipher","modeCreator","_mode","finalProcessedBlocks","cipherParams","formatter","OpenSSLFormatter","OpenSSL","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","OpenSSLKdf","kdf","execute","derivedParams","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","keyWords","ksRows","_nRounds","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","_doCryptBlock","nRounds","s0","s1","s2","s3","round","t0","t1","t2","t3","decipher","aspect","methodName","advice","dispatcher","exist","next","beforeArr","before","rs","method","afterArr","after","ii","aspectArr","_index","_keyStr","encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","utftext","_utf8_encode","decode","c3","c2","_utf8_decode","Cache","_prefix","setUsername","username","localStorage","setItem","getUsername","getItem","_getKeyPrefix","_generateKey","removeItem","clear","prefix","addCookie","path","expiresHours","date","cookieString","setTime","toUTCString","cookie","getCookie","reg","RegExp","deleteCookie","CellSizeAndPositionManager","cellCount","cellSizeGetter","estimatedCellSize","_cellSizeGetter","_cellCount","_estimatedCellSize","_cellSizeAndPositionData","_lastMeasuredIndex","constructor","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","getSizeAndPositionOfCell","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","getTotalSize","getUpdatedOffsetForIndex","align","containerSize","currentOffset","targetIndex","idealOffset","datum","maxOffset","minOffset","totalSize","getVisibleCellRange","start","_findNearestCell","stop","resetCell","_binarySearch","high","low","middle","_exponentialSearch","interval","lastMeasuredIndex","ScalingCellSizeAndPositionManager","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","getOffsetAdjustment","safeTotalSize","offsetPercentage","_getOffsetPercentage","_safeOffsetToOffset","_offsetToSafeOffset","oMultiDiff","19969","19975","19988","20048","20056","20060","20094","20127","20167","20193","20250","20256","20282","20285","20291","20314","20315","20340","20375","20389","20391","20415","20446","20447","20504","20608","20854","20857","20911","20985","21032","21048","21049","21089","21119","21242","21273","21305","21306","21330","21333","21345","21378","21397","21414","21442","21477","21480","21484","21494","21505","21512","21523","21537","21542","21549","21571","21574","21588","21589","21618","21621","21632","21654","21679","21683","21710","21719","21734","21769","21780","21804","21834","21899","21903","21908","21939","21956","21964","21970","22003","22031","22040","22060","22066","22079","22129","22179","22237","22244","22280","22300","22313","22331","22343","22351","22395","22412","22484","22500","22534","22549","22561","22612","22771","22831","22841","22855","22865","23013","23081","23487","23558","23561","23586","23614","23615","23631","23646","23663","23673","23762","23769","23780","23884","24055","24113","24162","24191","24273","24324","24377","24378","24439","24554","24683","24694","24733","24925","25094","25100","25103","25153","25170","25179","25203","25240","25282","25303","25324","25341","25373","25375","25384","25457","25528","25530","25552","25774","25874","26044","26080","26292","26333","26355","26366","26397","26399","26415","26451","26526","26552","26561","26588","26597","26629","26638","26646","26653","26657","26727","26894","26937","26946","26999","27099","27449","27481","27542","27663","27748","27784","27788","27795","27812","27850","27852","27895","27898","27973","27981","27986","27994","28044","28065","28177","28267","28291","28337","28463","28548","28601","28689","28805","28820","28846","28952","28975","29100","29325","29575","29602","30010","30044","30058","30091","30111","30229","30427","30465","30631","30655","30684","30707","30729","30796","30917","31074","31085","31109","31181","31192","31293","31400","31584","31896","31909","31995","32321","32327","32418","32420","32421","32438","32473","32488","32521","32527","32562","32564","32735","32793","33071","33098","33100","33152","33261","33324","33333","33406","33426","33432","33445","33486","33493","33507","33540","33544","33564","33617","33632","33636","33637","33694","33705","33728","33882","34067","34074","34121","34255","34259","34425","34430","34485","34503","34532","34552","34558","34593","34660","34892","34928","34999","35048","35059","35098","35203","35265","35299","35782","35828","35830","35843","35895","35977","36158","36228","36426","36466","36710","36711","36767","36866","36951","37034","37063","37218","37325","38063","38079","38085","38107","38116","38123","38224","38241","38271","38415","38426","38461","38463","38466","38477","38518","38551","38585","38704","38739","38761","38808","39048","39049","39052","39076","39271","39534","39552","39584","39647","39730","39748","40109","40479","40516","40536","40583","40765","40784","40840","40863","makeFirstPY","uni","arrResult","ignoreMulti","splitChar","arrRslt","multiLen","strlen","tmpStr","tmpArr","tmp","_mkPYRslt","defaultComparator","Heap","comparator","_items","_size","_comparator","_heapify","empty","pop","elt","lastElt","_sinkDown","_bubbleUp","peek","parentIndex","parentElt","leftChild","rightChild","leftChildIndex","rightChildIndex","swapIndex","LinkHashMap","add","scope","toArray","LRU","limit","head","tail","_keymap","put","removed","entry","newer","older","returnEntry","parent","Int32Array","node","xs","PrefixIntervalTree","_half","ceilLog2","_heap","set","getSize","sumUntil","end","sumTo","inclusiveEnd","begin","greatestLowerBound","leftSum","greatestStrictLowerBound","leastUpperBound","leastStrictUpperBound","uniform","initialValue","Queue","capacity","getElementByIndex","unshift","fromArray","Section","height","width","_indexMap","_indices","addCellIndex","getCellIndices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","indices","getSections","section","getCellMetadata","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","getTotalSectionCount","registerCell","cellMetadatum","Tree","root","Node","addNode","newNode","addChild","isRoot","getRoot","initTree","nodes","queue","children","child","_toJSON","getChildren","id","toJSON","_toJSONWithNode","toJSONWithNode","param","_traverse","temp","_recursion","route","recursion","inOrderTraverse","_inOrderTraverse","getLeft","getRight","nrInOrderTraverse","stack","preOrderTraverse","_preOrderTraverse","nrPreOrderTraverse","postOrderTraverse","_postOrderTraverse","nrPostOrderTraverse","preNode","last","isLeaf","getChildrenLength","getFirstChild","first","getLastChild","setLeft","left","setRight","right","setParent","getParent","getChild","getChildIndex","findIndex","removeChildByIndex","behind","removeAllChilds","cur","isUndefined","equals","transformToArrayFormat","pId","newNodes","arrayFormat","transformToTreeFormat","sNodes","tmpMap","treeFormat","traversal","some","Vector","cross","sqrt","Region","h","isIntersects","isPointInside","vector1","vector2","vector3","getPosition","pos","isInvalidDate","_eFormat","neg","magnitudeNeg","magnitude","pow","integerLen","formatLeft","valueLeftLen","getInteger","precision","getPrecision","isValueCarry","roundNum","isValueCarried","toFixed","isAllZero","formatExponential","eFormat","_dealNumberPrecision","fright","_numberFormat","numMod","paddingZero","fp","fleft","tp","tleft","tright","_dealWithRight","leftPlus","_dealWithLeft","numReg","orilen","newnum","rll","tll","combo","com","newstr","lres","cjkEncode","newText","code","cjkDecode","rightIdx","subText","SPECIAL_TAGS","\"","htmlEncode","replaceAll","htmlDecode","cjkEncodeDO","jsonEncode","useHasOwn","encodeArray","__time__","jsonDecode","jo","$","parseJSON","JSON","json","getEncodeURL","urlTemplate","ori","url","specialCharsMap","reserveSpecialCharsMap","initialChar","encodeChar","contentFormat","cv","needTrim","date2Str","parseFmt","str2Date","flagch","compileJFmt","char","jfmt","getDay","hour","getTimezone","object2Number","object2Date","object2Time","pushArray","sArray","pushDistinct","pushDistinctArray","SECOND","MINUTE","HOUR","DAY","WEEK","getMonthDays","month","getLastDateOfMonth","getDayOfYear","time","getWeekNumber","week","startOfWeek","StartOfWeek","middleDay","offsetWeekStartCount","offsetWeekMiddleCount","setDate","ms","valueOf","setMonth","getQuarter","getOffsetDate","getOffsetQuarter","day","monthDay","getQuarterStartMonth","quarterStartMonth","nowMonth","getQuarterStartDate","getQuarterEndDate","quarterEndMonth","getOffsetMonth","getWeekStartDate","getWeekEndDate","print","yWith4number","wn","qr","pm","ir","dy","re","isKhtml","navigator","userAgent","par","Func","createDistinctName","getGBWidth","getSearchResult","keyword","py","find","matched","beforeFunc","sFunc","__self","afterFunc","ret","arg","arg1","arg2","r1","r2","cm","accAdd","sub","mul","accMul","div","accDivide","digitLength","eSplit","float2Fixed","dLen","times","num1","num2","others","_i","num1Changed","num2Changed","baseNum","startWith","startTag","endWith","endTag","getQuery","appendQuery","paras","perfectStart","allIndexOf","location","loc","i18nStore","addI18n","i18n","i18nText","localeText","moduleInjection","xtype","cls","constantInjection","constant","modelInjection","model","storeInjection","store","serviceInjection","service","providerInjection","provider","configFunctions","configFn","providers","providerInstance","Plugin","configWidget","actions","globalAction","actionFn","points","point","pointFn","Modules","getModule","getAllModules","Constants","getConstant","callPoint","inst","types","bfns","afns","Models","getModel","mixins","stores","Stores","getStore","services","Services","getService","Providers","getProvider","$get","Actions","runAction","act","runGlobalAction","getContext","g","MAX","MIN","EVENT_RESPONSE_TIME","zIndex_layer","zIndex_popover","zIndex_popup","zIndex_masker","zIndex_tip","emptyStr","emptyFn","Key","48","49","50","51","52","53","54","55","56","57","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","KeyCode","BACKSPACE","COMMA","DELETE","DOWN","END","ENTER","ESCAPE","HOME","LEFT","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","PAGE_DOWN","PAGE_UP","PERIOD","RIGHT","SPACE","TAB","UP","Status","SUCCESS","WRONG","START","WAITING","READY","RUNNING","OUTOFBOUNDS","NULL","Direction","Top","Bottom","Left","Right","Custom","Axis","Vertical","Horizontal","Selection","Default","None","Single","Multi","All","HorizontalAlign","Center","Stretch","VerticalAlign","Middle","Buffer","BufferPool","cache","_Shared","SharingPool","shared","cat","Req","Timeout","clearFn","_id","_clearFn","clearTimeout","setInterval","clearInterval","timeout","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","require","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","noop","title","browser","env","argv","version","versions","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"utils.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1073);\n","/**\n * Created by richie on 15/7/8.\n */\n/**\n * 初始化BI对象\n */\n_global = undefined;\nif (typeof window !== \"undefined\") {\n    _global = window;\n} else if (typeof global !== \"undefined\") {\n    _global = global;\n} else if (typeof self !== \"undefined\") {\n    _global = self;\n} else {\n    _global = this;\n}\nif (_global.BI == null) {\n    _global.BI = {prepares: []};\n}\nif(_global.BI.prepares == null) {\n    _global.BI.prepares = [];\n}","require(\"!!/Users/iapyang/Project/fineui/node_modules/script-loader/addScript.js\")(require(\"!!/Users/iapyang/Project/fineui/node_modules/raw-loader/index.js!/Users/iapyang/Project/fineui/src/core/lodash.js\"))","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(src) {\n\tfunction log(error) {\n\t\t(typeof console !== \"undefined\")\n\t\t&& (console.error || console.log)(\"[Script Loader]\", error);\n\t}\n\n\t// Check for IE =< 8\n\tfunction isIE() {\n\t\treturn typeof attachEvent !== \"undefined\" && typeof addEventListener === \"undefined\";\n\t}\n\n\ttry {\n\t\tif (typeof execScript !== \"undefined\" && isIE()) {\n\t\t\texecScript(src);\n\t\t} else if (typeof eval !== \"undefined\") {\n\t\t\teval.call(null, src);\n\t\t} else {\n\t\t\tlog(\"EvalError: No eval function available\");\n\t\t}\n\t} catch (error) {\n\t\tlog(error);\n\t}\n}\n","module.exports = \"/**\\n * @license\\n * Lodash (Custom Build) <https://lodash.com/>\\n * Build: `lodash core plus=\\\"debounce,throttle,get,set,findIndex,findLastIndex,findKey,findLastKey,isArrayLike,invert,invertBy,uniq,uniqBy,omit,omitBy,zip,unzip,rest,range,random,reject,intersection,drop,countBy,union,zipObject,initial,cloneDeep,clamp,isPlainObject,take,takeRight,without,difference,defaultsDeep,trim,merge,groupBy,uniqBy,before,after\\\"`\\n * Copyright JS Foundation and other contributors <https://js.foundation/>\\n * Released under MIT license <https://lodash.com/license>\\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\\n */\\n;(function() {\\n\\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\\n  var undefined;\\n\\n  /** Used as the semantic version number. */\\n  var VERSION = '4.17.5';\\n\\n  /** Used as the size to enable large array optimizations. */\\n  var LARGE_ARRAY_SIZE = 200;\\n\\n  /** Error message constants. */\\n  var FUNC_ERROR_TEXT = 'Expected a function';\\n\\n  /** Used to stand-in for `undefined` hash values. */\\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\\n\\n  /** Used as the maximum memoize cache size. */\\n  var MAX_MEMOIZE_SIZE = 500;\\n\\n  /** Used as the internal argument placeholder. */\\n  var PLACEHOLDER = '__lodash_placeholder__';\\n\\n  /** Used to compose bitmasks for cloning. */\\n  var CLONE_DEEP_FLAG = 1,\\n      CLONE_FLAT_FLAG = 2,\\n      CLONE_SYMBOLS_FLAG = 4;\\n\\n  /** Used to compose bitmasks for value comparisons. */\\n  var COMPARE_PARTIAL_FLAG = 1,\\n      COMPARE_UNORDERED_FLAG = 2;\\n\\n  /** Used to compose bitmasks for function metadata. */\\n  var WRAP_BIND_FLAG = 1,\\n      WRAP_BIND_KEY_FLAG = 2,\\n      WRAP_CURRY_BOUND_FLAG = 4,\\n      WRAP_CURRY_FLAG = 8,\\n      WRAP_CURRY_RIGHT_FLAG = 16,\\n      WRAP_PARTIAL_FLAG = 32,\\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\\n      WRAP_ARY_FLAG = 128,\\n      WRAP_REARG_FLAG = 256,\\n      WRAP_FLIP_FLAG = 512;\\n\\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\\n  var HOT_COUNT = 800,\\n      HOT_SPAN = 16;\\n\\n  /** Used to indicate the type of lazy iteratees. */\\n  var LAZY_FILTER_FLAG = 1,\\n      LAZY_MAP_FLAG = 2,\\n      LAZY_WHILE_FLAG = 3;\\n\\n  /** Used as references for various `Number` constants. */\\n  var INFINITY = 1 / 0,\\n      MAX_SAFE_INTEGER = 9007199254740991,\\n      MAX_INTEGER = 1.7976931348623157e+308,\\n      NAN = 0 / 0;\\n\\n  /** Used as references for the maximum length and index of an array. */\\n  var MAX_ARRAY_LENGTH = 4294967295;\\n\\n  /** Used to associate wrap methods with their bit flags. */\\n  var wrapFlags = [\\n    ['ary', WRAP_ARY_FLAG],\\n    ['bind', WRAP_BIND_FLAG],\\n    ['bindKey', WRAP_BIND_KEY_FLAG],\\n    ['curry', WRAP_CURRY_FLAG],\\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\\n    ['flip', WRAP_FLIP_FLAG],\\n    ['partial', WRAP_PARTIAL_FLAG],\\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\\n    ['rearg', WRAP_REARG_FLAG]\\n  ];\\n\\n  /** `Object#toString` result references. */\\n  var argsTag = '[object Arguments]',\\n      arrayTag = '[object Array]',\\n      asyncTag = '[object AsyncFunction]',\\n      boolTag = '[object Boolean]',\\n      dateTag = '[object Date]',\\n      errorTag = '[object Error]',\\n      funcTag = '[object Function]',\\n      genTag = '[object GeneratorFunction]',\\n      mapTag = '[object Map]',\\n      numberTag = '[object Number]',\\n      nullTag = '[object Null]',\\n      objectTag = '[object Object]',\\n      promiseTag = '[object Promise]',\\n      proxyTag = '[object Proxy]',\\n      regexpTag = '[object RegExp]',\\n      setTag = '[object Set]',\\n      stringTag = '[object String]',\\n      symbolTag = '[object Symbol]',\\n      undefinedTag = '[object Undefined]',\\n      weakMapTag = '[object WeakMap]';\\n\\n  var arrayBufferTag = '[object ArrayBuffer]',\\n      dataViewTag = '[object DataView]',\\n      float32Tag = '[object Float32Array]',\\n      float64Tag = '[object Float64Array]',\\n      int8Tag = '[object Int8Array]',\\n      int16Tag = '[object Int16Array]',\\n      int32Tag = '[object Int32Array]',\\n      uint8Tag = '[object Uint8Array]',\\n      uint8ClampedTag = '[object Uint8ClampedArray]',\\n      uint16Tag = '[object Uint16Array]',\\n      uint32Tag = '[object Uint32Array]';\\n\\n  /** Used to match HTML entities and HTML characters. */\\n  var reUnescapedHtml = /[&<>\\\"']/g,\\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\\n\\n  /** Used to match property names within property paths. */\\n  var reIsDeepProp = /\\\\.|\\\\[(?:[^[\\\\]]*|([\\\"'])(?:(?!\\\\1)[^\\\\\\\\]|\\\\\\\\.)*?\\\\1)\\\\]/,\\n      reIsPlainProp = /^\\\\w*$/,\\n      rePropName = /[^.[\\\\]]+|\\\\[(?:(-?\\\\d+(?:\\\\.\\\\d+)?)|([\\\"'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2)\\\\]|(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))/g;\\n\\n  /**\\n   * Used to match `RegExp`\\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\\n   */\\n  var reRegExpChar = /[\\\\\\\\^$.*+?()[\\\\]{}|]/g;\\n\\n  /** Used to match leading and trailing whitespace. */\\n  var reTrim = /^\\\\s+|\\\\s+$/g;\\n\\n  /** Used to match wrap detail comments. */\\n  var reWrapComment = /\\\\{(?:\\\\n\\\\/\\\\* \\\\[wrapped with .+\\\\] \\\\*\\\\/)?\\\\n?/,\\n      reWrapDetails = /\\\\{\\\\n\\\\/\\\\* \\\\[wrapped with (.+)\\\\] \\\\*/,\\n      reSplitDetails = /,? & /;\\n\\n  /** Used to match backslashes in property paths. */\\n  var reEscapeChar = /\\\\\\\\(\\\\\\\\)?/g;\\n\\n  /** Used to match `RegExp` flags from their coerced string values. */\\n  var reFlags = /\\\\w*$/;\\n\\n  /** Used to detect bad signed hexadecimal string values. */\\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\\n\\n  /** Used to detect binary string values. */\\n  var reIsBinary = /^0b[01]+$/i;\\n\\n  /** Used to detect host constructors (Safari). */\\n  var reIsHostCtor = /^\\\\[object .+?Constructor\\\\]$/;\\n\\n  /** Used to detect octal string values. */\\n  var reIsOctal = /^0o[0-7]+$/i;\\n\\n  /** Used to detect unsigned integer values. */\\n  var reIsUint = /^(?:0|[1-9]\\\\d*)$/;\\n\\n  /** Used to compose unicode character classes. */\\n  var rsAstralRange = '\\\\\\\\ud800-\\\\\\\\udfff',\\n      rsComboMarksRange = '\\\\\\\\u0300-\\\\\\\\u036f',\\n      reComboHalfMarksRange = '\\\\\\\\ufe20-\\\\\\\\ufe2f',\\n      rsComboSymbolsRange = '\\\\\\\\u20d0-\\\\\\\\u20ff',\\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\\n      rsVarRange = '\\\\\\\\ufe0e\\\\\\\\ufe0f';\\n\\n  /** Used to compose unicode capture groups. */\\n  var rsAstral = '[' + rsAstralRange + ']',\\n      rsCombo = '[' + rsComboRange + ']',\\n      rsFitz = '\\\\\\\\ud83c[\\\\\\\\udffb-\\\\\\\\udfff]',\\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\\n      rsNonAstral = '[^' + rsAstralRange + ']',\\n      rsRegional = '(?:\\\\\\\\ud83c[\\\\\\\\udde6-\\\\\\\\uddff]){2}',\\n      rsSurrPair = '[\\\\\\\\ud800-\\\\\\\\udbff][\\\\\\\\udc00-\\\\\\\\udfff]',\\n      rsZWJ = '\\\\\\\\u200d';\\n\\n  /** Used to compose unicode regexes. */\\n  var reOptMod = rsModifier + '?',\\n      rsOptVar = '[' + rsVarRange + ']?',\\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\\n\\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\\n\\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\\n\\n  /** Used to identify `toStringTag` values of typed arrays. */\\n  var typedArrayTags = {};\\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\\n      typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\\n          typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\\n              typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\\n                  typedArrayTags[uint32Tag] = true;\\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\\n      typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\\n          typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\\n              typedArrayTags[errorTag] = typedArrayTags[funcTag] =\\n                  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\\n                      typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\\n                          typedArrayTags[setTag] = typedArrayTags[stringTag] =\\n                              typedArrayTags[weakMapTag] = false;\\n\\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\\n  var cloneableTags = {};\\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\\n      cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\\n          cloneableTags[boolTag] = cloneableTags[dateTag] =\\n              cloneableTags[float32Tag] = cloneableTags[float64Tag] =\\n                  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\\n                      cloneableTags[int32Tag] = cloneableTags[mapTag] =\\n                          cloneableTags[numberTag] = cloneableTags[objectTag] =\\n                              cloneableTags[regexpTag] = cloneableTags[setTag] =\\n                                  cloneableTags[stringTag] = cloneableTags[symbolTag] =\\n                                      cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\\n                                          cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\\n      cloneableTags[weakMapTag] = false;\\n\\n  /** Used to map characters to HTML entities. */\\n  var htmlEscapes = {\\n    '&': '&amp;',\\n    '<': '&lt;',\\n    '>': '&gt;',\\n    '\\\"': '&quot;',\\n    \\\"'\\\": '&#39;'\\n  };\\n\\n  /** Built-in method references without a dependency on `root`. */\\n  var freeParseFloat = parseFloat,\\n      freeParseInt = parseInt;\\n\\n  /** Detect free variable `global` from Node.js. */\\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\\n\\n  /** Detect free variable `self`. */\\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\\n\\n  /** Used as a reference to the global object. */\\n  var root = freeGlobal || freeSelf || Function('return this')();\\n\\n  /** Detect free variable `exports`. */\\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\\n\\n  /** Detect free variable `module`. */\\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\\n\\n  /** Detect the popular CommonJS extension `module.exports`. */\\n  var moduleExports = freeModule && freeModule.exports === freeExports;\\n\\n  /** Detect free variable `process` from Node.js. */\\n  var freeProcess = moduleExports && freeGlobal.process;\\n\\n  /** Used to access faster Node.js helpers. */\\n  var nodeUtil = (function() {\\n    try {\\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\\n    } catch (e) {}\\n  }());\\n\\n  /* Node.js helper references. */\\n  var nodeIsDate = nodeUtil && nodeUtil.isDate,\\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\\n\\n  /*--------------------------------------------------------------------------*/\\n\\n  /**\\n   * A faster alternative to `Function#apply`, this function invokes `func`\\n   * with the `this` binding of `thisArg` and the arguments of `args`.\\n   *\\n   * @private\\n   * @param {Function} func The function to invoke.\\n   * @param {*} thisArg The `this` binding of `func`.\\n   * @param {Array} args The arguments to invoke `func` with.\\n   * @returns {*} Returns the result of `func`.\\n   */\\n  function apply(func, thisArg, args) {\\n    switch (args.length) {\\n      case 0: return func.call(thisArg);\\n      case 1: return func.call(thisArg, args[0]);\\n      case 2: return func.call(thisArg, args[0], args[1]);\\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\\n    }\\n    return func.apply(thisArg, args);\\n  }\\n\\n  /**\\n   * A specialized version of `baseAggregator` for arrays.\\n   *\\n   * @private\\n   * @param {Array} [array] The array to iterate over.\\n   * @param {Function} setter The function to set `accumulator` values.\\n   * @param {Function} iteratee The iteratee to transform keys.\\n   * @param {Object} accumulator The initial aggregated object.\\n   * @returns {Function} Returns `accumulator`.\\n   */\\n  function arrayAggregator(array, setter, iteratee, accumulator) {\\n    var index = -1,\\n        length = array == null ? 0 : array.length;\\n\\n    while (++index < length) {\\n      var value = array[index];\\n      setter(accumulator, value, iteratee(value), array);\\n    }\\n    return accumulator;\\n  }\\n\\n  /**\\n   * A specialized version of `_.forEach` for arrays without support for\\n   * iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array} [array] The array to iterate over.\\n   * @param {Function} iteratee The function invoked per iteration.\\n   * @returns {Array} Returns `array`.\\n   */\\n  function arrayEach(array, iteratee) {\\n    var index = -1,\\n        length = array == null ? 0 : array.length;\\n\\n    while (++index < length) {\\n      if (iteratee(array[index], index, array) === false) {\\n        break;\\n      }\\n    }\\n    return array;\\n  }\\n\\n  /**\\n   * A specialized version of `_.every` for arrays without support for\\n   * iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array} [array] The array to iterate over.\\n   * @param {Function} predicate The function invoked per iteration.\\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\\n   *  else `false`.\\n   */\\n  function arrayEvery(array, predicate) {\\n    var index = -1,\\n        length = array == null ? 0 : array.length;\\n\\n    while (++index < length) {\\n      if (!predicate(array[index], index, array)) {\\n        return false;\\n      }\\n    }\\n    return true;\\n  }\\n\\n  /**\\n   * A specialized version of `_.filter` for arrays without support for\\n   * iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array} [array] The array to iterate over.\\n   * @param {Function} predicate The function invoked per iteration.\\n   * @returns {Array} Returns the new filtered array.\\n   */\\n  function arrayFilter(array, predicate) {\\n    var index = -1,\\n        length = array == null ? 0 : array.length,\\n        resIndex = 0,\\n        result = [];\\n\\n    while (++index < length) {\\n      var value = array[index];\\n      if (predicate(value, index, array)) {\\n        result[resIndex++] = value;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * A specialized version of `_.includes` for arrays without support for\\n   * specifying an index to search from.\\n   *\\n   * @private\\n   * @param {Array} [array] The array to inspect.\\n   * @param {*} target The value to search for.\\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\\n   */\\n  function arrayIncludes(array, value) {\\n    var length = array == null ? 0 : array.length;\\n    return !!length && baseIndexOf(array, value, 0) > -1;\\n  }\\n\\n  /**\\n   * This function is like `arrayIncludes` except that it accepts a comparator.\\n   *\\n   * @private\\n   * @param {Array} [array] The array to inspect.\\n   * @param {*} target The value to search for.\\n   * @param {Function} comparator The comparator invoked per element.\\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\\n   */\\n  function arrayIncludesWith(array, value, comparator) {\\n    var index = -1,\\n        length = array == null ? 0 : array.length;\\n\\n    while (++index < length) {\\n      if (comparator(value, array[index])) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n\\n  /**\\n   * A specialized version of `_.map` for arrays without support for iteratee\\n   * shorthands.\\n   *\\n   * @private\\n   * @param {Array} [array] The array to iterate over.\\n   * @param {Function} iteratee The function invoked per iteration.\\n   * @returns {Array} Returns the new mapped array.\\n   */\\n  function arrayMap(array, iteratee) {\\n    var index = -1,\\n        length = array == null ? 0 : array.length,\\n        result = Array(length);\\n\\n    while (++index < length) {\\n      result[index] = iteratee(array[index], index, array);\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Appends the elements of `values` to `array`.\\n   *\\n   * @private\\n   * @param {Array} array The array to modify.\\n   * @param {Array} values The values to append.\\n   * @returns {Array} Returns `array`.\\n   */\\n  function arrayPush(array, values) {\\n    var index = -1,\\n        length = values.length,\\n        offset = array.length;\\n\\n    while (++index < length) {\\n      array[offset + index] = values[index];\\n    }\\n    return array;\\n  }\\n\\n  /**\\n   * A specialized version of `_.reduce` for arrays without support for\\n   * iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array} [array] The array to iterate over.\\n   * @param {Function} iteratee The function invoked per iteration.\\n   * @param {*} [accumulator] The initial value.\\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\\n   *  the initial value.\\n   * @returns {*} Returns the accumulated value.\\n   */\\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\\n    var index = -1,\\n        length = array == null ? 0 : array.length;\\n\\n    if (initAccum && length) {\\n      accumulator = array[++index];\\n    }\\n    while (++index < length) {\\n      accumulator = iteratee(accumulator, array[index], index, array);\\n    }\\n    return accumulator;\\n  }\\n\\n  /**\\n   * A specialized version of `_.some` for arrays without support for iteratee\\n   * shorthands.\\n   *\\n   * @private\\n   * @param {Array} [array] The array to iterate over.\\n   * @param {Function} predicate The function invoked per iteration.\\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\\n   *  else `false`.\\n   */\\n  function arraySome(array, predicate) {\\n    var index = -1,\\n        length = array == null ? 0 : array.length;\\n\\n    while (++index < length) {\\n      if (predicate(array[index], index, array)) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n\\n  /**\\n   * Gets the size of an ASCII `string`.\\n   *\\n   * @private\\n   * @param {string} string The string inspect.\\n   * @returns {number} Returns the string size.\\n   */\\n  var asciiSize = baseProperty('length');\\n\\n  /**\\n   * Converts an ASCII `string` to an array.\\n   *\\n   * @private\\n   * @param {string} string The string to convert.\\n   * @returns {Array} Returns the converted array.\\n   */\\n  function asciiToArray(string) {\\n    return string.split('');\\n  }\\n\\n  /**\\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\\n   * without support for iteratee shorthands, which iterates over `collection`\\n   * using `eachFunc`.\\n   *\\n   * @private\\n   * @param {Array|Object} collection The collection to inspect.\\n   * @param {Function} predicate The function invoked per iteration.\\n   * @param {Function} eachFunc The function to iterate over `collection`.\\n   * @returns {*} Returns the found element or its key, else `undefined`.\\n   */\\n  function baseFindKey(collection, predicate, eachFunc) {\\n    var result;\\n    eachFunc(collection, function(value, key, collection) {\\n      if (predicate(value, key, collection)) {\\n        result = key;\\n        return false;\\n      }\\n    });\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\\n   * support for iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array} array The array to inspect.\\n   * @param {Function} predicate The function invoked per iteration.\\n   * @param {number} fromIndex The index to search from.\\n   * @param {boolean} [fromRight] Specify iterating from right to left.\\n   * @returns {number} Returns the index of the matched value, else `-1`.\\n   */\\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\\n    var length = array.length,\\n        index = fromIndex + (fromRight ? 1 : -1);\\n\\n    while ((fromRight ? index-- : ++index < length)) {\\n      if (predicate(array[index], index, array)) {\\n        return index;\\n      }\\n    }\\n    return -1;\\n  }\\n\\n  /**\\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\\n   *\\n   * @private\\n   * @param {Array} array The array to inspect.\\n   * @param {*} value The value to search for.\\n   * @param {number} fromIndex The index to search from.\\n   * @returns {number} Returns the index of the matched value, else `-1`.\\n   */\\n  function baseIndexOf(array, value, fromIndex) {\\n    return value === value\\n        ? strictIndexOf(array, value, fromIndex)\\n        : baseFindIndex(array, baseIsNaN, fromIndex);\\n  }\\n\\n  /**\\n   * The base implementation of `_.isNaN` without support for number objects.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\\n   */\\n  function baseIsNaN(value) {\\n    return value !== value;\\n  }\\n\\n  /**\\n   * The base implementation of `_.property` without support for deep paths.\\n   *\\n   * @private\\n   * @param {string} key The key of the property to get.\\n   * @returns {Function} Returns the new accessor function.\\n   */\\n  function baseProperty(key) {\\n    return function(object) {\\n      return object == null ? undefined : object[key];\\n    };\\n  }\\n\\n  /**\\n   * The base implementation of `_.propertyOf` without support for deep paths.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @returns {Function} Returns the new accessor function.\\n   */\\n  function basePropertyOf(object) {\\n    return function(key) {\\n      return object == null ? undefined : object[key];\\n    };\\n  }\\n\\n  /**\\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\\n   *\\n   * @private\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} iteratee The function invoked per iteration.\\n   * @param {*} accumulator The initial value.\\n   * @param {boolean} initAccum Specify using the first or last element of\\n   *  `collection` as the initial value.\\n   * @param {Function} eachFunc The function to iterate over `collection`.\\n   * @returns {*} Returns the accumulated value.\\n   */\\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\\n    eachFunc(collection, function(value, index, collection) {\\n      accumulator = initAccum\\n          ? (initAccum = false, value)\\n          : iteratee(accumulator, value, index, collection);\\n    });\\n    return accumulator;\\n  }\\n\\n  /**\\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\\n   * sort order of `array` and replaces criteria objects with their corresponding\\n   * values.\\n   *\\n   * @private\\n   * @param {Array} array The array to sort.\\n   * @param {Function} comparer The function to define sort order.\\n   * @returns {Array} Returns `array`.\\n   */\\n  function baseSortBy(array, comparer) {\\n    var length = array.length;\\n\\n    array.sort(comparer);\\n    while (length--) {\\n      array[length] = array[length].value;\\n    }\\n    return array;\\n  }\\n\\n  /**\\n   * The base implementation of `_.times` without support for iteratee shorthands\\n   * or max array length checks.\\n   *\\n   * @private\\n   * @param {number} n The number of times to invoke `iteratee`.\\n   * @param {Function} iteratee The function invoked per iteration.\\n   * @returns {Array} Returns the array of results.\\n   */\\n  function baseTimes(n, iteratee) {\\n    var index = -1,\\n        result = Array(n);\\n\\n    while (++index < n) {\\n      result[index] = iteratee(index);\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.unary` without support for storing metadata.\\n   *\\n   * @private\\n   * @param {Function} func The function to cap arguments for.\\n   * @returns {Function} Returns the new capped function.\\n   */\\n  function baseUnary(func) {\\n    return function(value) {\\n      return func(value);\\n    };\\n  }\\n\\n  /**\\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\\n   * array of `object` property values corresponding to the property names\\n   * of `props`.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @param {Array} props The property names to get values for.\\n   * @returns {Object} Returns the array of property values.\\n   */\\n  function baseValues(object, props) {\\n    return arrayMap(props, function(key) {\\n      return object[key];\\n    });\\n  }\\n\\n  /**\\n   * Checks if a `cache` value for `key` exists.\\n   *\\n   * @private\\n   * @param {Object} cache The cache to query.\\n   * @param {string} key The key of the entry to check.\\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n   */\\n  function cacheHas(cache, key) {\\n    return cache.has(key);\\n  }\\n\\n  /**\\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\\n   * that is not found in the character symbols.\\n   *\\n   * @private\\n   * @param {Array} strSymbols The string symbols to inspect.\\n   * @param {Array} chrSymbols The character symbols to find.\\n   * @returns {number} Returns the index of the first unmatched string symbol.\\n   */\\n  function charsStartIndex(strSymbols, chrSymbols) {\\n    var index = -1,\\n        length = strSymbols.length;\\n\\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\\n    return index;\\n  }\\n\\n  /**\\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\\n   * that is not found in the character symbols.\\n   *\\n   * @private\\n   * @param {Array} strSymbols The string symbols to inspect.\\n   * @param {Array} chrSymbols The character symbols to find.\\n   * @returns {number} Returns the index of the last unmatched string symbol.\\n   */\\n  function charsEndIndex(strSymbols, chrSymbols) {\\n    var index = strSymbols.length;\\n\\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\\n    return index;\\n  }\\n\\n  /**\\n   * Gets the number of `placeholder` occurrences in `array`.\\n   *\\n   * @private\\n   * @param {Array} array The array to inspect.\\n   * @param {*} placeholder The placeholder to search for.\\n   * @returns {number} Returns the placeholder count.\\n   */\\n  function countHolders(array, placeholder) {\\n    var length = array.length,\\n        result = 0;\\n\\n    while (length--) {\\n      if (array[length] === placeholder) {\\n        ++result;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Used by `_.escape` to convert characters to HTML entities.\\n   *\\n   * @private\\n   * @param {string} chr The matched character to escape.\\n   * @returns {string} Returns the escaped character.\\n   */\\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\\n\\n  /**\\n   * Gets the value at `key` of `object`.\\n   *\\n   * @private\\n   * @param {Object} [object] The object to query.\\n   * @param {string} key The key of the property to get.\\n   * @returns {*} Returns the property value.\\n   */\\n  function getValue(object, key) {\\n    return object == null ? undefined : object[key];\\n  }\\n\\n  /**\\n   * Checks if `string` contains Unicode symbols.\\n   *\\n   * @private\\n   * @param {string} string The string to inspect.\\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\\n   */\\n  function hasUnicode(string) {\\n    return reHasUnicode.test(string);\\n  }\\n\\n  /**\\n   * Converts `iterator` to an array.\\n   *\\n   * @private\\n   * @param {Object} iterator The iterator to convert.\\n   * @returns {Array} Returns the converted array.\\n   */\\n  function iteratorToArray(iterator) {\\n    var data,\\n        result = [];\\n\\n    while (!(data = iterator.next()).done) {\\n      result.push(data.value);\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Converts `map` to its key-value pairs.\\n   *\\n   * @private\\n   * @param {Object} map The map to convert.\\n   * @returns {Array} Returns the key-value pairs.\\n   */\\n  function mapToArray(map) {\\n    var index = -1,\\n        result = Array(map.size);\\n\\n    map.forEach(function(value, key) {\\n      result[++index] = [key, value];\\n    });\\n    return result;\\n  }\\n\\n  /**\\n   * Creates a unary function that invokes `func` with its argument transformed.\\n   *\\n   * @private\\n   * @param {Function} func The function to wrap.\\n   * @param {Function} transform The argument transform.\\n   * @returns {Function} Returns the new function.\\n   */\\n  function overArg(func, transform) {\\n    return function(arg) {\\n      return func(transform(arg));\\n    };\\n  }\\n\\n  /**\\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\\n   * and returns an array of their indexes.\\n   *\\n   * @private\\n   * @param {Array} array The array to modify.\\n   * @param {*} placeholder The placeholder to replace.\\n   * @returns {Array} Returns the new array of placeholder indexes.\\n   */\\n  function replaceHolders(array, placeholder) {\\n    var index = -1,\\n        length = array.length,\\n        resIndex = 0,\\n        result = [];\\n\\n    while (++index < length) {\\n      var value = array[index];\\n      if (value === placeholder || value === PLACEHOLDER) {\\n        array[index] = PLACEHOLDER;\\n        result[resIndex++] = index;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Gets the value at `key`, unless `key` is \\\"__proto__\\\".\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @param {string} key The key of the property to get.\\n   * @returns {*} Returns the property value.\\n   */\\n  function safeGet(object, key) {\\n    return key == '__proto__'\\n        ? undefined\\n        : object[key];\\n  }\\n\\n  /**\\n   * Converts `set` to an array of its values.\\n   *\\n   * @private\\n   * @param {Object} set The set to convert.\\n   * @returns {Array} Returns the values.\\n   */\\n  function setToArray(set) {\\n    var index = -1,\\n        result = Array(set.size);\\n\\n    set.forEach(function(value) {\\n      result[++index] = value;\\n    });\\n    return result;\\n  }\\n\\n  /**\\n   * A specialized version of `_.indexOf` which performs strict equality\\n   * comparisons of values, i.e. `===`.\\n   *\\n   * @private\\n   * @param {Array} array The array to inspect.\\n   * @param {*} value The value to search for.\\n   * @param {number} fromIndex The index to search from.\\n   * @returns {number} Returns the index of the matched value, else `-1`.\\n   */\\n  function strictIndexOf(array, value, fromIndex) {\\n    var index = fromIndex - 1,\\n        length = array.length;\\n\\n    while (++index < length) {\\n      if (array[index] === value) {\\n        return index;\\n      }\\n    }\\n    return -1;\\n  }\\n\\n  /**\\n   * Gets the number of symbols in `string`.\\n   *\\n   * @private\\n   * @param {string} string The string to inspect.\\n   * @returns {number} Returns the string size.\\n   */\\n  function stringSize(string) {\\n    return hasUnicode(string)\\n        ? unicodeSize(string)\\n        : asciiSize(string);\\n  }\\n\\n  /**\\n   * Converts `string` to an array.\\n   *\\n   * @private\\n   * @param {string} string The string to convert.\\n   * @returns {Array} Returns the converted array.\\n   */\\n  function stringToArray(string) {\\n    return hasUnicode(string)\\n        ? unicodeToArray(string)\\n        : asciiToArray(string);\\n  }\\n\\n  /**\\n   * Gets the size of a Unicode `string`.\\n   *\\n   * @private\\n   * @param {string} string The string inspect.\\n   * @returns {number} Returns the string size.\\n   */\\n  function unicodeSize(string) {\\n    var result = reUnicode.lastIndex = 0;\\n    while (reUnicode.test(string)) {\\n      ++result;\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Converts a Unicode `string` to an array.\\n   *\\n   * @private\\n   * @param {string} string The string to convert.\\n   * @returns {Array} Returns the converted array.\\n   */\\n  function unicodeToArray(string) {\\n    return string.match(reUnicode) || [];\\n  }\\n\\n  /*--------------------------------------------------------------------------*/\\n\\n  /** Used for built-in method references. */\\n  var arrayProto = Array.prototype,\\n      funcProto = Function.prototype,\\n      objectProto = Object.prototype;\\n\\n  /** Used to detect overreaching core-js shims. */\\n  var coreJsData = root['__core-js_shared__'];\\n\\n  /** Used to resolve the decompiled source of functions. */\\n  var funcToString = funcProto.toString;\\n\\n  /** Used to check objects for own properties. */\\n  var hasOwnProperty = objectProto.hasOwnProperty;\\n\\n  /** Used to generate unique IDs. */\\n  var idCounter = 0;\\n\\n  /** Used to detect methods masquerading as native. */\\n  var maskSrcKey = (function() {\\n    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\\n    return uid ? ('Symbol(src)_1.' + uid) : '';\\n  }());\\n\\n  /**\\n   * Used to resolve the\\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\\n   * of values.\\n   */\\n  var nativeObjectToString = objectProto.toString;\\n\\n  /** Used to infer the `Object` constructor. */\\n  var objectCtorString = funcToString.call(Object);\\n\\n  /** Used to restore the original `_` reference in `_.noConflict`. */\\n  var oldDash = root._;\\n\\n  /** Used to detect if a method is native. */\\n  var reIsNative = RegExp('^' +\\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\\\\\$&')\\n          .replace(/hasOwnProperty|(function).*?(?=\\\\\\\\\\\\()| for .+?(?=\\\\\\\\\\\\])/g, '$1.*?') + '$'\\n  );\\n\\n  /** Built-in value references. */\\n  var Buffer = moduleExports ? root.Buffer : undefined,\\n      Symbol = root.Symbol,\\n      Uint8Array = root.Uint8Array,\\n      allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\\n      getPrototype = overArg(Object.getPrototypeOf, Object),\\n      objectCreate = Object.create,\\n      propertyIsEnumerable = objectProto.propertyIsEnumerable,\\n      splice = arrayProto.splice,\\n      spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\\n      symIterator = Symbol ? Symbol.iterator : undefined,\\n      symToStringTag = Symbol ? Symbol.toStringTag : undefined;\\n\\n  var defineProperty = (function() {\\n    try {\\n      var func = getNative(Object, 'defineProperty');\\n      func({}, '', {});\\n      return func;\\n    } catch (e) {}\\n  }());\\n\\n  /* Built-in method references for those with the same name as other `lodash` methods. */\\n  var nativeCeil = Math.ceil,\\n      nativeFloor = Math.floor,\\n      nativeGetSymbols = Object.getOwnPropertySymbols,\\n      nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\\n      nativeIsFinite = root.isFinite,\\n      nativeKeys = overArg(Object.keys, Object),\\n      nativeMax = Math.max,\\n      nativeMin = Math.min,\\n      nativeNow = Date.now,\\n      nativeRandom = Math.random,\\n      nativeReverse = arrayProto.reverse;\\n\\n  /* Built-in method references that are verified to be native. */\\n  var DataView = getNative(root, 'DataView'),\\n      Map = getNative(root, 'Map'),\\n      Promise = getNative(root, 'Promise'),\\n      Set = getNative(root, 'Set'),\\n      WeakMap = getNative(root, 'WeakMap'),\\n      nativeCreate = getNative(Object, 'create');\\n\\n  /** Used to store function metadata. */\\n  var metaMap = WeakMap && new WeakMap;\\n\\n  /** Used to lookup unminified function names. */\\n  var realNames = {};\\n\\n  /** Used to detect maps, sets, and weakmaps. */\\n  var dataViewCtorString = toSource(DataView),\\n      mapCtorString = toSource(Map),\\n      promiseCtorString = toSource(Promise),\\n      setCtorString = toSource(Set),\\n      weakMapCtorString = toSource(WeakMap);\\n\\n  /** Used to convert symbols to primitives and strings. */\\n  var symbolProto = Symbol ? Symbol.prototype : undefined,\\n      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\\n      symbolToString = symbolProto ? symbolProto.toString : undefined;\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates a `lodash` object which wraps `value` to enable implicit method\\n   * chain sequences. Methods that operate on and return arrays, collections,\\n   * and functions can be chained together. Methods that retrieve a single value\\n   * or may return a primitive value will automatically end the chain sequence\\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\\n   * with `_#value`.\\n   *\\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\\n   * enabled using `_.chain`.\\n   *\\n   * The execution of chained methods is lazy, that is, it's deferred until\\n   * `_#value` is implicitly or explicitly called.\\n   *\\n   * Lazy evaluation allows several methods to support shortcut fusion.\\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\\n   * the creation of intermediate arrays and can greatly reduce the number of\\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\\n   * fusion if the section is applied to an array and iteratees accept only\\n   * one argument. The heuristic for whether a section qualifies for shortcut\\n   * fusion is subject to change.\\n   *\\n   * Chaining is supported in custom builds as long as the `_#value` method is\\n   * directly or indirectly included in the build.\\n   *\\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\\n   *\\n   * The wrapper `Array` methods are:\\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\\n   *\\n   * The wrapper `String` methods are:\\n   * `replace` and `split`\\n   *\\n   * The wrapper methods that support shortcut fusion are:\\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\\n   *\\n   * The chainable wrapper methods are:\\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\\n   *\\n   * The wrapper methods that are **not** chainable by default are:\\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\\n   * `upperFirst`, `value`, and `words`\\n   *\\n   * @name _\\n   * @constructor\\n   * @category Seq\\n   * @param {*} value The value to wrap in a `lodash` instance.\\n   * @returns {Object} Returns the new `lodash` wrapper instance.\\n   * @example\\n   *\\n   * function square(n) {\\n   *   return n * n;\\n   * }\\n   *\\n   * var wrapped = _([1, 2, 3]);\\n   *\\n   * // Returns an unwrapped value.\\n   * wrapped.reduce(_.add);\\n   * // => 6\\n   *\\n   * // Returns a wrapped value.\\n   * var squares = wrapped.map(square);\\n   *\\n   * _.isArray(squares);\\n   * // => false\\n   *\\n   * _.isArray(squares.value());\\n   * // => true\\n   */\\n  function lodash(value) {\\n    if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\\n      if (value instanceof LodashWrapper) {\\n        return value;\\n      }\\n      if (hasOwnProperty.call(value, '__wrapped__')) {\\n        return wrapperClone(value);\\n      }\\n    }\\n    return new LodashWrapper(value);\\n  }\\n\\n  /**\\n   * The base implementation of `_.create` without support for assigning\\n   * properties to the created object.\\n   *\\n   * @private\\n   * @param {Object} proto The object to inherit from.\\n   * @returns {Object} Returns the new object.\\n   */\\n  var baseCreate = (function() {\\n    function object() {}\\n    return function(proto) {\\n      if (!isObject(proto)) {\\n        return {};\\n      }\\n      if (objectCreate) {\\n        return objectCreate(proto);\\n      }\\n      object.prototype = proto;\\n      var result = new object;\\n      object.prototype = undefined;\\n      return result;\\n    };\\n  }());\\n\\n  /**\\n   * The function whose prototype chain sequence wrappers inherit from.\\n   *\\n   * @private\\n   */\\n  function baseLodash() {\\n    // No operation performed.\\n  }\\n\\n  /**\\n   * The base constructor for creating `lodash` wrapper objects.\\n   *\\n   * @private\\n   * @param {*} value The value to wrap.\\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\\n   */\\n  function LodashWrapper(value, chainAll) {\\n    this.__wrapped__ = value;\\n    this.__actions__ = [];\\n    this.__chain__ = !!chainAll;\\n    this.__index__ = 0;\\n    this.__values__ = undefined;\\n  }\\n\\n  // Ensure wrappers are instances of `baseLodash`.\\n  lodash.prototype = baseLodash.prototype;\\n  lodash.prototype.constructor = lodash;\\n\\n  LodashWrapper.prototype = baseCreate(baseLodash.prototype);\\n  LodashWrapper.prototype.constructor = LodashWrapper;\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\\n   *\\n   * @private\\n   * @constructor\\n   * @param {*} value The value to wrap.\\n   */\\n  function LazyWrapper(value) {\\n    this.__wrapped__ = value;\\n    this.__actions__ = [];\\n    this.__dir__ = 1;\\n    this.__filtered__ = false;\\n    this.__iteratees__ = [];\\n    this.__takeCount__ = MAX_ARRAY_LENGTH;\\n    this.__views__ = [];\\n  }\\n\\n  /**\\n   * Creates a clone of the lazy wrapper object.\\n   *\\n   * @private\\n   * @name clone\\n   * @memberOf LazyWrapper\\n   * @returns {Object} Returns the cloned `LazyWrapper` object.\\n   */\\n  function lazyClone() {\\n    var result = new LazyWrapper(this.__wrapped__);\\n    result.__actions__ = copyArray(this.__actions__);\\n    result.__dir__ = this.__dir__;\\n    result.__filtered__ = this.__filtered__;\\n    result.__iteratees__ = copyArray(this.__iteratees__);\\n    result.__takeCount__ = this.__takeCount__;\\n    result.__views__ = copyArray(this.__views__);\\n    return result;\\n  }\\n\\n  /**\\n   * Reverses the direction of lazy iteration.\\n   *\\n   * @private\\n   * @name reverse\\n   * @memberOf LazyWrapper\\n   * @returns {Object} Returns the new reversed `LazyWrapper` object.\\n   */\\n  function lazyReverse() {\\n    if (this.__filtered__) {\\n      var result = new LazyWrapper(this);\\n      result.__dir__ = -1;\\n      result.__filtered__ = true;\\n    } else {\\n      result = this.clone();\\n      result.__dir__ *= -1;\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Extracts the unwrapped value from its lazy wrapper.\\n   *\\n   * @private\\n   * @name value\\n   * @memberOf LazyWrapper\\n   * @returns {*} Returns the unwrapped value.\\n   */\\n  function lazyValue() {\\n    var array = this.__wrapped__.value(),\\n        dir = this.__dir__,\\n        isArr = isArray(array),\\n        isRight = dir < 0,\\n        arrLength = isArr ? array.length : 0,\\n        view = getView(0, arrLength, this.__views__),\\n        start = view.start,\\n        end = view.end,\\n        length = end - start,\\n        index = isRight ? end : (start - 1),\\n        iteratees = this.__iteratees__,\\n        iterLength = iteratees.length,\\n        resIndex = 0,\\n        takeCount = nativeMin(length, this.__takeCount__);\\n\\n    if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\\n      return baseWrapperValue(array, this.__actions__);\\n    }\\n    var result = [];\\n\\n    outer:\\n        while (length-- && resIndex < takeCount) {\\n          index += dir;\\n\\n          var iterIndex = -1,\\n              value = array[index];\\n\\n          while (++iterIndex < iterLength) {\\n            var data = iteratees[iterIndex],\\n                iteratee = data.iteratee,\\n                type = data.type,\\n                computed = iteratee(value);\\n\\n            if (type == LAZY_MAP_FLAG) {\\n              value = computed;\\n            } else if (!computed) {\\n              if (type == LAZY_FILTER_FLAG) {\\n                continue outer;\\n              } else {\\n                break outer;\\n              }\\n            }\\n          }\\n          result[resIndex++] = value;\\n        }\\n    return result;\\n  }\\n\\n  // Ensure `LazyWrapper` is an instance of `baseLodash`.\\n  LazyWrapper.prototype = baseCreate(baseLodash.prototype);\\n  LazyWrapper.prototype.constructor = LazyWrapper;\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates a hash object.\\n   *\\n   * @private\\n   * @constructor\\n   * @param {Array} [entries] The key-value pairs to cache.\\n   */\\n  function Hash(entries) {\\n    var index = -1,\\n        length = entries == null ? 0 : entries.length;\\n\\n    this.clear();\\n    while (++index < length) {\\n      var entry = entries[index];\\n      this.set(entry[0], entry[1]);\\n    }\\n  }\\n\\n  /**\\n   * Removes all key-value entries from the hash.\\n   *\\n   * @private\\n   * @name clear\\n   * @memberOf Hash\\n   */\\n  function hashClear() {\\n    this.__data__ = nativeCreate ? nativeCreate(null) : {};\\n    this.size = 0;\\n  }\\n\\n  /**\\n   * Removes `key` and its value from the hash.\\n   *\\n   * @private\\n   * @name delete\\n   * @memberOf Hash\\n   * @param {Object} hash The hash to modify.\\n   * @param {string} key The key of the value to remove.\\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n   */\\n  function hashDelete(key) {\\n    var result = this.has(key) && delete this.__data__[key];\\n    this.size -= result ? 1 : 0;\\n    return result;\\n  }\\n\\n  /**\\n   * Gets the hash value for `key`.\\n   *\\n   * @private\\n   * @name get\\n   * @memberOf Hash\\n   * @param {string} key The key of the value to get.\\n   * @returns {*} Returns the entry value.\\n   */\\n  function hashGet(key) {\\n    var data = this.__data__;\\n    if (nativeCreate) {\\n      var result = data[key];\\n      return result === HASH_UNDEFINED ? undefined : result;\\n    }\\n    return hasOwnProperty.call(data, key) ? data[key] : undefined;\\n  }\\n\\n  /**\\n   * Checks if a hash value for `key` exists.\\n   *\\n   * @private\\n   * @name has\\n   * @memberOf Hash\\n   * @param {string} key The key of the entry to check.\\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n   */\\n  function hashHas(key) {\\n    var data = this.__data__;\\n    return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\\n  }\\n\\n  /**\\n   * Sets the hash `key` to `value`.\\n   *\\n   * @private\\n   * @name set\\n   * @memberOf Hash\\n   * @param {string} key The key of the value to set.\\n   * @param {*} value The value to set.\\n   * @returns {Object} Returns the hash instance.\\n   */\\n  function hashSet(key, value) {\\n    var data = this.__data__;\\n    this.size += this.has(key) ? 0 : 1;\\n    data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\\n    return this;\\n  }\\n\\n  // Add methods to `Hash`.\\n  Hash.prototype.clear = hashClear;\\n  Hash.prototype['delete'] = hashDelete;\\n  Hash.prototype.get = hashGet;\\n  Hash.prototype.has = hashHas;\\n  Hash.prototype.set = hashSet;\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates an list cache object.\\n   *\\n   * @private\\n   * @constructor\\n   * @param {Array} [entries] The key-value pairs to cache.\\n   */\\n  function ListCache(entries) {\\n    var index = -1,\\n        length = entries == null ? 0 : entries.length;\\n\\n    this.clear();\\n    while (++index < length) {\\n      var entry = entries[index];\\n      this.set(entry[0], entry[1]);\\n    }\\n  }\\n\\n  /**\\n   * Removes all key-value entries from the list cache.\\n   *\\n   * @private\\n   * @name clear\\n   * @memberOf ListCache\\n   */\\n  function listCacheClear() {\\n    this.__data__ = [];\\n    this.size = 0;\\n  }\\n\\n  /**\\n   * Removes `key` and its value from the list cache.\\n   *\\n   * @private\\n   * @name delete\\n   * @memberOf ListCache\\n   * @param {string} key The key of the value to remove.\\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n   */\\n  function listCacheDelete(key) {\\n    var data = this.__data__,\\n        index = assocIndexOf(data, key);\\n\\n    if (index < 0) {\\n      return false;\\n    }\\n    var lastIndex = data.length - 1;\\n    if (index == lastIndex) {\\n      data.pop();\\n    } else {\\n      splice.call(data, index, 1);\\n    }\\n    --this.size;\\n    return true;\\n  }\\n\\n  /**\\n   * Gets the list cache value for `key`.\\n   *\\n   * @private\\n   * @name get\\n   * @memberOf ListCache\\n   * @param {string} key The key of the value to get.\\n   * @returns {*} Returns the entry value.\\n   */\\n  function listCacheGet(key) {\\n    var data = this.__data__,\\n        index = assocIndexOf(data, key);\\n\\n    return index < 0 ? undefined : data[index][1];\\n  }\\n\\n  /**\\n   * Checks if a list cache value for `key` exists.\\n   *\\n   * @private\\n   * @name has\\n   * @memberOf ListCache\\n   * @param {string} key The key of the entry to check.\\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n   */\\n  function listCacheHas(key) {\\n    return assocIndexOf(this.__data__, key) > -1;\\n  }\\n\\n  /**\\n   * Sets the list cache `key` to `value`.\\n   *\\n   * @private\\n   * @name set\\n   * @memberOf ListCache\\n   * @param {string} key The key of the value to set.\\n   * @param {*} value The value to set.\\n   * @returns {Object} Returns the list cache instance.\\n   */\\n  function listCacheSet(key, value) {\\n    var data = this.__data__,\\n        index = assocIndexOf(data, key);\\n\\n    if (index < 0) {\\n      ++this.size;\\n      data.push([key, value]);\\n    } else {\\n      data[index][1] = value;\\n    }\\n    return this;\\n  }\\n\\n  // Add methods to `ListCache`.\\n  ListCache.prototype.clear = listCacheClear;\\n  ListCache.prototype['delete'] = listCacheDelete;\\n  ListCache.prototype.get = listCacheGet;\\n  ListCache.prototype.has = listCacheHas;\\n  ListCache.prototype.set = listCacheSet;\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates a map cache object to store key-value pairs.\\n   *\\n   * @private\\n   * @constructor\\n   * @param {Array} [entries] The key-value pairs to cache.\\n   */\\n  function MapCache(entries) {\\n    var index = -1,\\n        length = entries == null ? 0 : entries.length;\\n\\n    this.clear();\\n    while (++index < length) {\\n      var entry = entries[index];\\n      this.set(entry[0], entry[1]);\\n    }\\n  }\\n\\n  /**\\n   * Removes all key-value entries from the map.\\n   *\\n   * @private\\n   * @name clear\\n   * @memberOf MapCache\\n   */\\n  function mapCacheClear() {\\n    this.size = 0;\\n    this.__data__ = {\\n      'hash': new Hash,\\n      'map': new (Map || ListCache),\\n      'string': new Hash\\n    };\\n  }\\n\\n  /**\\n   * Removes `key` and its value from the map.\\n   *\\n   * @private\\n   * @name delete\\n   * @memberOf MapCache\\n   * @param {string} key The key of the value to remove.\\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n   */\\n  function mapCacheDelete(key) {\\n    var result = getMapData(this, key)['delete'](key);\\n    this.size -= result ? 1 : 0;\\n    return result;\\n  }\\n\\n  /**\\n   * Gets the map value for `key`.\\n   *\\n   * @private\\n   * @name get\\n   * @memberOf MapCache\\n   * @param {string} key The key of the value to get.\\n   * @returns {*} Returns the entry value.\\n   */\\n  function mapCacheGet(key) {\\n    return getMapData(this, key).get(key);\\n  }\\n\\n  /**\\n   * Checks if a map value for `key` exists.\\n   *\\n   * @private\\n   * @name has\\n   * @memberOf MapCache\\n   * @param {string} key The key of the entry to check.\\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n   */\\n  function mapCacheHas(key) {\\n    return getMapData(this, key).has(key);\\n  }\\n\\n  /**\\n   * Sets the map `key` to `value`.\\n   *\\n   * @private\\n   * @name set\\n   * @memberOf MapCache\\n   * @param {string} key The key of the value to set.\\n   * @param {*} value The value to set.\\n   * @returns {Object} Returns the map cache instance.\\n   */\\n  function mapCacheSet(key, value) {\\n    var data = getMapData(this, key),\\n        size = data.size;\\n\\n    data.set(key, value);\\n    this.size += data.size == size ? 0 : 1;\\n    return this;\\n  }\\n\\n  // Add methods to `MapCache`.\\n  MapCache.prototype.clear = mapCacheClear;\\n  MapCache.prototype['delete'] = mapCacheDelete;\\n  MapCache.prototype.get = mapCacheGet;\\n  MapCache.prototype.has = mapCacheHas;\\n  MapCache.prototype.set = mapCacheSet;\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   *\\n   * Creates an array cache object to store unique values.\\n   *\\n   * @private\\n   * @constructor\\n   * @param {Array} [values] The values to cache.\\n   */\\n  function SetCache(values) {\\n    var index = -1,\\n        length = values == null ? 0 : values.length;\\n\\n    this.__data__ = new MapCache;\\n    while (++index < length) {\\n      this.add(values[index]);\\n    }\\n  }\\n\\n  /**\\n   * Adds `value` to the array cache.\\n   *\\n   * @private\\n   * @name add\\n   * @memberOf SetCache\\n   * @alias push\\n   * @param {*} value The value to cache.\\n   * @returns {Object} Returns the cache instance.\\n   */\\n  function setCacheAdd(value) {\\n    this.__data__.set(value, HASH_UNDEFINED);\\n    return this;\\n  }\\n\\n  /**\\n   * Checks if `value` is in the array cache.\\n   *\\n   * @private\\n   * @name has\\n   * @memberOf SetCache\\n   * @param {*} value The value to search for.\\n   * @returns {number} Returns `true` if `value` is found, else `false`.\\n   */\\n  function setCacheHas(value) {\\n    return this.__data__.has(value);\\n  }\\n\\n  // Add methods to `SetCache`.\\n  SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\\n  SetCache.prototype.has = setCacheHas;\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates a stack cache object to store key-value pairs.\\n   *\\n   * @private\\n   * @constructor\\n   * @param {Array} [entries] The key-value pairs to cache.\\n   */\\n  function Stack(entries) {\\n    var data = this.__data__ = new ListCache(entries);\\n    this.size = data.size;\\n  }\\n\\n  /**\\n   * Removes all key-value entries from the stack.\\n   *\\n   * @private\\n   * @name clear\\n   * @memberOf Stack\\n   */\\n  function stackClear() {\\n    this.__data__ = new ListCache;\\n    this.size = 0;\\n  }\\n\\n  /**\\n   * Removes `key` and its value from the stack.\\n   *\\n   * @private\\n   * @name delete\\n   * @memberOf Stack\\n   * @param {string} key The key of the value to remove.\\n   * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n   */\\n  function stackDelete(key) {\\n    var data = this.__data__,\\n        result = data['delete'](key);\\n\\n    this.size = data.size;\\n    return result;\\n  }\\n\\n  /**\\n   * Gets the stack value for `key`.\\n   *\\n   * @private\\n   * @name get\\n   * @memberOf Stack\\n   * @param {string} key The key of the value to get.\\n   * @returns {*} Returns the entry value.\\n   */\\n  function stackGet(key) {\\n    return this.__data__.get(key);\\n  }\\n\\n  /**\\n   * Checks if a stack value for `key` exists.\\n   *\\n   * @private\\n   * @name has\\n   * @memberOf Stack\\n   * @param {string} key The key of the entry to check.\\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n   */\\n  function stackHas(key) {\\n    return this.__data__.has(key);\\n  }\\n\\n  /**\\n   * Sets the stack `key` to `value`.\\n   *\\n   * @private\\n   * @name set\\n   * @memberOf Stack\\n   * @param {string} key The key of the value to set.\\n   * @param {*} value The value to set.\\n   * @returns {Object} Returns the stack cache instance.\\n   */\\n  function stackSet(key, value) {\\n    var data = this.__data__;\\n    if (data instanceof ListCache) {\\n      var pairs = data.__data__;\\n      if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\\n        pairs.push([key, value]);\\n        this.size = ++data.size;\\n        return this;\\n      }\\n      data = this.__data__ = new MapCache(pairs);\\n    }\\n    data.set(key, value);\\n    this.size = data.size;\\n    return this;\\n  }\\n\\n  // Add methods to `Stack`.\\n  Stack.prototype.clear = stackClear;\\n  Stack.prototype['delete'] = stackDelete;\\n  Stack.prototype.get = stackGet;\\n  Stack.prototype.has = stackHas;\\n  Stack.prototype.set = stackSet;\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates an array of the enumerable property names of the array-like `value`.\\n   *\\n   * @private\\n   * @param {*} value The value to query.\\n   * @param {boolean} inherited Specify returning inherited property names.\\n   * @returns {Array} Returns the array of property names.\\n   */\\n  function arrayLikeKeys(value, inherited) {\\n    var isArr = isArray(value),\\n        isArg = !isArr && isArguments(value),\\n        isBuff = !isArr && !isArg && isBuffer(value),\\n        isType = !isArr && !isArg && !isBuff && isTypedArray(value),\\n        skipIndexes = isArr || isArg || isBuff || isType,\\n        result = skipIndexes ? baseTimes(value.length, String) : [],\\n        length = result.length;\\n\\n    for (var key in value) {\\n      if ((inherited || hasOwnProperty.call(value, key)) &&\\n          !(skipIndexes && (\\n              // Safari 9 has enumerable `arguments.length` in strict mode.\\n              key == 'length' ||\\n              // Node.js 0.10 has enumerable non-index properties on buffers.\\n              (isBuff && (key == 'offset' || key == 'parent')) ||\\n              // PhantomJS 2 has enumerable non-index properties on typed arrays.\\n              (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\\n              // Skip index properties.\\n              isIndex(key, length)\\n          ))) {\\n        result.push(key);\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * This function is like `assignValue` except that it doesn't assign\\n   * `undefined` values.\\n   *\\n   * @private\\n   * @param {Object} object The object to modify.\\n   * @param {string} key The key of the property to assign.\\n   * @param {*} value The value to assign.\\n   */\\n  function assignMergeValue(object, key, value) {\\n    if ((value !== undefined && !eq(object[key], value)) ||\\n        (value === undefined && !(key in object))) {\\n      baseAssignValue(object, key, value);\\n    }\\n  }\\n\\n  /**\\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n   * for equality comparisons.\\n   *\\n   * @private\\n   * @param {Object} object The object to modify.\\n   * @param {string} key The key of the property to assign.\\n   * @param {*} value The value to assign.\\n   */\\n  function assignValue(object, key, value) {\\n    var objValue = object[key];\\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\\n        (value === undefined && !(key in object))) {\\n      baseAssignValue(object, key, value);\\n    }\\n  }\\n\\n  /**\\n   * Gets the index at which the `key` is found in `array` of key-value pairs.\\n   *\\n   * @private\\n   * @param {Array} array The array to inspect.\\n   * @param {*} key The key to search for.\\n   * @returns {number} Returns the index of the matched value, else `-1`.\\n   */\\n  function assocIndexOf(array, key) {\\n    var length = array.length;\\n    while (length--) {\\n      if (eq(array[length][0], key)) {\\n        return length;\\n      }\\n    }\\n    return -1;\\n  }\\n\\n  /**\\n   * Aggregates elements of `collection` on `accumulator` with keys transformed\\n   * by `iteratee` and values set by `setter`.\\n   *\\n   * @private\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} setter The function to set `accumulator` values.\\n   * @param {Function} iteratee The iteratee to transform keys.\\n   * @param {Object} accumulator The initial aggregated object.\\n   * @returns {Function} Returns `accumulator`.\\n   */\\n  function baseAggregator(collection, setter, iteratee, accumulator) {\\n    baseEach(collection, function(value, key, collection) {\\n      setter(accumulator, value, iteratee(value), collection);\\n    });\\n    return accumulator;\\n  }\\n\\n  /**\\n   * The base implementation of `_.assign` without support for multiple sources\\n   * or `customizer` functions.\\n   *\\n   * @private\\n   * @param {Object} object The destination object.\\n   * @param {Object} source The source object.\\n   * @returns {Object} Returns `object`.\\n   */\\n  function baseAssign(object, source) {\\n    return object && copyObject(source, keys(source), object);\\n  }\\n\\n  /**\\n   * The base implementation of `_.assignIn` without support for multiple sources\\n   * or `customizer` functions.\\n   *\\n   * @private\\n   * @param {Object} object The destination object.\\n   * @param {Object} source The source object.\\n   * @returns {Object} Returns `object`.\\n   */\\n  function baseAssignIn(object, source) {\\n    return object && copyObject(source, keysIn(source), object);\\n  }\\n\\n  /**\\n   * The base implementation of `assignValue` and `assignMergeValue` without\\n   * value checks.\\n   *\\n   * @private\\n   * @param {Object} object The object to modify.\\n   * @param {string} key The key of the property to assign.\\n   * @param {*} value The value to assign.\\n   */\\n  function baseAssignValue(object, key, value) {\\n    if (key == '__proto__' && defineProperty) {\\n      defineProperty(object, key, {\\n        'configurable': true,\\n        'enumerable': true,\\n        'value': value,\\n        'writable': true\\n      });\\n    } else {\\n      object[key] = value;\\n    }\\n  }\\n\\n  /**\\n   * The base implementation of `_.at` without support for individual paths.\\n   *\\n   * @private\\n   * @param {Object} object The object to iterate over.\\n   * @param {string[]} paths The property paths to pick.\\n   * @returns {Array} Returns the picked elements.\\n   */\\n  function baseAt(object, paths) {\\n    var index = -1,\\n        length = paths.length,\\n        result = Array(length),\\n        skip = object == null;\\n\\n    while (++index < length) {\\n      result[index] = skip ? undefined : get(object, paths[index]);\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.clamp` which doesn't coerce arguments.\\n   *\\n   * @private\\n   * @param {number} number The number to clamp.\\n   * @param {number} [lower] The lower bound.\\n   * @param {number} upper The upper bound.\\n   * @returns {number} Returns the clamped number.\\n   */\\n  function baseClamp(number, lower, upper) {\\n    if (number === number) {\\n      if (upper !== undefined) {\\n        number = number <= upper ? number : upper;\\n      }\\n      if (lower !== undefined) {\\n        number = number >= lower ? number : lower;\\n      }\\n    }\\n    return number;\\n  }\\n\\n  /**\\n   * The base implementation of `_.clone` and `_.cloneDeep` which tracks\\n   * traversed objects.\\n   *\\n   * @private\\n   * @param {*} value The value to clone.\\n   * @param {boolean} bitmask The bitmask flags.\\n   *  1 - Deep clone\\n   *  2 - Flatten inherited properties\\n   *  4 - Clone symbols\\n   * @param {Function} [customizer] The function to customize cloning.\\n   * @param {string} [key] The key of `value`.\\n   * @param {Object} [object] The parent object of `value`.\\n   * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\\n   * @returns {*} Returns the cloned value.\\n   */\\n  function baseClone(value, bitmask, customizer, key, object, stack) {\\n    var result,\\n        isDeep = bitmask & CLONE_DEEP_FLAG,\\n        isFlat = bitmask & CLONE_FLAT_FLAG,\\n        isFull = bitmask & CLONE_SYMBOLS_FLAG;\\n\\n    if (customizer) {\\n      result = object ? customizer(value, key, object, stack) : customizer(value);\\n    }\\n    if (result !== undefined) {\\n      return result;\\n    }\\n    if (!isObject(value)) {\\n      return value;\\n    }\\n    var isArr = isArray(value);\\n    if (isArr) {\\n      result = initCloneArray(value);\\n      if (!isDeep) {\\n        return copyArray(value, result);\\n      }\\n    } else {\\n      var tag = getTag(value),\\n          isFunc = tag == funcTag || tag == genTag;\\n\\n      if (isBuffer(value)) {\\n        return cloneBuffer(value, isDeep);\\n      }\\n      if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\\n        result = (isFlat || isFunc) ? {} : initCloneObject(value);\\n        if (!isDeep) {\\n          return isFlat\\n              ? copySymbolsIn(value, baseAssignIn(result, value))\\n              : copySymbols(value, baseAssign(result, value));\\n        }\\n      } else {\\n        if (!cloneableTags[tag]) {\\n          return object ? value : {};\\n        }\\n        result = initCloneByTag(value, tag, isDeep);\\n      }\\n    }\\n    // Check for circular references and return its corresponding clone.\\n    stack || (stack = new Stack);\\n    var stacked = stack.get(value);\\n    if (stacked) {\\n      return stacked;\\n    }\\n    stack.set(value, result);\\n\\n    if (isSet(value)) {\\n      value.forEach(function(subValue) {\\n        result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\\n      });\\n\\n      return result;\\n    }\\n\\n    if (isMap(value)) {\\n      value.forEach(function(subValue, key) {\\n        result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\\n      });\\n\\n      return result;\\n    }\\n\\n    var keysFunc = isFull\\n        ? (isFlat ? getAllKeysIn : getAllKeys)\\n        : (isFlat ? keysIn : keys);\\n\\n    var props = isArr ? undefined : keysFunc(value);\\n    arrayEach(props || value, function(subValue, key) {\\n      if (props) {\\n        key = subValue;\\n        subValue = value[key];\\n      }\\n      // Recursively populate clone (susceptible to call stack limits).\\n      assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\\n    });\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\\n   * to provide to `func`.\\n   *\\n   * @private\\n   * @param {Function} func The function to delay.\\n   * @param {number} wait The number of milliseconds to delay invocation.\\n   * @param {Array} args The arguments to provide to `func`.\\n   * @returns {number|Object} Returns the timer id or timeout object.\\n   */\\n  function baseDelay(func, wait, args) {\\n    if (typeof func != 'function') {\\n      throw new TypeError(FUNC_ERROR_TEXT);\\n    }\\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\\n  }\\n\\n  /**\\n   * The base implementation of methods like `_.difference` without support\\n   * for excluding multiple arrays or iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array} array The array to inspect.\\n   * @param {Array} values The values to exclude.\\n   * @param {Function} [iteratee] The iteratee invoked per element.\\n   * @param {Function} [comparator] The comparator invoked per element.\\n   * @returns {Array} Returns the new array of filtered values.\\n   */\\n  function baseDifference(array, values, iteratee, comparator) {\\n    var index = -1,\\n        includes = arrayIncludes,\\n        isCommon = true,\\n        length = array.length,\\n        result = [],\\n        valuesLength = values.length;\\n\\n    if (!length) {\\n      return result;\\n    }\\n    if (iteratee) {\\n      values = arrayMap(values, baseUnary(iteratee));\\n    }\\n    if (comparator) {\\n      includes = arrayIncludesWith;\\n      isCommon = false;\\n    }\\n    else if (values.length >= LARGE_ARRAY_SIZE) {\\n      includes = cacheHas;\\n      isCommon = false;\\n      values = new SetCache(values);\\n    }\\n    outer:\\n        while (++index < length) {\\n          var value = array[index],\\n              computed = iteratee == null ? value : iteratee(value);\\n\\n          value = (comparator || value !== 0) ? value : 0;\\n          if (isCommon && computed === computed) {\\n            var valuesIndex = valuesLength;\\n            while (valuesIndex--) {\\n              if (values[valuesIndex] === computed) {\\n                continue outer;\\n              }\\n            }\\n            result.push(value);\\n          }\\n          else if (!includes(values, computed, comparator)) {\\n            result.push(value);\\n          }\\n        }\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} iteratee The function invoked per iteration.\\n   * @returns {Array|Object} Returns `collection`.\\n   */\\n  var baseEach = createBaseEach(baseForOwn);\\n\\n  /**\\n   * The base implementation of `_.every` without support for iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} predicate The function invoked per iteration.\\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\\n   *  else `false`\\n   */\\n  function baseEvery(collection, predicate) {\\n    var result = true;\\n    baseEach(collection, function(value, index, collection) {\\n      result = !!predicate(value, index, collection);\\n      return result;\\n    });\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\\n   * `comparator` to determine the extremum value.\\n   *\\n   * @private\\n   * @param {Array} array The array to iterate over.\\n   * @param {Function} iteratee The iteratee invoked per iteration.\\n   * @param {Function} comparator The comparator used to compare values.\\n   * @returns {*} Returns the extremum value.\\n   */\\n  function baseExtremum(array, iteratee, comparator) {\\n    var index = -1,\\n        length = array.length;\\n\\n    while (++index < length) {\\n      var value = array[index],\\n          current = iteratee(value);\\n\\n      if (current != null && (computed === undefined\\n              ? (current === current && !isSymbol(current))\\n              : comparator(current, computed)\\n      )) {\\n        var computed = current,\\n            result = value;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.filter` without support for iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} predicate The function invoked per iteration.\\n   * @returns {Array} Returns the new filtered array.\\n   */\\n  function baseFilter(collection, predicate) {\\n    var result = [];\\n    baseEach(collection, function(value, index, collection) {\\n      if (predicate(value, index, collection)) {\\n        result.push(value);\\n      }\\n    });\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.flatten` with support for restricting flattening.\\n   *\\n   * @private\\n   * @param {Array} array The array to flatten.\\n   * @param {number} depth The maximum recursion depth.\\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\\n   * @param {Array} [result=[]] The initial result value.\\n   * @returns {Array} Returns the new flattened array.\\n   */\\n  function baseFlatten(array, depth, predicate, isStrict, result) {\\n    var index = -1,\\n        length = array.length;\\n\\n    predicate || (predicate = isFlattenable);\\n    result || (result = []);\\n\\n    while (++index < length) {\\n      var value = array[index];\\n      if (depth > 0 && predicate(value)) {\\n        if (depth > 1) {\\n          // Recursively flatten arrays (susceptible to call stack limits).\\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\\n        } else {\\n          arrayPush(result, value);\\n        }\\n      } else if (!isStrict) {\\n        result[result.length] = value;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `baseForOwn` which iterates over `object`\\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\\n   *\\n   * @private\\n   * @param {Object} object The object to iterate over.\\n   * @param {Function} iteratee The function invoked per iteration.\\n   * @param {Function} keysFunc The function to get the keys of `object`.\\n   * @returns {Object} Returns `object`.\\n   */\\n  var baseFor = createBaseFor();\\n\\n  /**\\n   * This function is like `baseFor` except that it iterates over properties\\n   * in the opposite order.\\n   *\\n   * @private\\n   * @param {Object} object The object to iterate over.\\n   * @param {Function} iteratee The function invoked per iteration.\\n   * @param {Function} keysFunc The function to get the keys of `object`.\\n   * @returns {Object} Returns `object`.\\n   */\\n  var baseForRight = createBaseFor(true);\\n\\n  /**\\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Object} object The object to iterate over.\\n   * @param {Function} iteratee The function invoked per iteration.\\n   * @returns {Object} Returns `object`.\\n   */\\n  function baseForOwn(object, iteratee) {\\n    return object && baseFor(object, iteratee, keys);\\n  }\\n\\n  /**\\n   * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Object} object The object to iterate over.\\n   * @param {Function} iteratee The function invoked per iteration.\\n   * @returns {Object} Returns `object`.\\n   */\\n  function baseForOwnRight(object, iteratee) {\\n    return object && baseForRight(object, iteratee, keys);\\n  }\\n\\n  /**\\n   * The base implementation of `_.functions` which creates an array of\\n   * `object` function property names filtered from `props`.\\n   *\\n   * @private\\n   * @param {Object} object The object to inspect.\\n   * @param {Array} props The property names to filter.\\n   * @returns {Array} Returns the function names.\\n   */\\n  function baseFunctions(object, props) {\\n    return arrayFilter(props, function(key) {\\n      return isFunction(object[key]);\\n    });\\n  }\\n\\n  /**\\n   * The base implementation of `_.get` without support for default values.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @param {Array|string} path The path of the property to get.\\n   * @returns {*} Returns the resolved value.\\n   */\\n  function baseGet(object, path) {\\n    path = castPath(path, object);\\n\\n    var index = 0,\\n        length = path.length;\\n\\n    while (object != null && index < length) {\\n      object = object[toKey(path[index++])];\\n    }\\n    return (index && index == length) ? object : undefined;\\n  }\\n\\n  /**\\n   * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\\n   * `keysFunc` and `symbolsFunc` to get the enumerable property names and\\n   * symbols of `object`.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @param {Function} keysFunc The function to get the keys of `object`.\\n   * @param {Function} symbolsFunc The function to get the symbols of `object`.\\n   * @returns {Array} Returns the array of property names and symbols.\\n   */\\n  function baseGetAllKeys(object, keysFunc, symbolsFunc) {\\n    var result = keysFunc(object);\\n    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\\n  }\\n\\n  /**\\n   * The base implementation of `getTag` without fallbacks for buggy environments.\\n   *\\n   * @private\\n   * @param {*} value The value to query.\\n   * @returns {string} Returns the `toStringTag`.\\n   */\\n  function baseGetTag(value) {\\n    if (value == null) {\\n      return value === undefined ? undefinedTag : nullTag;\\n    }\\n    return (symToStringTag && symToStringTag in Object(value))\\n        ? getRawTag(value)\\n        : objectToString(value);\\n  }\\n\\n  /**\\n   * The base implementation of `_.gt` which doesn't coerce arguments.\\n   *\\n   * @private\\n   * @param {*} value The value to compare.\\n   * @param {*} other The other value to compare.\\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\\n   *  else `false`.\\n   */\\n  function baseGt(value, other) {\\n    return value > other;\\n  }\\n\\n  /**\\n   * The base implementation of `_.has` without support for deep paths.\\n   *\\n   * @private\\n   * @param {Object} [object] The object to query.\\n   * @param {Array|string} key The key to check.\\n   * @returns {boolean} Returns `true` if `key` exists, else `false`.\\n   */\\n  function baseHas(object, key) {\\n    return object != null && hasOwnProperty.call(object, key);\\n  }\\n\\n  /**\\n   * The base implementation of `_.hasIn` without support for deep paths.\\n   *\\n   * @private\\n   * @param {Object} [object] The object to query.\\n   * @param {Array|string} key The key to check.\\n   * @returns {boolean} Returns `true` if `key` exists, else `false`.\\n   */\\n  function baseHasIn(object, key) {\\n    return object != null && key in Object(object);\\n  }\\n\\n  /**\\n   * The base implementation of methods like `_.intersection`, without support\\n   * for iteratee shorthands, that accepts an array of arrays to inspect.\\n   *\\n   * @private\\n   * @param {Array} arrays The arrays to inspect.\\n   * @param {Function} [iteratee] The iteratee invoked per element.\\n   * @param {Function} [comparator] The comparator invoked per element.\\n   * @returns {Array} Returns the new array of shared values.\\n   */\\n  function baseIntersection(arrays, iteratee, comparator) {\\n    var includes = comparator ? arrayIncludesWith : arrayIncludes,\\n        length = arrays[0].length,\\n        othLength = arrays.length,\\n        othIndex = othLength,\\n        caches = Array(othLength),\\n        maxLength = Infinity,\\n        result = [];\\n\\n    while (othIndex--) {\\n      var array = arrays[othIndex];\\n      if (othIndex && iteratee) {\\n        array = arrayMap(array, baseUnary(iteratee));\\n      }\\n      maxLength = nativeMin(array.length, maxLength);\\n      caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\\n          ? new SetCache(othIndex && array)\\n          : undefined;\\n    }\\n    array = arrays[0];\\n\\n    var index = -1,\\n        seen = caches[0];\\n\\n    outer:\\n        while (++index < length && result.length < maxLength) {\\n          var value = array[index],\\n              computed = iteratee ? iteratee(value) : value;\\n\\n          value = (comparator || value !== 0) ? value : 0;\\n          if (!(seen\\n                  ? cacheHas(seen, computed)\\n                  : includes(result, computed, comparator)\\n          )) {\\n            othIndex = othLength;\\n            while (--othIndex) {\\n              var cache = caches[othIndex];\\n              if (!(cache\\n                  ? cacheHas(cache, computed)\\n                  : includes(arrays[othIndex], computed, comparator))\\n              ) {\\n                continue outer;\\n              }\\n            }\\n            if (seen) {\\n              seen.push(computed);\\n            }\\n            result.push(value);\\n          }\\n        }\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.invert` and `_.invertBy` which inverts\\n   * `object` with values transformed by `iteratee` and set by `setter`.\\n   *\\n   * @private\\n   * @param {Object} object The object to iterate over.\\n   * @param {Function} setter The function to set `accumulator` values.\\n   * @param {Function} iteratee The iteratee to transform values.\\n   * @param {Object} accumulator The initial inverted object.\\n   * @returns {Function} Returns `accumulator`.\\n   */\\n  function baseInverter(object, setter, iteratee, accumulator) {\\n    baseForOwn(object, function(value, key, object) {\\n      setter(accumulator, iteratee(value), key, object);\\n    });\\n    return accumulator;\\n  }\\n\\n  /**\\n   * The base implementation of `_.invoke` without support for individual\\n   * method arguments.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @param {Array|string} path The path of the method to invoke.\\n   * @param {Array} args The arguments to invoke the method with.\\n   * @returns {*} Returns the result of the invoked method.\\n   */\\n  function baseInvoke(object, path, args) {\\n    path = castPath(path, object);\\n    object = parent(object, path);\\n    var func = object == null ? object : object[toKey(last(path))];\\n    return func == null ? undefined : apply(func, object, args);\\n  }\\n\\n  /**\\n   * The base implementation of `_.isArguments`.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\\n   */\\n  function baseIsArguments(value) {\\n    return isObjectLike(value) && baseGetTag(value) == argsTag;\\n  }\\n\\n  /**\\n   * The base implementation of `_.isDate` without Node.js optimizations.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\\n   */\\n  function baseIsDate(value) {\\n    return isObjectLike(value) && baseGetTag(value) == dateTag;\\n  }\\n\\n  /**\\n   * The base implementation of `_.isEqual` which supports partial comparisons\\n   * and tracks traversed objects.\\n   *\\n   * @private\\n   * @param {*} value The value to compare.\\n   * @param {*} other The other value to compare.\\n   * @param {boolean} bitmask The bitmask flags.\\n   *  1 - Unordered comparison\\n   *  2 - Partial comparison\\n   * @param {Function} [customizer] The function to customize comparisons.\\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n   */\\n  function baseIsEqual(value, other, bitmask, customizer, stack) {\\n    if (value === other) {\\n      return true;\\n    }\\n    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\\n      return value !== value && other !== other;\\n    }\\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\\n  }\\n\\n  /**\\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\\n   * deep comparisons and tracks traversed objects enabling objects with circular\\n   * references to be compared.\\n   *\\n   * @private\\n   * @param {Object} object The object to compare.\\n   * @param {Object} other The other object to compare.\\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n   * @param {Function} customizer The function to customize comparisons.\\n   * @param {Function} equalFunc The function to determine equivalents of values.\\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n   */\\n  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\\n    var objIsArr = isArray(object),\\n        othIsArr = isArray(other),\\n        objTag = objIsArr ? arrayTag : getTag(object),\\n        othTag = othIsArr ? arrayTag : getTag(other);\\n\\n    objTag = objTag == argsTag ? objectTag : objTag;\\n    othTag = othTag == argsTag ? objectTag : othTag;\\n\\n    var objIsObj = objTag == objectTag,\\n        othIsObj = othTag == objectTag,\\n        isSameTag = objTag == othTag;\\n\\n    if (isSameTag && isBuffer(object)) {\\n      if (!isBuffer(other)) {\\n        return false;\\n      }\\n      objIsArr = true;\\n      objIsObj = false;\\n    }\\n    if (isSameTag && !objIsObj) {\\n      stack || (stack = new Stack);\\n      return (objIsArr || isTypedArray(object))\\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\\n    }\\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\\n\\n      if (objIsWrapped || othIsWrapped) {\\n        var objUnwrapped = objIsWrapped ? object.value() : object,\\n            othUnwrapped = othIsWrapped ? other.value() : other;\\n\\n        stack || (stack = new Stack);\\n        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\\n      }\\n    }\\n    if (!isSameTag) {\\n      return false;\\n    }\\n    stack || (stack = new Stack);\\n    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\\n  }\\n\\n  /**\\n   * The base implementation of `_.isMap` without Node.js optimizations.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a map, else `false`.\\n   */\\n  function baseIsMap(value) {\\n    return isObjectLike(value) && getTag(value) == mapTag;\\n  }\\n\\n  /**\\n   * The base implementation of `_.isMatch` without support for iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Object} object The object to inspect.\\n   * @param {Object} source The object of property values to match.\\n   * @param {Array} matchData The property names, values, and compare flags to match.\\n   * @param {Function} [customizer] The function to customize comparisons.\\n   * @returns {boolean} Returns `true` if `object` is a match, else `false`.\\n   */\\n  function baseIsMatch(object, source, matchData, customizer) {\\n    var index = matchData.length,\\n        length = index,\\n        noCustomizer = !customizer;\\n\\n    if (object == null) {\\n      return !length;\\n    }\\n    object = Object(object);\\n    while (index--) {\\n      var data = matchData[index];\\n      if ((noCustomizer && data[2])\\n          ? data[1] !== object[data[0]]\\n          : !(data[0] in object)\\n      ) {\\n        return false;\\n      }\\n    }\\n    while (++index < length) {\\n      data = matchData[index];\\n      var key = data[0],\\n          objValue = object[key],\\n          srcValue = data[1];\\n\\n      if (noCustomizer && data[2]) {\\n        if (objValue === undefined && !(key in object)) {\\n          return false;\\n        }\\n      } else {\\n        var stack = new Stack;\\n        if (customizer) {\\n          var result = customizer(objValue, srcValue, key, object, source, stack);\\n        }\\n        if (!(result === undefined\\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\\n                : result\\n        )) {\\n          return false;\\n        }\\n      }\\n    }\\n    return true;\\n  }\\n\\n  /**\\n   * The base implementation of `_.isNative` without bad shim checks.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a native function,\\n   *  else `false`.\\n   */\\n  function baseIsNative(value) {\\n    if (!isObject(value) || isMasked(value)) {\\n      return false;\\n    }\\n    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\\n    return pattern.test(toSource(value));\\n  }\\n\\n  /**\\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\\n   */\\n  function baseIsRegExp(value) {\\n    return isObjectLike(value) && baseGetTag(value) == regexpTag;\\n  }\\n\\n  /**\\n   * The base implementation of `_.isSet` without Node.js optimizations.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a set, else `false`.\\n   */\\n  function baseIsSet(value) {\\n    return isObjectLike(value) && getTag(value) == setTag;\\n  }\\n\\n  /**\\n   * The base implementation of `_.isTypedArray` without Node.js optimizations.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\n   */\\n  function baseIsTypedArray(value) {\\n    return isObjectLike(value) &&\\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\\n  }\\n\\n  /**\\n   * The base implementation of `_.iteratee`.\\n   *\\n   * @private\\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\\n   * @returns {Function} Returns the iteratee.\\n   */\\n  function baseIteratee(value) {\\n    // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\\n    // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\\n    if (typeof value == 'function') {\\n      return value;\\n    }\\n    if (value == null) {\\n      return identity;\\n    }\\n    if (typeof value == 'object') {\\n      return isArray(value)\\n          ? baseMatchesProperty(value[0], value[1])\\n          : baseMatches(value);\\n    }\\n    return property(value);\\n  }\\n\\n  /**\\n   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @returns {Array} Returns the array of property names.\\n   */\\n  function baseKeys(object) {\\n    if (!isPrototype(object)) {\\n      return nativeKeys(object);\\n    }\\n    var result = [];\\n    for (var key in Object(object)) {\\n      if (hasOwnProperty.call(object, key) && key != 'constructor') {\\n        result.push(key);\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @returns {Array} Returns the array of property names.\\n   */\\n  function baseKeysIn(object) {\\n    if (!isObject(object)) {\\n      return nativeKeysIn(object);\\n    }\\n    var isProto = isPrototype(object),\\n        result = [];\\n\\n    for (var key in object) {\\n      if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\\n        result.push(key);\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.lt` which doesn't coerce arguments.\\n   *\\n   * @private\\n   * @param {*} value The value to compare.\\n   * @param {*} other The other value to compare.\\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\\n   *  else `false`.\\n   */\\n  function baseLt(value, other) {\\n    return value < other;\\n  }\\n\\n  /**\\n   * The base implementation of `_.map` without support for iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} iteratee The function invoked per iteration.\\n   * @returns {Array} Returns the new mapped array.\\n   */\\n  function baseMap(collection, iteratee) {\\n    var index = -1,\\n        result = isArrayLike(collection) ? Array(collection.length) : [];\\n\\n    baseEach(collection, function(value, key, collection) {\\n      result[++index] = iteratee(value, key, collection);\\n    });\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.matches` which doesn't clone `source`.\\n   *\\n   * @private\\n   * @param {Object} source The object of property values to match.\\n   * @returns {Function} Returns the new spec function.\\n   */\\n  function baseMatches(source) {\\n    var matchData = getMatchData(source);\\n    if (matchData.length == 1 && matchData[0][2]) {\\n      return matchesStrictComparable(matchData[0][0], matchData[0][1]);\\n    }\\n    return function(object) {\\n      return object === source || baseIsMatch(object, source, matchData);\\n    };\\n  }\\n\\n  /**\\n   * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\\n   *\\n   * @private\\n   * @param {string} path The path of the property to get.\\n   * @param {*} srcValue The value to match.\\n   * @returns {Function} Returns the new spec function.\\n   */\\n  function baseMatchesProperty(path, srcValue) {\\n    if (isKey(path) && isStrictComparable(srcValue)) {\\n      return matchesStrictComparable(toKey(path), srcValue);\\n    }\\n    return function(object) {\\n      var objValue = get(object, path);\\n      return (objValue === undefined && objValue === srcValue)\\n          ? hasIn(object, path)\\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\\n    };\\n  }\\n\\n  /**\\n   * The base implementation of `_.merge` without support for multiple sources.\\n   *\\n   * @private\\n   * @param {Object} object The destination object.\\n   * @param {Object} source The source object.\\n   * @param {number} srcIndex The index of `source`.\\n   * @param {Function} [customizer] The function to customize merged values.\\n   * @param {Object} [stack] Tracks traversed source values and their merged\\n   *  counterparts.\\n   */\\n  function baseMerge(object, source, srcIndex, customizer, stack) {\\n    if (object === source) {\\n      return;\\n    }\\n    baseFor(source, function(srcValue, key) {\\n      if (isObject(srcValue)) {\\n        stack || (stack = new Stack);\\n        baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\\n      }\\n      else {\\n        var newValue = customizer\\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\\n            : undefined;\\n\\n        if (newValue === undefined) {\\n          newValue = srcValue;\\n        }\\n        assignMergeValue(object, key, newValue);\\n      }\\n    }, keysIn);\\n  }\\n\\n  /**\\n   * A specialized version of `baseMerge` for arrays and objects which performs\\n   * deep merges and tracks traversed objects enabling objects with circular\\n   * references to be merged.\\n   *\\n   * @private\\n   * @param {Object} object The destination object.\\n   * @param {Object} source The source object.\\n   * @param {string} key The key of the value to merge.\\n   * @param {number} srcIndex The index of `source`.\\n   * @param {Function} mergeFunc The function to merge values.\\n   * @param {Function} [customizer] The function to customize assigned values.\\n   * @param {Object} [stack] Tracks traversed source values and their merged\\n   *  counterparts.\\n   */\\n  function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\\n    var objValue = safeGet(object, key),\\n        srcValue = safeGet(source, key),\\n        stacked = stack.get(srcValue);\\n\\n    if (stacked) {\\n      assignMergeValue(object, key, stacked);\\n      return;\\n    }\\n    var newValue = customizer\\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\\n        : undefined;\\n\\n    var isCommon = newValue === undefined;\\n\\n    if (isCommon) {\\n      var isArr = isArray(srcValue),\\n          isBuff = !isArr && isBuffer(srcValue),\\n          isTyped = !isArr && !isBuff && isTypedArray(srcValue);\\n\\n      newValue = srcValue;\\n      if (isArr || isBuff || isTyped) {\\n        if (isArray(objValue)) {\\n          newValue = objValue;\\n        }\\n        else if (isArrayLikeObject(objValue)) {\\n          newValue = copyArray(objValue);\\n        }\\n        else if (isBuff) {\\n          isCommon = false;\\n          newValue = cloneBuffer(srcValue, true);\\n        }\\n        else if (isTyped) {\\n          isCommon = false;\\n          newValue = cloneTypedArray(srcValue, true);\\n        }\\n        else {\\n          newValue = [];\\n        }\\n      }\\n      else if (isPlainObject(srcValue) || isArguments(srcValue)) {\\n        newValue = objValue;\\n        if (isArguments(objValue)) {\\n          newValue = toPlainObject(objValue);\\n        }\\n        else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\\n          newValue = initCloneObject(srcValue);\\n        }\\n      }\\n      else {\\n        isCommon = false;\\n      }\\n    }\\n    if (isCommon) {\\n      // Recursively merge objects and arrays (susceptible to call stack limits).\\n      stack.set(srcValue, newValue);\\n      mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\\n      stack['delete'](srcValue);\\n    }\\n    assignMergeValue(object, key, newValue);\\n  }\\n\\n  /**\\n   * The base implementation of `_.orderBy` without param guards.\\n   *\\n   * @private\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\\n   * @param {string[]} orders The sort orders of `iteratees`.\\n   * @returns {Array} Returns the new sorted array.\\n   */\\n  function baseOrderBy(collection, iteratees, orders) {\\n    var index = -1;\\n    iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\\n\\n    var result = baseMap(collection, function(value, key, collection) {\\n      var criteria = arrayMap(iteratees, function(iteratee) {\\n        return iteratee(value);\\n      });\\n      return { 'criteria': criteria, 'index': ++index, 'value': value };\\n    });\\n\\n    return baseSortBy(result, function(object, other) {\\n      return compareMultiple(object, other, orders);\\n    });\\n  }\\n\\n  /**\\n   * The base implementation of `_.pick` without support for individual\\n   * property identifiers.\\n   *\\n   * @private\\n   * @param {Object} object The source object.\\n   * @param {string[]} paths The property paths to pick.\\n   * @returns {Object} Returns the new object.\\n   */\\n  function basePick(object, paths) {\\n    return basePickBy(object, paths, function(value, path) {\\n      return hasIn(object, path);\\n    });\\n  }\\n\\n  /**\\n   * The base implementation of  `_.pickBy` without support for iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Object} object The source object.\\n   * @param {string[]} paths The property paths to pick.\\n   * @param {Function} predicate The function invoked per property.\\n   * @returns {Object} Returns the new object.\\n   */\\n  function basePickBy(object, paths, predicate) {\\n    var index = -1,\\n        length = paths.length,\\n        result = {};\\n\\n    while (++index < length) {\\n      var path = paths[index],\\n          value = baseGet(object, path);\\n\\n      if (predicate(value, path)) {\\n        baseSet(result, castPath(path, object), value);\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * A specialized version of `baseProperty` which supports deep paths.\\n   *\\n   * @private\\n   * @param {Array|string} path The path of the property to get.\\n   * @returns {Function} Returns the new accessor function.\\n   */\\n  function basePropertyDeep(path) {\\n    return function(object) {\\n      return baseGet(object, path);\\n    };\\n  }\\n\\n  /**\\n   * The base implementation of `_.random` without support for returning\\n   * floating-point numbers.\\n   *\\n   * @private\\n   * @param {number} lower The lower bound.\\n   * @param {number} upper The upper bound.\\n   * @returns {number} Returns the random number.\\n   */\\n  function baseRandom(lower, upper) {\\n    return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\\n  }\\n\\n  /**\\n   * The base implementation of `_.range` and `_.rangeRight` which doesn't\\n   * coerce arguments.\\n   *\\n   * @private\\n   * @param {number} start The start of the range.\\n   * @param {number} end The end of the range.\\n   * @param {number} step The value to increment or decrement by.\\n   * @param {boolean} [fromRight] Specify iterating from right to left.\\n   * @returns {Array} Returns the range of numbers.\\n   */\\n  function baseRange(start, end, step, fromRight) {\\n    var index = -1,\\n        length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\\n        result = Array(length);\\n\\n    while (length--) {\\n      result[fromRight ? length : ++index] = start;\\n      start += step;\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\\n   *\\n   * @private\\n   * @param {Function} func The function to apply a rest parameter to.\\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\\n   * @returns {Function} Returns the new function.\\n   */\\n  function baseRest(func, start) {\\n    return setToString(overRest(func, start, identity), func + '');\\n  }\\n\\n  /**\\n   * The base implementation of `_.set`.\\n   *\\n   * @private\\n   * @param {Object} object The object to modify.\\n   * @param {Array|string} path The path of the property to set.\\n   * @param {*} value The value to set.\\n   * @param {Function} [customizer] The function to customize path creation.\\n   * @returns {Object} Returns `object`.\\n   */\\n  function baseSet(object, path, value, customizer) {\\n    if (!isObject(object)) {\\n      return object;\\n    }\\n    path = castPath(path, object);\\n\\n    var index = -1,\\n        length = path.length,\\n        lastIndex = length - 1,\\n        nested = object;\\n\\n    while (nested != null && ++index < length) {\\n      var key = toKey(path[index]),\\n          newValue = value;\\n\\n      if (index != lastIndex) {\\n        var objValue = nested[key];\\n        newValue = customizer ? customizer(objValue, key, nested) : undefined;\\n        if (newValue === undefined) {\\n          newValue = isObject(objValue)\\n              ? objValue\\n              : (isIndex(path[index + 1]) ? [] : {});\\n        }\\n      }\\n      assignValue(nested, key, newValue);\\n      nested = nested[key];\\n    }\\n    return object;\\n  }\\n\\n  /**\\n   * The base implementation of `setData` without support for hot loop shorting.\\n   *\\n   * @private\\n   * @param {Function} func The function to associate metadata with.\\n   * @param {*} data The metadata.\\n   * @returns {Function} Returns `func`.\\n   */\\n  var baseSetData = !metaMap ? identity : function(func, data) {\\n    metaMap.set(func, data);\\n    return func;\\n  };\\n\\n  /**\\n   * The base implementation of `setToString` without support for hot loop shorting.\\n   *\\n   * @private\\n   * @param {Function} func The function to modify.\\n   * @param {Function} string The `toString` result.\\n   * @returns {Function} Returns `func`.\\n   */\\n  var baseSetToString = !defineProperty ? identity : function(func, string) {\\n    return defineProperty(func, 'toString', {\\n      'configurable': true,\\n      'enumerable': false,\\n      'value': constant(string),\\n      'writable': true\\n    });\\n  };\\n\\n  /**\\n   * The base implementation of `_.slice` without an iteratee call guard.\\n   *\\n   * @private\\n   * @param {Array} array The array to slice.\\n   * @param {number} [start=0] The start position.\\n   * @param {number} [end=array.length] The end position.\\n   * @returns {Array} Returns the slice of `array`.\\n   */\\n  function baseSlice(array, start, end) {\\n    var index = -1,\\n        length = array.length;\\n\\n    if (start < 0) {\\n      start = -start > length ? 0 : (length + start);\\n    }\\n    end = end > length ? length : end;\\n    if (end < 0) {\\n      end += length;\\n    }\\n    length = start > end ? 0 : ((end - start) >>> 0);\\n    start >>>= 0;\\n\\n    var result = Array(length);\\n    while (++index < length) {\\n      result[index] = array[index + start];\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.some` without support for iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} predicate The function invoked per iteration.\\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\\n   *  else `false`.\\n   */\\n  function baseSome(collection, predicate) {\\n    var result;\\n\\n    baseEach(collection, function(value, index, collection) {\\n      result = predicate(value, index, collection);\\n      return !result;\\n    });\\n    return !!result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.toString` which doesn't convert nullish\\n   * values to empty strings.\\n   *\\n   * @private\\n   * @param {*} value The value to process.\\n   * @returns {string} Returns the string.\\n   */\\n  function baseToString(value) {\\n    // Exit early for strings to avoid a performance hit in some environments.\\n    if (typeof value == 'string') {\\n      return value;\\n    }\\n    if (isArray(value)) {\\n      // Recursively convert values (susceptible to call stack limits).\\n      return arrayMap(value, baseToString) + '';\\n    }\\n    if (isSymbol(value)) {\\n      return symbolToString ? symbolToString.call(value) : '';\\n    }\\n    var result = (value + '');\\n    return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.uniqBy` without support for iteratee shorthands.\\n   *\\n   * @private\\n   * @param {Array} array The array to inspect.\\n   * @param {Function} [iteratee] The iteratee invoked per element.\\n   * @param {Function} [comparator] The comparator invoked per element.\\n   * @returns {Array} Returns the new duplicate free array.\\n   */\\n  function baseUniq(array, iteratee, comparator) {\\n    var index = -1,\\n        includes = arrayIncludes,\\n        length = array.length,\\n        isCommon = true,\\n        result = [],\\n        seen = result;\\n\\n    if (comparator) {\\n      isCommon = false;\\n      includes = arrayIncludesWith;\\n    }\\n    else if (length >= LARGE_ARRAY_SIZE) {\\n      var set = iteratee ? null : createSet(array);\\n      if (set) {\\n        return setToArray(set);\\n      }\\n      isCommon = false;\\n      includes = cacheHas;\\n      seen = new SetCache;\\n    }\\n    else {\\n      seen = iteratee ? [] : result;\\n    }\\n    outer:\\n        while (++index < length) {\\n          var value = array[index],\\n              computed = iteratee ? iteratee(value) : value;\\n\\n          value = (comparator || value !== 0) ? value : 0;\\n          if (isCommon && computed === computed) {\\n            var seenIndex = seen.length;\\n            while (seenIndex--) {\\n              if (seen[seenIndex] === computed) {\\n                continue outer;\\n              }\\n            }\\n            if (iteratee) {\\n              seen.push(computed);\\n            }\\n            result.push(value);\\n          }\\n          else if (!includes(seen, computed, comparator)) {\\n            if (seen !== result) {\\n              seen.push(computed);\\n            }\\n            result.push(value);\\n          }\\n        }\\n    return result;\\n  }\\n\\n  /**\\n   * The base implementation of `_.unset`.\\n   *\\n   * @private\\n   * @param {Object} object The object to modify.\\n   * @param {Array|string} path The property path to unset.\\n   * @returns {boolean} Returns `true` if the property is deleted, else `false`.\\n   */\\n  function baseUnset(object, path) {\\n    path = castPath(path, object);\\n    object = parent(object, path);\\n    return object == null || delete object[toKey(last(path))];\\n  }\\n\\n  /**\\n   * The base implementation of `wrapperValue` which returns the result of\\n   * performing a sequence of actions on the unwrapped `value`, where each\\n   * successive action is supplied the return value of the previous.\\n   *\\n   * @private\\n   * @param {*} value The unwrapped value.\\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\\n   * @returns {*} Returns the resolved value.\\n   */\\n  function baseWrapperValue(value, actions) {\\n    var result = value;\\n    if (result instanceof LazyWrapper) {\\n      result = result.value();\\n    }\\n    return arrayReduce(actions, function(result, action) {\\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\\n    }, result);\\n  }\\n\\n  /**\\n   * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\\n   *\\n   * @private\\n   * @param {Array} props The property identifiers.\\n   * @param {Array} values The property values.\\n   * @param {Function} assignFunc The function to assign values.\\n   * @returns {Object} Returns the new object.\\n   */\\n  function baseZipObject(props, values, assignFunc) {\\n    var index = -1,\\n        length = props.length,\\n        valsLength = values.length,\\n        result = {};\\n\\n    while (++index < length) {\\n      var value = index < valsLength ? values[index] : undefined;\\n      assignFunc(result, props[index], value);\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Casts `value` to an empty array if it's not an array like object.\\n   *\\n   * @private\\n   * @param {*} value The value to inspect.\\n   * @returns {Array|Object} Returns the cast array-like object.\\n   */\\n  function castArrayLikeObject(value) {\\n    return isArrayLikeObject(value) ? value : [];\\n  }\\n\\n  /**\\n   * Casts `value` to a path array if it's not one.\\n   *\\n   * @private\\n   * @param {*} value The value to inspect.\\n   * @param {Object} [object] The object to query keys on.\\n   * @returns {Array} Returns the cast property path array.\\n   */\\n  function castPath(value, object) {\\n    if (isArray(value)) {\\n      return value;\\n    }\\n    return isKey(value, object) ? [value] : stringToPath(toString(value));\\n  }\\n\\n  /**\\n   * Casts `array` to a slice if it's needed.\\n   *\\n   * @private\\n   * @param {Array} array The array to inspect.\\n   * @param {number} start The start position.\\n   * @param {number} [end=array.length] The end position.\\n   * @returns {Array} Returns the cast slice.\\n   */\\n  function castSlice(array, start, end) {\\n    var length = array.length;\\n    end = end === undefined ? length : end;\\n    return (!start && end >= length) ? array : baseSlice(array, start, end);\\n  }\\n\\n  /**\\n   * Creates a clone of  `buffer`.\\n   *\\n   * @private\\n   * @param {Buffer} buffer The buffer to clone.\\n   * @param {boolean} [isDeep] Specify a deep clone.\\n   * @returns {Buffer} Returns the cloned buffer.\\n   */\\n  function cloneBuffer(buffer, isDeep) {\\n    if (isDeep) {\\n      return buffer.slice();\\n    }\\n    var length = buffer.length,\\n        result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\\n\\n    buffer.copy(result);\\n    return result;\\n  }\\n\\n  /**\\n   * Creates a clone of `arrayBuffer`.\\n   *\\n   * @private\\n   * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\\n   * @returns {ArrayBuffer} Returns the cloned array buffer.\\n   */\\n  function cloneArrayBuffer(arrayBuffer) {\\n    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\\n    new Uint8Array(result).set(new Uint8Array(arrayBuffer));\\n    return result;\\n  }\\n\\n  /**\\n   * Creates a clone of `dataView`.\\n   *\\n   * @private\\n   * @param {Object} dataView The data view to clone.\\n   * @param {boolean} [isDeep] Specify a deep clone.\\n   * @returns {Object} Returns the cloned data view.\\n   */\\n  function cloneDataView(dataView, isDeep) {\\n    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\\n    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\\n  }\\n\\n  /**\\n   * Creates a clone of `regexp`.\\n   *\\n   * @private\\n   * @param {Object} regexp The regexp to clone.\\n   * @returns {Object} Returns the cloned regexp.\\n   */\\n  function cloneRegExp(regexp) {\\n    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\\n    result.lastIndex = regexp.lastIndex;\\n    return result;\\n  }\\n\\n  /**\\n   * Creates a clone of the `symbol` object.\\n   *\\n   * @private\\n   * @param {Object} symbol The symbol object to clone.\\n   * @returns {Object} Returns the cloned symbol object.\\n   */\\n  function cloneSymbol(symbol) {\\n    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\\n  }\\n\\n  /**\\n   * Creates a clone of `typedArray`.\\n   *\\n   * @private\\n   * @param {Object} typedArray The typed array to clone.\\n   * @param {boolean} [isDeep] Specify a deep clone.\\n   * @returns {Object} Returns the cloned typed array.\\n   */\\n  function cloneTypedArray(typedArray, isDeep) {\\n    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\\n    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\\n  }\\n\\n  /**\\n   * Compares values to sort them in ascending order.\\n   *\\n   * @private\\n   * @param {*} value The value to compare.\\n   * @param {*} other The other value to compare.\\n   * @returns {number} Returns the sort order indicator for `value`.\\n   */\\n  function compareAscending(value, other) {\\n    if (value !== other) {\\n      var valIsDefined = value !== undefined,\\n          valIsNull = value === null,\\n          valIsReflexive = value === value,\\n          valIsSymbol = isSymbol(value);\\n\\n      var othIsDefined = other !== undefined,\\n          othIsNull = other === null,\\n          othIsReflexive = other === other,\\n          othIsSymbol = isSymbol(other);\\n\\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\\n          (valIsNull && othIsDefined && othIsReflexive) ||\\n          (!valIsDefined && othIsReflexive) ||\\n          !valIsReflexive) {\\n        return 1;\\n      }\\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\\n          (othIsNull && valIsDefined && valIsReflexive) ||\\n          (!othIsDefined && valIsReflexive) ||\\n          !othIsReflexive) {\\n        return -1;\\n      }\\n    }\\n    return 0;\\n  }\\n\\n  /**\\n   * Used by `_.orderBy` to compare multiple properties of a value to another\\n   * and stable sort them.\\n   *\\n   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\\n   * specify an order of \\\"desc\\\" for descending or \\\"asc\\\" for ascending sort order\\n   * of corresponding values.\\n   *\\n   * @private\\n   * @param {Object} object The object to compare.\\n   * @param {Object} other The other object to compare.\\n   * @param {boolean[]|string[]} orders The order to sort by for each property.\\n   * @returns {number} Returns the sort order indicator for `object`.\\n   */\\n  function compareMultiple(object, other, orders) {\\n    var index = -1,\\n        objCriteria = object.criteria,\\n        othCriteria = other.criteria,\\n        length = objCriteria.length,\\n        ordersLength = orders.length;\\n\\n    while (++index < length) {\\n      var result = compareAscending(objCriteria[index], othCriteria[index]);\\n      if (result) {\\n        if (index >= ordersLength) {\\n          return result;\\n        }\\n        var order = orders[index];\\n        return result * (order == 'desc' ? -1 : 1);\\n      }\\n    }\\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\\n    // that causes it, under certain circumstances, to provide the same value for\\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\\n    // for more details.\\n    //\\n    // This also ensures a stable sort in V8 and other engines.\\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\\n    return object.index - other.index;\\n  }\\n\\n  /**\\n   * Creates an array that is the composition of partially applied arguments,\\n   * placeholders, and provided arguments into a single array of arguments.\\n   *\\n   * @private\\n   * @param {Array} args The provided arguments.\\n   * @param {Array} partials The arguments to prepend to those provided.\\n   * @param {Array} holders The `partials` placeholder indexes.\\n   * @params {boolean} [isCurried] Specify composing for a curried function.\\n   * @returns {Array} Returns the new array of composed arguments.\\n   */\\n  function composeArgs(args, partials, holders, isCurried) {\\n    var argsIndex = -1,\\n        argsLength = args.length,\\n        holdersLength = holders.length,\\n        leftIndex = -1,\\n        leftLength = partials.length,\\n        rangeLength = nativeMax(argsLength - holdersLength, 0),\\n        result = Array(leftLength + rangeLength),\\n        isUncurried = !isCurried;\\n\\n    while (++leftIndex < leftLength) {\\n      result[leftIndex] = partials[leftIndex];\\n    }\\n    while (++argsIndex < holdersLength) {\\n      if (isUncurried || argsIndex < argsLength) {\\n        result[holders[argsIndex]] = args[argsIndex];\\n      }\\n    }\\n    while (rangeLength--) {\\n      result[leftIndex++] = args[argsIndex++];\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * This function is like `composeArgs` except that the arguments composition\\n   * is tailored for `_.partialRight`.\\n   *\\n   * @private\\n   * @param {Array} args The provided arguments.\\n   * @param {Array} partials The arguments to append to those provided.\\n   * @param {Array} holders The `partials` placeholder indexes.\\n   * @params {boolean} [isCurried] Specify composing for a curried function.\\n   * @returns {Array} Returns the new array of composed arguments.\\n   */\\n  function composeArgsRight(args, partials, holders, isCurried) {\\n    var argsIndex = -1,\\n        argsLength = args.length,\\n        holdersIndex = -1,\\n        holdersLength = holders.length,\\n        rightIndex = -1,\\n        rightLength = partials.length,\\n        rangeLength = nativeMax(argsLength - holdersLength, 0),\\n        result = Array(rangeLength + rightLength),\\n        isUncurried = !isCurried;\\n\\n    while (++argsIndex < rangeLength) {\\n      result[argsIndex] = args[argsIndex];\\n    }\\n    var offset = argsIndex;\\n    while (++rightIndex < rightLength) {\\n      result[offset + rightIndex] = partials[rightIndex];\\n    }\\n    while (++holdersIndex < holdersLength) {\\n      if (isUncurried || argsIndex < argsLength) {\\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Copies the values of `source` to `array`.\\n   *\\n   * @private\\n   * @param {Array} source The array to copy values from.\\n   * @param {Array} [array=[]] The array to copy values to.\\n   * @returns {Array} Returns `array`.\\n   */\\n  function copyArray(source, array) {\\n    var index = -1,\\n        length = source.length;\\n\\n    array || (array = Array(length));\\n    while (++index < length) {\\n      array[index] = source[index];\\n    }\\n    return array;\\n  }\\n\\n  /**\\n   * Copies properties of `source` to `object`.\\n   *\\n   * @private\\n   * @param {Object} source The object to copy properties from.\\n   * @param {Array} props The property identifiers to copy.\\n   * @param {Object} [object={}] The object to copy properties to.\\n   * @param {Function} [customizer] The function to customize copied values.\\n   * @returns {Object} Returns `object`.\\n   */\\n  function copyObject(source, props, object, customizer) {\\n    var isNew = !object;\\n    object || (object = {});\\n\\n    var index = -1,\\n        length = props.length;\\n\\n    while (++index < length) {\\n      var key = props[index];\\n\\n      var newValue = customizer\\n          ? customizer(object[key], source[key], key, object, source)\\n          : undefined;\\n\\n      if (newValue === undefined) {\\n        newValue = source[key];\\n      }\\n      if (isNew) {\\n        baseAssignValue(object, key, newValue);\\n      } else {\\n        assignValue(object, key, newValue);\\n      }\\n    }\\n    return object;\\n  }\\n\\n  /**\\n   * Copies own symbols of `source` to `object`.\\n   *\\n   * @private\\n   * @param {Object} source The object to copy symbols from.\\n   * @param {Object} [object={}] The object to copy symbols to.\\n   * @returns {Object} Returns `object`.\\n   */\\n  function copySymbols(source, object) {\\n    return copyObject(source, getSymbols(source), object);\\n  }\\n\\n  /**\\n   * Copies own and inherited symbols of `source` to `object`.\\n   *\\n   * @private\\n   * @param {Object} source The object to copy symbols from.\\n   * @param {Object} [object={}] The object to copy symbols to.\\n   * @returns {Object} Returns `object`.\\n   */\\n  function copySymbolsIn(source, object) {\\n    return copyObject(source, getSymbolsIn(source), object);\\n  }\\n\\n  /**\\n   * Creates a function like `_.groupBy`.\\n   *\\n   * @private\\n   * @param {Function} setter The function to set accumulator values.\\n   * @param {Function} [initializer] The accumulator object initializer.\\n   * @returns {Function} Returns the new aggregator function.\\n   */\\n  function createAggregator(setter, initializer) {\\n    return function(collection, iteratee) {\\n      var func = isArray(collection) ? arrayAggregator : baseAggregator,\\n          accumulator = initializer ? initializer() : {};\\n\\n      return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\\n    };\\n  }\\n\\n  /**\\n   * Creates a function like `_.assign`.\\n   *\\n   * @private\\n   * @param {Function} assigner The function to assign values.\\n   * @returns {Function} Returns the new assigner function.\\n   */\\n  function createAssigner(assigner) {\\n    return baseRest(function(object, sources) {\\n      var index = -1,\\n          length = sources.length,\\n          customizer = length > 1 ? sources[length - 1] : undefined,\\n          guard = length > 2 ? sources[2] : undefined;\\n\\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\\n          ? (length--, customizer)\\n          : undefined;\\n\\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\\n        customizer = length < 3 ? undefined : customizer;\\n        length = 1;\\n      }\\n      object = Object(object);\\n      while (++index < length) {\\n        var source = sources[index];\\n        if (source) {\\n          assigner(object, source, index, customizer);\\n        }\\n      }\\n      return object;\\n    });\\n  }\\n\\n  /**\\n   * Creates a `baseEach` or `baseEachRight` function.\\n   *\\n   * @private\\n   * @param {Function} eachFunc The function to iterate over a collection.\\n   * @param {boolean} [fromRight] Specify iterating from right to left.\\n   * @returns {Function} Returns the new base function.\\n   */\\n  function createBaseEach(eachFunc, fromRight) {\\n    return function(collection, iteratee) {\\n      if (collection == null) {\\n        return collection;\\n      }\\n      if (!isArrayLike(collection)) {\\n        return eachFunc(collection, iteratee);\\n      }\\n      var length = collection.length,\\n          index = fromRight ? length : -1,\\n          iterable = Object(collection);\\n\\n      while ((fromRight ? index-- : ++index < length)) {\\n        if (iteratee(iterable[index], index, iterable) === false) {\\n          break;\\n        }\\n      }\\n      return collection;\\n    };\\n  }\\n\\n  /**\\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\\n   *\\n   * @private\\n   * @param {boolean} [fromRight] Specify iterating from right to left.\\n   * @returns {Function} Returns the new base function.\\n   */\\n  function createBaseFor(fromRight) {\\n    return function(object, iteratee, keysFunc) {\\n      var index = -1,\\n          iterable = Object(object),\\n          props = keysFunc(object),\\n          length = props.length;\\n\\n      while (length--) {\\n        var key = props[fromRight ? length : ++index];\\n        if (iteratee(iterable[key], key, iterable) === false) {\\n          break;\\n        }\\n      }\\n      return object;\\n    };\\n  }\\n\\n  /**\\n   * Creates a function that wraps `func` to invoke it with the optional `this`\\n   * binding of `thisArg`.\\n   *\\n   * @private\\n   * @param {Function} func The function to wrap.\\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\n   * @param {*} [thisArg] The `this` binding of `func`.\\n   * @returns {Function} Returns the new wrapped function.\\n   */\\n  function createBind(func, bitmask, thisArg) {\\n    var isBind = bitmask & WRAP_BIND_FLAG,\\n        Ctor = createCtor(func);\\n\\n    function wrapper() {\\n      var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\\n      return fn.apply(isBind ? thisArg : this, arguments);\\n    }\\n    return wrapper;\\n  }\\n\\n  /**\\n   * Creates a function that produces an instance of `Ctor` regardless of\\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\\n   *\\n   * @private\\n   * @param {Function} Ctor The constructor to wrap.\\n   * @returns {Function} Returns the new wrapped function.\\n   */\\n  function createCtor(Ctor) {\\n    return function() {\\n      // Use a `switch` statement to work with class constructors. See\\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\\n      // for more details.\\n      var args = arguments;\\n      switch (args.length) {\\n        case 0: return new Ctor;\\n        case 1: return new Ctor(args[0]);\\n        case 2: return new Ctor(args[0], args[1]);\\n        case 3: return new Ctor(args[0], args[1], args[2]);\\n        case 4: return new Ctor(args[0], args[1], args[2], args[3]);\\n        case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\\n        case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\\n        case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\\n      }\\n      var thisBinding = baseCreate(Ctor.prototype),\\n          result = Ctor.apply(thisBinding, args);\\n\\n      // Mimic the constructor's `return` behavior.\\n      // See https://es5.github.io/#x13.2.2 for more details.\\n      return isObject(result) ? result : thisBinding;\\n    };\\n  }\\n\\n  /**\\n   * Creates a function that wraps `func` to enable currying.\\n   *\\n   * @private\\n   * @param {Function} func The function to wrap.\\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\n   * @param {number} arity The arity of `func`.\\n   * @returns {Function} Returns the new wrapped function.\\n   */\\n  function createCurry(func, bitmask, arity) {\\n    var Ctor = createCtor(func);\\n\\n    function wrapper() {\\n      var length = arguments.length,\\n          args = Array(length),\\n          index = length,\\n          placeholder = getHolder(wrapper);\\n\\n      while (index--) {\\n        args[index] = arguments[index];\\n      }\\n      var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\\n          ? []\\n          : replaceHolders(args, placeholder);\\n\\n      length -= holders.length;\\n      if (length < arity) {\\n        return createRecurry(\\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\\n            args, holders, undefined, undefined, arity - length);\\n      }\\n      var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\\n      return apply(fn, this, args);\\n    }\\n    return wrapper;\\n  }\\n\\n  /**\\n   * Creates a `_.find` or `_.findLast` function.\\n   *\\n   * @private\\n   * @param {Function} findIndexFunc The function to find the collection index.\\n   * @returns {Function} Returns the new find function.\\n   */\\n  function createFind(findIndexFunc) {\\n    return function(collection, predicate, fromIndex) {\\n      var iterable = Object(collection);\\n      if (!isArrayLike(collection)) {\\n        var iteratee = baseIteratee(predicate, 3);\\n        collection = keys(collection);\\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\\n      }\\n      var index = findIndexFunc(collection, predicate, fromIndex);\\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\\n    };\\n  }\\n\\n  /**\\n   * Creates a function that wraps `func` to invoke it with optional `this`\\n   * binding of `thisArg`, partial application, and currying.\\n   *\\n   * @private\\n   * @param {Function|string} func The function or method name to wrap.\\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\n   * @param {*} [thisArg] The `this` binding of `func`.\\n   * @param {Array} [partials] The arguments to prepend to those provided to\\n   *  the new function.\\n   * @param {Array} [holders] The `partials` placeholder indexes.\\n   * @param {Array} [partialsRight] The arguments to append to those provided\\n   *  to the new function.\\n   * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\\n   * @param {Array} [argPos] The argument positions of the new function.\\n   * @param {number} [ary] The arity cap of `func`.\\n   * @param {number} [arity] The arity of `func`.\\n   * @returns {Function} Returns the new wrapped function.\\n   */\\n  function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\\n    var isAry = bitmask & WRAP_ARY_FLAG,\\n        isBind = bitmask & WRAP_BIND_FLAG,\\n        isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\\n        isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\\n        isFlip = bitmask & WRAP_FLIP_FLAG,\\n        Ctor = isBindKey ? undefined : createCtor(func);\\n\\n    function wrapper() {\\n      var length = arguments.length,\\n          args = Array(length),\\n          index = length;\\n\\n      while (index--) {\\n        args[index] = arguments[index];\\n      }\\n      if (isCurried) {\\n        var placeholder = getHolder(wrapper),\\n            holdersCount = countHolders(args, placeholder);\\n      }\\n      if (partials) {\\n        args = composeArgs(args, partials, holders, isCurried);\\n      }\\n      if (partialsRight) {\\n        args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\\n      }\\n      length -= holdersCount;\\n      if (isCurried && length < arity) {\\n        var newHolders = replaceHolders(args, placeholder);\\n        return createRecurry(\\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\\n            args, newHolders, argPos, ary, arity - length\\n        );\\n      }\\n      var thisBinding = isBind ? thisArg : this,\\n          fn = isBindKey ? thisBinding[func] : func;\\n\\n      length = args.length;\\n      if (argPos) {\\n        args = reorder(args, argPos);\\n      } else if (isFlip && length > 1) {\\n        args.reverse();\\n      }\\n      if (isAry && ary < length) {\\n        args.length = ary;\\n      }\\n      if (this && this !== root && this instanceof wrapper) {\\n        fn = Ctor || createCtor(fn);\\n      }\\n      return fn.apply(thisBinding, args);\\n    }\\n    return wrapper;\\n  }\\n\\n  /**\\n   * Creates a function like `_.invertBy`.\\n   *\\n   * @private\\n   * @param {Function} setter The function to set accumulator values.\\n   * @param {Function} toIteratee The function to resolve iteratees.\\n   * @returns {Function} Returns the new inverter function.\\n   */\\n  function createInverter(setter, toIteratee) {\\n    return function(object, iteratee) {\\n      return baseInverter(object, setter, toIteratee(iteratee), {});\\n    };\\n  }\\n\\n  /**\\n   * Creates a function that wraps `func` to invoke it with the `this` binding\\n   * of `thisArg` and `partials` prepended to the arguments it receives.\\n   *\\n   * @private\\n   * @param {Function} func The function to wrap.\\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\n   * @param {*} thisArg The `this` binding of `func`.\\n   * @param {Array} partials The arguments to prepend to those provided to\\n   *  the new function.\\n   * @returns {Function} Returns the new wrapped function.\\n   */\\n  function createPartial(func, bitmask, thisArg, partials) {\\n    var isBind = bitmask & WRAP_BIND_FLAG,\\n        Ctor = createCtor(func);\\n\\n    function wrapper() {\\n      var argsIndex = -1,\\n          argsLength = arguments.length,\\n          leftIndex = -1,\\n          leftLength = partials.length,\\n          args = Array(leftLength + argsLength),\\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\\n\\n      while (++leftIndex < leftLength) {\\n        args[leftIndex] = partials[leftIndex];\\n      }\\n      while (argsLength--) {\\n        args[leftIndex++] = arguments[++argsIndex];\\n      }\\n      return apply(fn, isBind ? thisArg : this, args);\\n    }\\n    return wrapper;\\n  }\\n\\n  /**\\n   * Creates a `_.range` or `_.rangeRight` function.\\n   *\\n   * @private\\n   * @param {boolean} [fromRight] Specify iterating from right to left.\\n   * @returns {Function} Returns the new range function.\\n   */\\n  function createRange(fromRight) {\\n    return function(start, end, step) {\\n      if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\\n        end = step = undefined;\\n      }\\n      // Ensure the sign of `-0` is preserved.\\n      start = toFinite(start);\\n      if (end === undefined) {\\n        end = start;\\n        start = 0;\\n      } else {\\n        end = toFinite(end);\\n      }\\n      step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\\n      return baseRange(start, end, step, fromRight);\\n    };\\n  }\\n\\n  /**\\n   * Creates a function that wraps `func` to continue currying.\\n   *\\n   * @private\\n   * @param {Function} func The function to wrap.\\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\n   * @param {Function} wrapFunc The function to create the `func` wrapper.\\n   * @param {*} placeholder The placeholder value.\\n   * @param {*} [thisArg] The `this` binding of `func`.\\n   * @param {Array} [partials] The arguments to prepend to those provided to\\n   *  the new function.\\n   * @param {Array} [holders] The `partials` placeholder indexes.\\n   * @param {Array} [argPos] The argument positions of the new function.\\n   * @param {number} [ary] The arity cap of `func`.\\n   * @param {number} [arity] The arity of `func`.\\n   * @returns {Function} Returns the new wrapped function.\\n   */\\n  function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\\n    var isCurry = bitmask & WRAP_CURRY_FLAG,\\n        newHolders = isCurry ? holders : undefined,\\n        newHoldersRight = isCurry ? undefined : holders,\\n        newPartials = isCurry ? partials : undefined,\\n        newPartialsRight = isCurry ? undefined : partials;\\n\\n    bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\\n    bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\\n\\n    if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\\n      bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\\n    }\\n    var newData = [\\n      func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\\n      newHoldersRight, argPos, ary, arity\\n    ];\\n\\n    var result = wrapFunc.apply(undefined, newData);\\n    if (isLaziable(func)) {\\n      setData(result, newData);\\n    }\\n    result.placeholder = placeholder;\\n    return setWrapToString(result, func, bitmask);\\n  }\\n\\n  /**\\n   * Creates a set object of `values`.\\n   *\\n   * @private\\n   * @param {Array} values The values to add to the set.\\n   * @returns {Object} Returns the new set.\\n   */\\n  var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\\n    return new Set(values);\\n  };\\n\\n  /**\\n   * Creates a function that either curries or invokes `func` with optional\\n   * `this` binding and partially applied arguments.\\n   *\\n   * @private\\n   * @param {Function|string} func The function or method name to wrap.\\n   * @param {number} bitmask The bitmask flags.\\n   *    1 - `_.bind`\\n   *    2 - `_.bindKey`\\n   *    4 - `_.curry` or `_.curryRight` of a bound function\\n   *    8 - `_.curry`\\n   *   16 - `_.curryRight`\\n   *   32 - `_.partial`\\n   *   64 - `_.partialRight`\\n   *  128 - `_.rearg`\\n   *  256 - `_.ary`\\n   *  512 - `_.flip`\\n   * @param {*} [thisArg] The `this` binding of `func`.\\n   * @param {Array} [partials] The arguments to be partially applied.\\n   * @param {Array} [holders] The `partials` placeholder indexes.\\n   * @param {Array} [argPos] The argument positions of the new function.\\n   * @param {number} [ary] The arity cap of `func`.\\n   * @param {number} [arity] The arity of `func`.\\n   * @returns {Function} Returns the new wrapped function.\\n   */\\n  function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\\n    var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\\n    if (!isBindKey && typeof func != 'function') {\\n      throw new TypeError(FUNC_ERROR_TEXT);\\n    }\\n    var length = partials ? partials.length : 0;\\n    if (!length) {\\n      bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\\n      partials = holders = undefined;\\n    }\\n    ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\\n    arity = arity === undefined ? arity : toInteger(arity);\\n    length -= holders ? holders.length : 0;\\n\\n    if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\\n      var partialsRight = partials,\\n          holdersRight = holders;\\n\\n      partials = holders = undefined;\\n    }\\n    var data = isBindKey ? undefined : getData(func);\\n\\n    var newData = [\\n      func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\\n      argPos, ary, arity\\n    ];\\n\\n    if (data) {\\n      mergeData(newData, data);\\n    }\\n    func = newData[0];\\n    bitmask = newData[1];\\n    thisArg = newData[2];\\n    partials = newData[3];\\n    holders = newData[4];\\n    arity = newData[9] = newData[9] === undefined\\n        ? (isBindKey ? 0 : func.length)\\n        : nativeMax(newData[9] - length, 0);\\n\\n    if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\\n      bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\\n    }\\n    if (!bitmask || bitmask == WRAP_BIND_FLAG) {\\n      var result = createBind(func, bitmask, thisArg);\\n    } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\\n      result = createCurry(func, bitmask, arity);\\n    } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\\n      result = createPartial(func, bitmask, thisArg, partials);\\n    } else {\\n      result = createHybrid.apply(undefined, newData);\\n    }\\n    var setter = data ? baseSetData : setData;\\n    return setWrapToString(setter(result, newData), func, bitmask);\\n  }\\n\\n  /**\\n   * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\\n   * objects into destination objects that are passed thru.\\n   *\\n   * @private\\n   * @param {*} objValue The destination value.\\n   * @param {*} srcValue The source value.\\n   * @param {string} key The key of the property to merge.\\n   * @param {Object} object The parent object of `objValue`.\\n   * @param {Object} source The parent object of `srcValue`.\\n   * @param {Object} [stack] Tracks traversed source values and their merged\\n   *  counterparts.\\n   * @returns {*} Returns the value to assign.\\n   */\\n  function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\\n    if (isObject(objValue) && isObject(srcValue)) {\\n      // Recursively merge objects and arrays (susceptible to call stack limits).\\n      stack.set(srcValue, objValue);\\n      baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\\n      stack['delete'](srcValue);\\n    }\\n    return objValue;\\n  }\\n\\n  /**\\n   * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\\n   * objects.\\n   *\\n   * @private\\n   * @param {*} value The value to inspect.\\n   * @param {string} key The key of the property to inspect.\\n   * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\\n   */\\n  function customOmitClone(value) {\\n    return isPlainObject(value) ? undefined : value;\\n  }\\n\\n  /**\\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\\n   * partial deep comparisons.\\n   *\\n   * @private\\n   * @param {Array} array The array to compare.\\n   * @param {Array} other The other array to compare.\\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n   * @param {Function} customizer The function to customize comparisons.\\n   * @param {Function} equalFunc The function to determine equivalents of values.\\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\\n   */\\n  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\\n        arrLength = array.length,\\n        othLength = other.length;\\n\\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\\n      return false;\\n    }\\n    // Assume cyclic values are equal.\\n    var stacked = stack.get(array);\\n    if (stacked && stack.get(other)) {\\n      return stacked == other;\\n    }\\n    var index = -1,\\n        result = true,\\n        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\\n\\n    stack.set(array, other);\\n    stack.set(other, array);\\n\\n    // Ignore non-index properties.\\n    while (++index < arrLength) {\\n      var arrValue = array[index],\\n          othValue = other[index];\\n\\n      if (customizer) {\\n        var compared = isPartial\\n            ? customizer(othValue, arrValue, index, other, array, stack)\\n            : customizer(arrValue, othValue, index, array, other, stack);\\n      }\\n      if (compared !== undefined) {\\n        if (compared) {\\n          continue;\\n        }\\n        result = false;\\n        break;\\n      }\\n      // Recursively compare arrays (susceptible to call stack limits).\\n      if (seen) {\\n        if (!arraySome(other, function(othValue, othIndex) {\\n          if (!cacheHas(seen, othIndex) &&\\n              (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\\n            return seen.push(othIndex);\\n          }\\n        })) {\\n          result = false;\\n          break;\\n        }\\n      } else if (!(\\n          arrValue === othValue ||\\n          equalFunc(arrValue, othValue, bitmask, customizer, stack)\\n      )) {\\n        result = false;\\n        break;\\n      }\\n    }\\n    stack['delete'](array);\\n    stack['delete'](other);\\n    return result;\\n  }\\n\\n  /**\\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\\n   * the same `toStringTag`.\\n   *\\n   * **Note:** This function only supports comparing values with tags of\\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\\n   *\\n   * @private\\n   * @param {Object} object The object to compare.\\n   * @param {Object} other The other object to compare.\\n   * @param {string} tag The `toStringTag` of the objects to compare.\\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n   * @param {Function} customizer The function to customize comparisons.\\n   * @param {Function} equalFunc The function to determine equivalents of values.\\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n   */\\n  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\\n    switch (tag) {\\n      case dataViewTag:\\n        if ((object.byteLength != other.byteLength) ||\\n            (object.byteOffset != other.byteOffset)) {\\n          return false;\\n        }\\n        object = object.buffer;\\n        other = other.buffer;\\n\\n      case arrayBufferTag:\\n        if ((object.byteLength != other.byteLength) ||\\n            !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\\n          return false;\\n        }\\n        return true;\\n\\n      case boolTag:\\n      case dateTag:\\n      case numberTag:\\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\\n        // Invalid dates are coerced to `NaN`.\\n        return eq(+object, +other);\\n\\n      case errorTag:\\n        return object.name == other.name && object.message == other.message;\\n\\n      case regexpTag:\\n      case stringTag:\\n        // Coerce regexes to strings and treat strings, primitives and objects,\\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\\n        // for more details.\\n        return object == (other + '');\\n\\n      case mapTag:\\n        var convert = mapToArray;\\n\\n      case setTag:\\n        var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\\n        convert || (convert = setToArray);\\n\\n        if (object.size != other.size && !isPartial) {\\n          return false;\\n        }\\n        // Assume cyclic values are equal.\\n        var stacked = stack.get(object);\\n        if (stacked) {\\n          return stacked == other;\\n        }\\n        bitmask |= COMPARE_UNORDERED_FLAG;\\n\\n        // Recursively compare objects (susceptible to call stack limits).\\n        stack.set(object, other);\\n        var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\\n        stack['delete'](object);\\n        return result;\\n\\n      case symbolTag:\\n        if (symbolValueOf) {\\n          return symbolValueOf.call(object) == symbolValueOf.call(other);\\n        }\\n    }\\n    return false;\\n  }\\n\\n  /**\\n   * A specialized version of `baseIsEqualDeep` for objects with support for\\n   * partial deep comparisons.\\n   *\\n   * @private\\n   * @param {Object} object The object to compare.\\n   * @param {Object} other The other object to compare.\\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n   * @param {Function} customizer The function to customize comparisons.\\n   * @param {Function} equalFunc The function to determine equivalents of values.\\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n   */\\n  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\\n        objProps = getAllKeys(object),\\n        objLength = objProps.length,\\n        othProps = getAllKeys(other),\\n        othLength = othProps.length;\\n\\n    if (objLength != othLength && !isPartial) {\\n      return false;\\n    }\\n    var index = objLength;\\n    while (index--) {\\n      var key = objProps[index];\\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\\n        return false;\\n      }\\n    }\\n    // Assume cyclic values are equal.\\n    var stacked = stack.get(object);\\n    if (stacked && stack.get(other)) {\\n      return stacked == other;\\n    }\\n    var result = true;\\n    stack.set(object, other);\\n    stack.set(other, object);\\n\\n    var skipCtor = isPartial;\\n    while (++index < objLength) {\\n      key = objProps[index];\\n      var objValue = object[key],\\n          othValue = other[key];\\n\\n      if (customizer) {\\n        var compared = isPartial\\n            ? customizer(othValue, objValue, key, other, object, stack)\\n            : customizer(objValue, othValue, key, object, other, stack);\\n      }\\n      // Recursively compare objects (susceptible to call stack limits).\\n      if (!(compared === undefined\\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\\n              : compared\\n      )) {\\n        result = false;\\n        break;\\n      }\\n      skipCtor || (skipCtor = key == 'constructor');\\n    }\\n    if (result && !skipCtor) {\\n      var objCtor = object.constructor,\\n          othCtor = other.constructor;\\n\\n      // Non `Object` object instances with different constructors are not equal.\\n      if (objCtor != othCtor &&\\n          ('constructor' in object && 'constructor' in other) &&\\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\\n        result = false;\\n      }\\n    }\\n    stack['delete'](object);\\n    stack['delete'](other);\\n    return result;\\n  }\\n\\n  /**\\n   * A specialized version of `baseRest` which flattens the rest array.\\n   *\\n   * @private\\n   * @param {Function} func The function to apply a rest parameter to.\\n   * @returns {Function} Returns the new function.\\n   */\\n  function flatRest(func) {\\n    return setToString(overRest(func, undefined, flatten), func + '');\\n  }\\n\\n  /**\\n   * Creates an array of own enumerable property names and symbols of `object`.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @returns {Array} Returns the array of property names and symbols.\\n   */\\n  function getAllKeys(object) {\\n    return baseGetAllKeys(object, keys, getSymbols);\\n  }\\n\\n  /**\\n   * Creates an array of own and inherited enumerable property names and\\n   * symbols of `object`.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @returns {Array} Returns the array of property names and symbols.\\n   */\\n  function getAllKeysIn(object) {\\n    return baseGetAllKeys(object, keysIn, getSymbolsIn);\\n  }\\n\\n  /**\\n   * Gets metadata for `func`.\\n   *\\n   * @private\\n   * @param {Function} func The function to query.\\n   * @returns {*} Returns the metadata for `func`.\\n   */\\n  var getData = !metaMap ? noop : function(func) {\\n    return metaMap.get(func);\\n  };\\n\\n  /**\\n   * Gets the name of `func`.\\n   *\\n   * @private\\n   * @param {Function} func The function to query.\\n   * @returns {string} Returns the function name.\\n   */\\n  function getFuncName(func) {\\n    var result = (func.name + ''),\\n        array = realNames[result],\\n        length = hasOwnProperty.call(realNames, result) ? array.length : 0;\\n\\n    while (length--) {\\n      var data = array[length],\\n          otherFunc = data.func;\\n      if (otherFunc == null || otherFunc == func) {\\n        return data.name;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Gets the argument placeholder value for `func`.\\n   *\\n   * @private\\n   * @param {Function} func The function to inspect.\\n   * @returns {*} Returns the placeholder value.\\n   */\\n  function getHolder(func) {\\n    var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\\n    return object.placeholder;\\n  }\\n\\n  /**\\n   * Gets the data for `map`.\\n   *\\n   * @private\\n   * @param {Object} map The map to query.\\n   * @param {string} key The reference key.\\n   * @returns {*} Returns the map data.\\n   */\\n  function getMapData(map, key) {\\n    var data = map.__data__;\\n    return isKeyable(key)\\n        ? data[typeof key == 'string' ? 'string' : 'hash']\\n        : data.map;\\n  }\\n\\n  /**\\n   * Gets the property names, values, and compare flags of `object`.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @returns {Array} Returns the match data of `object`.\\n   */\\n  function getMatchData(object) {\\n    var result = keys(object),\\n        length = result.length;\\n\\n    while (length--) {\\n      var key = result[length],\\n          value = object[key];\\n\\n      result[length] = [key, value, isStrictComparable(value)];\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Gets the native function at `key` of `object`.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @param {string} key The key of the method to get.\\n   * @returns {*} Returns the function if it's native, else `undefined`.\\n   */\\n  function getNative(object, key) {\\n    var value = getValue(object, key);\\n    return baseIsNative(value) ? value : undefined;\\n  }\\n\\n  /**\\n   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\\n   *\\n   * @private\\n   * @param {*} value The value to query.\\n   * @returns {string} Returns the raw `toStringTag`.\\n   */\\n  function getRawTag(value) {\\n    var isOwn = hasOwnProperty.call(value, symToStringTag),\\n        tag = value[symToStringTag];\\n\\n    try {\\n      value[symToStringTag] = undefined;\\n      var unmasked = true;\\n    } catch (e) {}\\n\\n    var result = nativeObjectToString.call(value);\\n    if (unmasked) {\\n      if (isOwn) {\\n        value[symToStringTag] = tag;\\n      } else {\\n        delete value[symToStringTag];\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Creates an array of the own enumerable symbols of `object`.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @returns {Array} Returns the array of symbols.\\n   */\\n  var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\\n    if (object == null) {\\n      return [];\\n    }\\n    object = Object(object);\\n    return arrayFilter(nativeGetSymbols(object), function(symbol) {\\n      return propertyIsEnumerable.call(object, symbol);\\n    });\\n  };\\n\\n  /**\\n   * Creates an array of the own and inherited enumerable symbols of `object`.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @returns {Array} Returns the array of symbols.\\n   */\\n  var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\\n    var result = [];\\n    while (object) {\\n      arrayPush(result, getSymbols(object));\\n      object = getPrototype(object);\\n    }\\n    return result;\\n  };\\n\\n  /**\\n   * Gets the `toStringTag` of `value`.\\n   *\\n   * @private\\n   * @param {*} value The value to query.\\n   * @returns {string} Returns the `toStringTag`.\\n   */\\n  var getTag = baseGetTag;\\n\\n  // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\\n  if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\\n      (Map && getTag(new Map) != mapTag) ||\\n      (Promise && getTag(Promise.resolve()) != promiseTag) ||\\n      (Set && getTag(new Set) != setTag) ||\\n      (WeakMap && getTag(new WeakMap) != weakMapTag)) {\\n    getTag = function(value) {\\n      var result = baseGetTag(value),\\n          Ctor = result == objectTag ? value.constructor : undefined,\\n          ctorString = Ctor ? toSource(Ctor) : '';\\n\\n      if (ctorString) {\\n        switch (ctorString) {\\n          case dataViewCtorString: return dataViewTag;\\n          case mapCtorString: return mapTag;\\n          case promiseCtorString: return promiseTag;\\n          case setCtorString: return setTag;\\n          case weakMapCtorString: return weakMapTag;\\n        }\\n      }\\n      return result;\\n    };\\n  }\\n\\n  /**\\n   * Gets the view, applying any `transforms` to the `start` and `end` positions.\\n   *\\n   * @private\\n   * @param {number} start The start of the view.\\n   * @param {number} end The end of the view.\\n   * @param {Array} transforms The transformations to apply to the view.\\n   * @returns {Object} Returns an object containing the `start` and `end`\\n   *  positions of the view.\\n   */\\n  function getView(start, end, transforms) {\\n    var index = -1,\\n        length = transforms.length;\\n\\n    while (++index < length) {\\n      var data = transforms[index],\\n          size = data.size;\\n\\n      switch (data.type) {\\n        case 'drop':      start += size; break;\\n        case 'dropRight': end -= size; break;\\n        case 'take':      end = nativeMin(end, start + size); break;\\n        case 'takeRight': start = nativeMax(start, end - size); break;\\n      }\\n    }\\n    return { 'start': start, 'end': end };\\n  }\\n\\n  /**\\n   * Extracts wrapper details from the `source` body comment.\\n   *\\n   * @private\\n   * @param {string} source The source to inspect.\\n   * @returns {Array} Returns the wrapper details.\\n   */\\n  function getWrapDetails(source) {\\n    var match = source.match(reWrapDetails);\\n    return match ? match[1].split(reSplitDetails) : [];\\n  }\\n\\n  /**\\n   * Checks if `path` exists on `object`.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @param {Array|string} path The path to check.\\n   * @param {Function} hasFunc The function to check properties.\\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\\n   */\\n  function hasPath(object, path, hasFunc) {\\n    path = castPath(path, object);\\n\\n    var index = -1,\\n        length = path.length,\\n        result = false;\\n\\n    while (++index < length) {\\n      var key = toKey(path[index]);\\n      if (!(result = object != null && hasFunc(object, key))) {\\n        break;\\n      }\\n      object = object[key];\\n    }\\n    if (result || ++index != length) {\\n      return result;\\n    }\\n    length = object == null ? 0 : object.length;\\n    return !!length && isLength(length) && isIndex(key, length) &&\\n        (isArray(object) || isArguments(object));\\n  }\\n\\n  /**\\n   * Initializes an array clone.\\n   *\\n   * @private\\n   * @param {Array} array The array to clone.\\n   * @returns {Array} Returns the initialized clone.\\n   */\\n  function initCloneArray(array) {\\n    var length = array.length,\\n        result = new array.constructor(length);\\n\\n    // Add properties assigned by `RegExp#exec`.\\n    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\\n      result.index = array.index;\\n      result.input = array.input;\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Initializes an object clone.\\n   *\\n   * @private\\n   * @param {Object} object The object to clone.\\n   * @returns {Object} Returns the initialized clone.\\n   */\\n  function initCloneObject(object) {\\n    return (typeof object.constructor == 'function' && !isPrototype(object))\\n        ? baseCreate(getPrototype(object))\\n        : {};\\n  }\\n\\n  /**\\n   * Initializes an object clone based on its `toStringTag`.\\n   *\\n   * **Note:** This function only supports cloning values with tags of\\n   * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\\n   *\\n   * @private\\n   * @param {Object} object The object to clone.\\n   * @param {string} tag The `toStringTag` of the object to clone.\\n   * @param {boolean} [isDeep] Specify a deep clone.\\n   * @returns {Object} Returns the initialized clone.\\n   */\\n  function initCloneByTag(object, tag, isDeep) {\\n    var Ctor = object.constructor;\\n    switch (tag) {\\n      case arrayBufferTag:\\n        return cloneArrayBuffer(object);\\n\\n      case boolTag:\\n      case dateTag:\\n        return new Ctor(+object);\\n\\n      case dataViewTag:\\n        return cloneDataView(object, isDeep);\\n\\n      case float32Tag: case float64Tag:\\n      case int8Tag: case int16Tag: case int32Tag:\\n      case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\\n        return cloneTypedArray(object, isDeep);\\n\\n      case mapTag:\\n        return new Ctor;\\n\\n      case numberTag:\\n      case stringTag:\\n        return new Ctor(object);\\n\\n      case regexpTag:\\n        return cloneRegExp(object);\\n\\n      case setTag:\\n        return new Ctor;\\n\\n      case symbolTag:\\n        return cloneSymbol(object);\\n    }\\n  }\\n\\n  /**\\n   * Inserts wrapper `details` in a comment at the top of the `source` body.\\n   *\\n   * @private\\n   * @param {string} source The source to modify.\\n   * @returns {Array} details The details to insert.\\n   * @returns {string} Returns the modified source.\\n   */\\n  function insertWrapDetails(source, details) {\\n    var length = details.length;\\n    if (!length) {\\n      return source;\\n    }\\n    var lastIndex = length - 1;\\n    details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\\n    details = details.join(length > 2 ? ', ' : ' ');\\n    return source.replace(reWrapComment, '{\\\\n/* [wrapped with ' + details + '] */\\\\n');\\n  }\\n\\n  /**\\n   * Checks if `value` is a flattenable `arguments` object or array.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\\n   */\\n  function isFlattenable(value) {\\n    return isArray(value) || isArguments(value) ||\\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\\n  }\\n\\n  /**\\n   * Checks if `value` is a valid array-like index.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\\n   */\\n  function isIndex(value, length) {\\n    var type = typeof value;\\n    length = length == null ? MAX_SAFE_INTEGER : length;\\n\\n    return !!length &&\\n        (type == 'number' ||\\n            (type != 'symbol' && reIsUint.test(value))) &&\\n        (value > -1 && value % 1 == 0 && value < length);\\n  }\\n\\n  /**\\n   * Checks if the given arguments are from an iteratee call.\\n   *\\n   * @private\\n   * @param {*} value The potential iteratee value argument.\\n   * @param {*} index The potential iteratee index or key argument.\\n   * @param {*} object The potential iteratee object argument.\\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\\n   *  else `false`.\\n   */\\n  function isIterateeCall(value, index, object) {\\n    if (!isObject(object)) {\\n      return false;\\n    }\\n    var type = typeof index;\\n    if (type == 'number'\\n        ? (isArrayLike(object) && isIndex(index, object.length))\\n        : (type == 'string' && index in object)\\n    ) {\\n      return eq(object[index], value);\\n    }\\n    return false;\\n  }\\n\\n  /**\\n   * Checks if `value` is a property name and not a property path.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @param {Object} [object] The object to query keys on.\\n   * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\\n   */\\n  function isKey(value, object) {\\n    if (isArray(value)) {\\n      return false;\\n    }\\n    var type = typeof value;\\n    if (type == 'number' || type == 'symbol' || type == 'boolean' ||\\n        value == null || isSymbol(value)) {\\n      return true;\\n    }\\n    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\\n        (object != null && value in Object(object));\\n  }\\n\\n  /**\\n   * Checks if `value` is suitable for use as unique object key.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\\n   */\\n  function isKeyable(value) {\\n    var type = typeof value;\\n    return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\\n        ? (value !== '__proto__')\\n        : (value === null);\\n  }\\n\\n  /**\\n   * Checks if `func` has a lazy counterpart.\\n   *\\n   * @private\\n   * @param {Function} func The function to check.\\n   * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\\n   *  else `false`.\\n   */\\n  function isLaziable(func) {\\n    var funcName = getFuncName(func),\\n        other = lodash[funcName];\\n\\n    if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\\n      return false;\\n    }\\n    if (func === other) {\\n      return true;\\n    }\\n    var data = getData(other);\\n    return !!data && func === data[0];\\n  }\\n\\n  /**\\n   * Checks if `func` has its source masked.\\n   *\\n   * @private\\n   * @param {Function} func The function to check.\\n   * @returns {boolean} Returns `true` if `func` is masked, else `false`.\\n   */\\n  function isMasked(func) {\\n    return !!maskSrcKey && (maskSrcKey in func);\\n  }\\n\\n  /**\\n   * Checks if `value` is likely a prototype object.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\\n   */\\n  function isPrototype(value) {\\n    var Ctor = value && value.constructor,\\n        proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\\n\\n    return value === proto;\\n  }\\n\\n  /**\\n   * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\\n   *\\n   * @private\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` if suitable for strict\\n   *  equality comparisons, else `false`.\\n   */\\n  function isStrictComparable(value) {\\n    return value === value && !isObject(value);\\n  }\\n\\n  /**\\n   * A specialized version of `matchesProperty` for source values suitable\\n   * for strict equality comparisons, i.e. `===`.\\n   *\\n   * @private\\n   * @param {string} key The key of the property to get.\\n   * @param {*} srcValue The value to match.\\n   * @returns {Function} Returns the new spec function.\\n   */\\n  function matchesStrictComparable(key, srcValue) {\\n    return function(object) {\\n      if (object == null) {\\n        return false;\\n      }\\n      return object[key] === srcValue &&\\n          (srcValue !== undefined || (key in Object(object)));\\n    };\\n  }\\n\\n  /**\\n   * A specialized version of `_.memoize` which clears the memoized function's\\n   * cache when it exceeds `MAX_MEMOIZE_SIZE`.\\n   *\\n   * @private\\n   * @param {Function} func The function to have its output memoized.\\n   * @returns {Function} Returns the new memoized function.\\n   */\\n  function memoizeCapped(func) {\\n    var result = memoize(func, function(key) {\\n      if (cache.size === MAX_MEMOIZE_SIZE) {\\n        cache.clear();\\n      }\\n      return key;\\n    });\\n\\n    var cache = result.cache;\\n    return result;\\n  }\\n\\n  /**\\n   * Merges the function metadata of `source` into `data`.\\n   *\\n   * Merging metadata reduces the number of wrappers used to invoke a function.\\n   * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\\n   * may be applied regardless of execution order. Methods like `_.ary` and\\n   * `_.rearg` modify function arguments, making the order in which they are\\n   * executed important, preventing the merging of metadata. However, we make\\n   * an exception for a safe combined case where curried functions have `_.ary`\\n   * and or `_.rearg` applied.\\n   *\\n   * @private\\n   * @param {Array} data The destination metadata.\\n   * @param {Array} source The source metadata.\\n   * @returns {Array} Returns `data`.\\n   */\\n  function mergeData(data, source) {\\n    var bitmask = data[1],\\n        srcBitmask = source[1],\\n        newBitmask = bitmask | srcBitmask,\\n        isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\\n\\n    var isCombo =\\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\\n\\n    // Exit early if metadata can't be merged.\\n    if (!(isCommon || isCombo)) {\\n      return data;\\n    }\\n    // Use source `thisArg` if available.\\n    if (srcBitmask & WRAP_BIND_FLAG) {\\n      data[2] = source[2];\\n      // Set when currying a bound function.\\n      newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\\n    }\\n    // Compose partial arguments.\\n    var value = source[3];\\n    if (value) {\\n      var partials = data[3];\\n      data[3] = partials ? composeArgs(partials, value, source[4]) : value;\\n      data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\\n    }\\n    // Compose partial right arguments.\\n    value = source[5];\\n    if (value) {\\n      partials = data[5];\\n      data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\\n      data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\\n    }\\n    // Use source `argPos` if available.\\n    value = source[7];\\n    if (value) {\\n      data[7] = value;\\n    }\\n    // Use source `ary` if it's smaller.\\n    if (srcBitmask & WRAP_ARY_FLAG) {\\n      data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\\n    }\\n    // Use source `arity` if one is not provided.\\n    if (data[9] == null) {\\n      data[9] = source[9];\\n    }\\n    // Use source `func` and merge bitmasks.\\n    data[0] = source[0];\\n    data[1] = newBitmask;\\n\\n    return data;\\n  }\\n\\n  /**\\n   * This function is like\\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\\n   * except that it includes inherited enumerable properties.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @returns {Array} Returns the array of property names.\\n   */\\n  function nativeKeysIn(object) {\\n    var result = [];\\n    if (object != null) {\\n      for (var key in Object(object)) {\\n        result.push(key);\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Converts `value` to a string using `Object.prototype.toString`.\\n   *\\n   * @private\\n   * @param {*} value The value to convert.\\n   * @returns {string} Returns the converted string.\\n   */\\n  function objectToString(value) {\\n    return nativeObjectToString.call(value);\\n  }\\n\\n  /**\\n   * A specialized version of `baseRest` which transforms the rest array.\\n   *\\n   * @private\\n   * @param {Function} func The function to apply a rest parameter to.\\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\\n   * @param {Function} transform The rest array transform.\\n   * @returns {Function} Returns the new function.\\n   */\\n  function overRest(func, start, transform) {\\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\\n    return function() {\\n      var args = arguments,\\n          index = -1,\\n          length = nativeMax(args.length - start, 0),\\n          array = Array(length);\\n\\n      while (++index < length) {\\n        array[index] = args[start + index];\\n      }\\n      index = -1;\\n      var otherArgs = Array(start + 1);\\n      while (++index < start) {\\n        otherArgs[index] = args[index];\\n      }\\n      otherArgs[start] = transform(array);\\n      return apply(func, this, otherArgs);\\n    };\\n  }\\n\\n  /**\\n   * Gets the parent value at `path` of `object`.\\n   *\\n   * @private\\n   * @param {Object} object The object to query.\\n   * @param {Array} path The path to get the parent value of.\\n   * @returns {*} Returns the parent value.\\n   */\\n  function parent(object, path) {\\n    return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\\n  }\\n\\n  /**\\n   * Reorder `array` according to the specified indexes where the element at\\n   * the first index is assigned as the first element, the element at\\n   * the second index is assigned as the second element, and so on.\\n   *\\n   * @private\\n   * @param {Array} array The array to reorder.\\n   * @param {Array} indexes The arranged array indexes.\\n   * @returns {Array} Returns `array`.\\n   */\\n  function reorder(array, indexes) {\\n    var arrLength = array.length,\\n        length = nativeMin(indexes.length, arrLength),\\n        oldArray = copyArray(array);\\n\\n    while (length--) {\\n      var index = indexes[length];\\n      array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\\n    }\\n    return array;\\n  }\\n\\n  /**\\n   * Sets metadata for `func`.\\n   *\\n   * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\\n   * period of time, it will trip its breaker and transition to an identity\\n   * function to avoid garbage collection pauses in V8. See\\n   * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\\n   * for more details.\\n   *\\n   * @private\\n   * @param {Function} func The function to associate metadata with.\\n   * @param {*} data The metadata.\\n   * @returns {Function} Returns `func`.\\n   */\\n  var setData = shortOut(baseSetData);\\n\\n  /**\\n   * Sets the `toString` method of `func` to return `string`.\\n   *\\n   * @private\\n   * @param {Function} func The function to modify.\\n   * @param {Function} string The `toString` result.\\n   * @returns {Function} Returns `func`.\\n   */\\n  var setToString = shortOut(baseSetToString);\\n\\n  /**\\n   * Sets the `toString` method of `wrapper` to mimic the source of `reference`\\n   * with wrapper details in a comment at the top of the source body.\\n   *\\n   * @private\\n   * @param {Function} wrapper The function to modify.\\n   * @param {Function} reference The reference function.\\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\n   * @returns {Function} Returns `wrapper`.\\n   */\\n  function setWrapToString(wrapper, reference, bitmask) {\\n    var source = (reference + '');\\n    return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\\n  }\\n\\n  /**\\n   * Creates a function that'll short out and invoke `identity` instead\\n   * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\\n   * milliseconds.\\n   *\\n   * @private\\n   * @param {Function} func The function to restrict.\\n   * @returns {Function} Returns the new shortable function.\\n   */\\n  function shortOut(func) {\\n    var count = 0,\\n        lastCalled = 0;\\n\\n    return function() {\\n      var stamp = nativeNow(),\\n          remaining = HOT_SPAN - (stamp - lastCalled);\\n\\n      lastCalled = stamp;\\n      if (remaining > 0) {\\n        if (++count >= HOT_COUNT) {\\n          return arguments[0];\\n        }\\n      } else {\\n        count = 0;\\n      }\\n      return func.apply(undefined, arguments);\\n    };\\n  }\\n\\n  /**\\n   * Converts `string` to a property path array.\\n   *\\n   * @private\\n   * @param {string} string The string to convert.\\n   * @returns {Array} Returns the property path array.\\n   */\\n  var stringToPath = memoizeCapped(function(string) {\\n    var result = [];\\n    if (string.charCodeAt(0) === 46 /* . */) {\\n      result.push('');\\n    }\\n    string.replace(rePropName, function(match, number, quote, subString) {\\n      result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\\n    });\\n    return result;\\n  });\\n\\n  /**\\n   * Converts `value` to a string key if it's not a string or symbol.\\n   *\\n   * @private\\n   * @param {*} value The value to inspect.\\n   * @returns {string|symbol} Returns the key.\\n   */\\n  function toKey(value) {\\n    if (typeof value == 'string' || isSymbol(value)) {\\n      return value;\\n    }\\n    var result = (value + '');\\n    return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\\n  }\\n\\n  /**\\n   * Converts `func` to its source code.\\n   *\\n   * @private\\n   * @param {Function} func The function to convert.\\n   * @returns {string} Returns the source code.\\n   */\\n  function toSource(func) {\\n    if (func != null) {\\n      try {\\n        return funcToString.call(func);\\n      } catch (e) {}\\n      try {\\n        return (func + '');\\n      } catch (e) {}\\n    }\\n    return '';\\n  }\\n\\n  /**\\n   * Updates wrapper `details` based on `bitmask` flags.\\n   *\\n   * @private\\n   * @returns {Array} details The details to modify.\\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\\n   * @returns {Array} Returns `details`.\\n   */\\n  function updateWrapDetails(details, bitmask) {\\n    arrayEach(wrapFlags, function(pair) {\\n      var value = '_.' + pair[0];\\n      if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\\n        details.push(value);\\n      }\\n    });\\n    return details.sort();\\n  }\\n\\n  /**\\n   * Creates a clone of `wrapper`.\\n   *\\n   * @private\\n   * @param {Object} wrapper The wrapper to clone.\\n   * @returns {Object} Returns the cloned wrapper.\\n   */\\n  function wrapperClone(wrapper) {\\n    if (wrapper instanceof LazyWrapper) {\\n      return wrapper.clone();\\n    }\\n    var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\\n    result.__actions__ = copyArray(wrapper.__actions__);\\n    result.__index__  = wrapper.__index__;\\n    result.__values__ = wrapper.__values__;\\n    return result;\\n  }\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates an array with all falsey values removed. The values `false`, `null`,\\n   * `0`, `\\\"\\\"`, `undefined`, and `NaN` are falsey.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {Array} array The array to compact.\\n   * @returns {Array} Returns the new array of filtered values.\\n   * @example\\n   *\\n   * _.compact([0, 1, false, 2, '', 3]);\\n   * // => [1, 2, 3]\\n   */\\n  function compact(array) {\\n    var index = -1,\\n        length = array == null ? 0 : array.length,\\n        resIndex = 0,\\n        result = [];\\n\\n    while (++index < length) {\\n      var value = array[index];\\n      if (value) {\\n        result[resIndex++] = value;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * Creates a new array concatenating `array` with any additional arrays\\n   * and/or values.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Array\\n   * @param {Array} array The array to concatenate.\\n   * @param {...*} [values] The values to concatenate.\\n   * @returns {Array} Returns the new concatenated array.\\n   * @example\\n   *\\n   * var array = [1];\\n   * var other = _.concat(array, 2, [3], [[4]]);\\n   *\\n   * console.log(other);\\n   * // => [1, 2, 3, [4]]\\n   *\\n   * console.log(array);\\n   * // => [1]\\n   */\\n  function concat() {\\n    var length = arguments.length;\\n    if (!length) {\\n      return [];\\n    }\\n    var args = Array(length - 1),\\n        array = arguments[0],\\n        index = length;\\n\\n    while (index--) {\\n      args[index - 1] = arguments[index];\\n    }\\n    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\\n  }\\n\\n  /**\\n   * Creates an array of `array` values not included in the other given arrays\\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n   * for equality comparisons. The order and references of result values are\\n   * determined by the first array.\\n   *\\n   * **Note:** Unlike `_.pullAll`, this method returns a new array.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {Array} array The array to inspect.\\n   * @param {...Array} [values] The values to exclude.\\n   * @returns {Array} Returns the new array of filtered values.\\n   * @see _.without, _.xor\\n   * @example\\n   *\\n   * _.difference([2, 1], [2, 3]);\\n   * // => [1]\\n   */\\n  var difference = baseRest(function(array, values) {\\n    return isArrayLikeObject(array)\\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\\n        : [];\\n  });\\n\\n  /**\\n   * Creates a slice of `array` with `n` elements dropped from the beginning.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.5.0\\n   * @category Array\\n   * @param {Array} array The array to query.\\n   * @param {number} [n=1] The number of elements to drop.\\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\n   * @returns {Array} Returns the slice of `array`.\\n   * @example\\n   *\\n   * _.drop([1, 2, 3]);\\n   * // => [2, 3]\\n   *\\n   * _.drop([1, 2, 3], 2);\\n   * // => [3]\\n   *\\n   * _.drop([1, 2, 3], 5);\\n   * // => []\\n   *\\n   * _.drop([1, 2, 3], 0);\\n   * // => [1, 2, 3]\\n   */\\n  function drop(array, n, guard) {\\n    var length = array == null ? 0 : array.length;\\n    if (!length) {\\n      return [];\\n    }\\n    n = (guard || n === undefined) ? 1 : toInteger(n);\\n    return baseSlice(array, n < 0 ? 0 : n, length);\\n  }\\n\\n  /**\\n   * This method is like `_.find` except that it returns the index of the first\\n   * element `predicate` returns truthy for instead of the element itself.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 1.1.0\\n   * @category Array\\n   * @param {Array} array The array to inspect.\\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n   * @param {number} [fromIndex=0] The index to search from.\\n   * @returns {number} Returns the index of the found element, else `-1`.\\n   * @example\\n   *\\n   * var users = [\\n   *   { 'user': 'barney',  'active': false },\\n   *   { 'user': 'fred',    'active': false },\\n   *   { 'user': 'pebbles', 'active': true }\\n   * ];\\n   *\\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\\n   * // => 0\\n   *\\n   * // The `_.matches` iteratee shorthand.\\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\\n   * // => 1\\n   *\\n   * // The `_.matchesProperty` iteratee shorthand.\\n   * _.findIndex(users, ['active', false]);\\n   * // => 0\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.findIndex(users, 'active');\\n   * // => 2\\n   */\\n  function findIndex(array, predicate, fromIndex) {\\n    var length = array == null ? 0 : array.length;\\n    if (!length) {\\n      return -1;\\n    }\\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\\n    if (index < 0) {\\n      index = nativeMax(length + index, 0);\\n    }\\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\\n  }\\n\\n  /**\\n   * This method is like `_.findIndex` except that it iterates over elements\\n   * of `collection` from right to left.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 2.0.0\\n   * @category Array\\n   * @param {Array} array The array to inspect.\\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n   * @param {number} [fromIndex=array.length-1] The index to search from.\\n   * @returns {number} Returns the index of the found element, else `-1`.\\n   * @example\\n   *\\n   * var users = [\\n   *   { 'user': 'barney',  'active': true },\\n   *   { 'user': 'fred',    'active': false },\\n   *   { 'user': 'pebbles', 'active': false }\\n   * ];\\n   *\\n   * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\\n   * // => 2\\n   *\\n   * // The `_.matches` iteratee shorthand.\\n   * _.findLastIndex(users, { 'user': 'barney', 'active': true });\\n   * // => 0\\n   *\\n   * // The `_.matchesProperty` iteratee shorthand.\\n   * _.findLastIndex(users, ['active', false]);\\n   * // => 2\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.findLastIndex(users, 'active');\\n   * // => 0\\n   */\\n  function findLastIndex(array, predicate, fromIndex) {\\n    var length = array == null ? 0 : array.length;\\n    if (!length) {\\n      return -1;\\n    }\\n    var index = length - 1;\\n    if (fromIndex !== undefined) {\\n      index = toInteger(fromIndex);\\n      index = fromIndex < 0\\n          ? nativeMax(length + index, 0)\\n          : nativeMin(index, length - 1);\\n    }\\n    return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\\n  }\\n\\n  /**\\n   * Flattens `array` a single level deep.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {Array} array The array to flatten.\\n   * @returns {Array} Returns the new flattened array.\\n   * @example\\n   *\\n   * _.flatten([1, [2, [3, [4]], 5]]);\\n   * // => [1, 2, [3, [4]], 5]\\n   */\\n  function flatten(array) {\\n    var length = array == null ? 0 : array.length;\\n    return length ? baseFlatten(array, 1) : [];\\n  }\\n\\n  /**\\n   * Recursively flattens `array`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.0.0\\n   * @category Array\\n   * @param {Array} array The array to flatten.\\n   * @returns {Array} Returns the new flattened array.\\n   * @example\\n   *\\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\\n   * // => [1, 2, 3, 4, 5]\\n   */\\n  function flattenDeep(array) {\\n    var length = array == null ? 0 : array.length;\\n    return length ? baseFlatten(array, INFINITY) : [];\\n  }\\n\\n  /**\\n   * Gets the first element of `array`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @alias first\\n   * @category Array\\n   * @param {Array} array The array to query.\\n   * @returns {*} Returns the first element of `array`.\\n   * @example\\n   *\\n   * _.head([1, 2, 3]);\\n   * // => 1\\n   *\\n   * _.head([]);\\n   * // => undefined\\n   */\\n  function head(array) {\\n    return (array && array.length) ? array[0] : undefined;\\n  }\\n\\n  /**\\n   * Gets the index at which the first occurrence of `value` is found in `array`\\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\\n   * offset from the end of `array`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {Array} array The array to inspect.\\n   * @param {*} value The value to search for.\\n   * @param {number} [fromIndex=0] The index to search from.\\n   * @returns {number} Returns the index of the matched value, else `-1`.\\n   * @example\\n   *\\n   * _.indexOf([1, 2, 1, 2], 2);\\n   * // => 1\\n   *\\n   * // Search from the `fromIndex`.\\n   * _.indexOf([1, 2, 1, 2], 2, 2);\\n   * // => 3\\n   */\\n  function indexOf(array, value, fromIndex) {\\n    var length = array == null ? 0 : array.length;\\n    if (!length) {\\n      return -1;\\n    }\\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\\n    if (index < 0) {\\n      index = nativeMax(length + index, 0);\\n    }\\n    return baseIndexOf(array, value, index);\\n  }\\n\\n  /**\\n   * Gets all but the last element of `array`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {Array} array The array to query.\\n   * @returns {Array} Returns the slice of `array`.\\n   * @example\\n   *\\n   * _.initial([1, 2, 3]);\\n   * // => [1, 2]\\n   */\\n  function initial(array) {\\n    var length = array == null ? 0 : array.length;\\n    return length ? baseSlice(array, 0, -1) : [];\\n  }\\n\\n  /**\\n   * Creates an array of unique values that are included in all given arrays\\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n   * for equality comparisons. The order and references of result values are\\n   * determined by the first array.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {...Array} [arrays] The arrays to inspect.\\n   * @returns {Array} Returns the new array of intersecting values.\\n   * @example\\n   *\\n   * _.intersection([2, 1], [2, 3]);\\n   * // => [2]\\n   */\\n  var intersection = baseRest(function(arrays) {\\n    var mapped = arrayMap(arrays, castArrayLikeObject);\\n    return (mapped.length && mapped[0] === arrays[0])\\n        ? baseIntersection(mapped)\\n        : [];\\n  });\\n\\n  /**\\n   * Gets the last element of `array`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {Array} array The array to query.\\n   * @returns {*} Returns the last element of `array`.\\n   * @example\\n   *\\n   * _.last([1, 2, 3]);\\n   * // => 3\\n   */\\n  function last(array) {\\n    var length = array == null ? 0 : array.length;\\n    return length ? array[length - 1] : undefined;\\n  }\\n\\n  /**\\n   * Reverses `array` so that the first element becomes the last, the second\\n   * element becomes the second to last, and so on.\\n   *\\n   * **Note:** This method mutates `array` and is based on\\n   * [`Array#reverse`](https://mdn.io/Array/reverse).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Array\\n   * @param {Array} array The array to modify.\\n   * @returns {Array} Returns `array`.\\n   * @example\\n   *\\n   * var array = [1, 2, 3];\\n   *\\n   * _.reverse(array);\\n   * // => [3, 2, 1]\\n   *\\n   * console.log(array);\\n   * // => [3, 2, 1]\\n   */\\n  function reverse(array) {\\n    return array == null ? array : nativeReverse.call(array);\\n  }\\n\\n  /**\\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\\n   *\\n   * **Note:** This method is used instead of\\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\\n   * returned.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.0.0\\n   * @category Array\\n   * @param {Array} array The array to slice.\\n   * @param {number} [start=0] The start position.\\n   * @param {number} [end=array.length] The end position.\\n   * @returns {Array} Returns the slice of `array`.\\n   */\\n  function slice(array, start, end) {\\n    var length = array == null ? 0 : array.length;\\n    if (!length) {\\n      return [];\\n    }\\n    if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\\n      start = 0;\\n      end = length;\\n    }\\n    else {\\n      start = start == null ? 0 : toInteger(start);\\n      end = end === undefined ? length : toInteger(end);\\n    }\\n    return baseSlice(array, start, end);\\n  }\\n\\n  /**\\n   * Creates a slice of `array` with `n` elements taken from the beginning.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {Array} array The array to query.\\n   * @param {number} [n=1] The number of elements to take.\\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\n   * @returns {Array} Returns the slice of `array`.\\n   * @example\\n   *\\n   * _.take([1, 2, 3]);\\n   * // => [1]\\n   *\\n   * _.take([1, 2, 3], 2);\\n   * // => [1, 2]\\n   *\\n   * _.take([1, 2, 3], 5);\\n   * // => [1, 2, 3]\\n   *\\n   * _.take([1, 2, 3], 0);\\n   * // => []\\n   */\\n  function take(array, n, guard) {\\n    if (!(array && array.length)) {\\n      return [];\\n    }\\n    n = (guard || n === undefined) ? 1 : toInteger(n);\\n    return baseSlice(array, 0, n < 0 ? 0 : n);\\n  }\\n\\n  /**\\n   * Creates a slice of `array` with `n` elements taken from the end.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.0.0\\n   * @category Array\\n   * @param {Array} array The array to query.\\n   * @param {number} [n=1] The number of elements to take.\\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\n   * @returns {Array} Returns the slice of `array`.\\n   * @example\\n   *\\n   * _.takeRight([1, 2, 3]);\\n   * // => [3]\\n   *\\n   * _.takeRight([1, 2, 3], 2);\\n   * // => [2, 3]\\n   *\\n   * _.takeRight([1, 2, 3], 5);\\n   * // => [1, 2, 3]\\n   *\\n   * _.takeRight([1, 2, 3], 0);\\n   * // => []\\n   */\\n  function takeRight(array, n, guard) {\\n    var length = array == null ? 0 : array.length;\\n    if (!length) {\\n      return [];\\n    }\\n    n = (guard || n === undefined) ? 1 : toInteger(n);\\n    n = length - n;\\n    return baseSlice(array, n < 0 ? 0 : n, length);\\n  }\\n\\n  /**\\n   * Creates an array of unique values, in order, from all given arrays using\\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n   * for equality comparisons.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {...Array} [arrays] The arrays to inspect.\\n   * @returns {Array} Returns the new array of combined values.\\n   * @example\\n   *\\n   * _.union([2], [1, 2]);\\n   * // => [2, 1]\\n   */\\n  var union = baseRest(function(arrays) {\\n    return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\\n  });\\n\\n  /**\\n   * Creates a duplicate-free version of an array, using\\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n   * for equality comparisons, in which only the first occurrence of each element\\n   * is kept. The order of result values is determined by the order they occur\\n   * in the array.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {Array} array The array to inspect.\\n   * @returns {Array} Returns the new duplicate free array.\\n   * @example\\n   *\\n   * _.uniq([2, 1, 2]);\\n   * // => [2, 1]\\n   */\\n  function uniq(array) {\\n    return (array && array.length) ? baseUniq(array) : [];\\n  }\\n\\n  /**\\n   * This method is like `_.uniq` except that it accepts `iteratee` which is\\n   * invoked for each element in `array` to generate the criterion by which\\n   * uniqueness is computed. The order of result values is determined by the\\n   * order they occur in the array. The iteratee is invoked with one argument:\\n   * (value).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Array\\n   * @param {Array} array The array to inspect.\\n   * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\\n   * @returns {Array} Returns the new duplicate free array.\\n   * @example\\n   *\\n   * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\\n   * // => [2.1, 1.2]\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\\n   * // => [{ 'x': 1 }, { 'x': 2 }]\\n   */\\n  function uniqBy(array, iteratee) {\\n    return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\\n  }\\n\\n  /**\\n   * This method is like `_.zip` except that it accepts an array of grouped\\n   * elements and creates an array regrouping the elements to their pre-zip\\n   * configuration.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 1.2.0\\n   * @category Array\\n   * @param {Array} array The array of grouped elements to process.\\n   * @returns {Array} Returns the new array of regrouped elements.\\n   * @example\\n   *\\n   * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\\n   * // => [['a', 1, true], ['b', 2, false]]\\n   *\\n   * _.unzip(zipped);\\n   * // => [['a', 'b'], [1, 2], [true, false]]\\n   */\\n  function unzip(array) {\\n    if (!(array && array.length)) {\\n      return [];\\n    }\\n    var length = 0;\\n    array = arrayFilter(array, function(group) {\\n      if (isArrayLikeObject(group)) {\\n        length = nativeMax(group.length, length);\\n        return true;\\n      }\\n    });\\n    return baseTimes(length, function(index) {\\n      return arrayMap(array, baseProperty(index));\\n    });\\n  }\\n\\n  /**\\n   * Creates an array excluding all given values using\\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n   * for equality comparisons.\\n   *\\n   * **Note:** Unlike `_.pull`, this method returns a new array.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {Array} array The array to inspect.\\n   * @param {...*} [values] The values to exclude.\\n   * @returns {Array} Returns the new array of filtered values.\\n   * @see _.difference, _.xor\\n   * @example\\n   *\\n   * _.without([2, 1, 2, 3], 1, 2);\\n   * // => [3]\\n   */\\n  var without = baseRest(function(array, values) {\\n    return isArrayLikeObject(array)\\n        ? baseDifference(array, values)\\n        : [];\\n  });\\n\\n  /**\\n   * Creates an array of grouped elements, the first of which contains the\\n   * first elements of the given arrays, the second of which contains the\\n   * second elements of the given arrays, and so on.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Array\\n   * @param {...Array} [arrays] The arrays to process.\\n   * @returns {Array} Returns the new array of grouped elements.\\n   * @example\\n   *\\n   * _.zip(['a', 'b'], [1, 2], [true, false]);\\n   * // => [['a', 1, true], ['b', 2, false]]\\n   */\\n  var zip = baseRest(unzip);\\n\\n  /**\\n   * This method is like `_.fromPairs` except that it accepts two arrays,\\n   * one of property identifiers and one of corresponding values.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.4.0\\n   * @category Array\\n   * @param {Array} [props=[]] The property identifiers.\\n   * @param {Array} [values=[]] The property values.\\n   * @returns {Object} Returns the new object.\\n   * @example\\n   *\\n   * _.zipObject(['a', 'b'], [1, 2]);\\n   * // => { 'a': 1, 'b': 2 }\\n   */\\n  function zipObject(props, values) {\\n    return baseZipObject(props || [], values || [], assignValue);\\n  }\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\\n   * chain sequences enabled. The result of such sequences must be unwrapped\\n   * with `_#value`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 1.3.0\\n   * @category Seq\\n   * @param {*} value The value to wrap.\\n   * @returns {Object} Returns the new `lodash` wrapper instance.\\n   * @example\\n   *\\n   * var users = [\\n   *   { 'user': 'barney',  'age': 36 },\\n   *   { 'user': 'fred',    'age': 40 },\\n   *   { 'user': 'pebbles', 'age': 1 }\\n   * ];\\n   *\\n   * var youngest = _\\n   *   .chain(users)\\n   *   .sortBy('age')\\n   *   .map(function(o) {\\n   *     return o.user + ' is ' + o.age;\\n   *   })\\n   *   .head()\\n   *   .value();\\n   * // => 'pebbles is 1'\\n   */\\n  function chain(value) {\\n    var result = lodash(value);\\n    result.__chain__ = true;\\n    return result;\\n  }\\n\\n  /**\\n   * This method invokes `interceptor` and returns `value`. The interceptor\\n   * is invoked with one argument; (value). The purpose of this method is to\\n   * \\\"tap into\\\" a method chain sequence in order to modify intermediate results.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Seq\\n   * @param {*} value The value to provide to `interceptor`.\\n   * @param {Function} interceptor The function to invoke.\\n   * @returns {*} Returns `value`.\\n   * @example\\n   *\\n   * _([1, 2, 3])\\n   *  .tap(function(array) {\\n   *    // Mutate input array.\\n   *    array.pop();\\n   *  })\\n   *  .reverse()\\n   *  .value();\\n   * // => [2, 1]\\n   */\\n  function tap(value, interceptor) {\\n    interceptor(value);\\n    return value;\\n  }\\n\\n  /**\\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\\n   * The purpose of this method is to \\\"pass thru\\\" values replacing intermediate\\n   * results in a method chain sequence.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.0.0\\n   * @category Seq\\n   * @param {*} value The value to provide to `interceptor`.\\n   * @param {Function} interceptor The function to invoke.\\n   * @returns {*} Returns the result of `interceptor`.\\n   * @example\\n   *\\n   * _('  abc  ')\\n   *  .chain()\\n   *  .trim()\\n   *  .thru(function(value) {\\n   *    return [value];\\n   *  })\\n   *  .value();\\n   * // => ['abc']\\n   */\\n  function thru(value, interceptor) {\\n    return interceptor(value);\\n  }\\n\\n  /**\\n   * This method is the wrapper version of `_.at`.\\n   *\\n   * @name at\\n   * @memberOf _\\n   * @since 1.0.0\\n   * @category Seq\\n   * @param {...(string|string[])} [paths] The property paths to pick.\\n   * @returns {Object} Returns the new `lodash` wrapper instance.\\n   * @example\\n   *\\n   * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\\n   *\\n   * _(object).at(['a[0].b.c', 'a[1]']).value();\\n   * // => [3, 4]\\n   */\\n  var wrapperAt = flatRest(function(paths) {\\n    var length = paths.length,\\n        start = length ? paths[0] : 0,\\n        value = this.__wrapped__,\\n        interceptor = function(object) { return baseAt(object, paths); };\\n\\n    if (length > 1 || this.__actions__.length ||\\n        !(value instanceof LazyWrapper) || !isIndex(start)) {\\n      return this.thru(interceptor);\\n    }\\n    value = value.slice(start, +start + (length ? 1 : 0));\\n    value.__actions__.push({\\n      'func': thru,\\n      'args': [interceptor],\\n      'thisArg': undefined\\n    });\\n    return new LodashWrapper(value, this.__chain__).thru(function(array) {\\n      if (length && !array.length) {\\n        array.push(undefined);\\n      }\\n      return array;\\n    });\\n  });\\n\\n  /**\\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\\n   *\\n   * @name chain\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Seq\\n   * @returns {Object} Returns the new `lodash` wrapper instance.\\n   * @example\\n   *\\n   * var users = [\\n   *   { 'user': 'barney', 'age': 36 },\\n   *   { 'user': 'fred',   'age': 40 }\\n   * ];\\n   *\\n   * // A sequence without explicit chaining.\\n   * _(users).head();\\n   * // => { 'user': 'barney', 'age': 36 }\\n   *\\n   * // A sequence with explicit chaining.\\n   * _(users)\\n   *   .chain()\\n   *   .head()\\n   *   .pick('user')\\n   *   .value();\\n   * // => { 'user': 'barney' }\\n   */\\n  function wrapperChain() {\\n    return chain(this);\\n  }\\n\\n  /**\\n   * Executes the chain sequence and returns the wrapped result.\\n   *\\n   * @name commit\\n   * @memberOf _\\n   * @since 3.2.0\\n   * @category Seq\\n   * @returns {Object} Returns the new `lodash` wrapper instance.\\n   * @example\\n   *\\n   * var array = [1, 2];\\n   * var wrapped = _(array).push(3);\\n   *\\n   * console.log(array);\\n   * // => [1, 2]\\n   *\\n   * wrapped = wrapped.commit();\\n   * console.log(array);\\n   * // => [1, 2, 3]\\n   *\\n   * wrapped.last();\\n   * // => 3\\n   *\\n   * console.log(array);\\n   * // => [1, 2, 3]\\n   */\\n  function wrapperCommit() {\\n    return new LodashWrapper(this.value(), this.__chain__);\\n  }\\n\\n  /**\\n   * Gets the next value on a wrapped object following the\\n   * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\\n   *\\n   * @name next\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Seq\\n   * @returns {Object} Returns the next iterator value.\\n   * @example\\n   *\\n   * var wrapped = _([1, 2]);\\n   *\\n   * wrapped.next();\\n   * // => { 'done': false, 'value': 1 }\\n   *\\n   * wrapped.next();\\n   * // => { 'done': false, 'value': 2 }\\n   *\\n   * wrapped.next();\\n   * // => { 'done': true, 'value': undefined }\\n   */\\n  function wrapperNext() {\\n    if (this.__values__ === undefined) {\\n      this.__values__ = toArray(this.value());\\n    }\\n    var done = this.__index__ >= this.__values__.length,\\n        value = done ? undefined : this.__values__[this.__index__++];\\n\\n    return { 'done': done, 'value': value };\\n  }\\n\\n  /**\\n   * Enables the wrapper to be iterable.\\n   *\\n   * @name Symbol.iterator\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Seq\\n   * @returns {Object} Returns the wrapper object.\\n   * @example\\n   *\\n   * var wrapped = _([1, 2]);\\n   *\\n   * wrapped[Symbol.iterator]() === wrapped;\\n   * // => true\\n   *\\n   * Array.from(wrapped);\\n   * // => [1, 2]\\n   */\\n  function wrapperToIterator() {\\n    return this;\\n  }\\n\\n  /**\\n   * Creates a clone of the chain sequence planting `value` as the wrapped value.\\n   *\\n   * @name plant\\n   * @memberOf _\\n   * @since 3.2.0\\n   * @category Seq\\n   * @param {*} value The value to plant.\\n   * @returns {Object} Returns the new `lodash` wrapper instance.\\n   * @example\\n   *\\n   * function square(n) {\\n   *   return n * n;\\n   * }\\n   *\\n   * var wrapped = _([1, 2]).map(square);\\n   * var other = wrapped.plant([3, 4]);\\n   *\\n   * other.value();\\n   * // => [9, 16]\\n   *\\n   * wrapped.value();\\n   * // => [1, 4]\\n   */\\n  function wrapperPlant(value) {\\n    var result,\\n        parent = this;\\n\\n    while (parent instanceof baseLodash) {\\n      var clone = wrapperClone(parent);\\n      clone.__index__ = 0;\\n      clone.__values__ = undefined;\\n      if (result) {\\n        previous.__wrapped__ = clone;\\n      } else {\\n        result = clone;\\n      }\\n      var previous = clone;\\n      parent = parent.__wrapped__;\\n    }\\n    previous.__wrapped__ = value;\\n    return result;\\n  }\\n\\n  /**\\n   * This method is the wrapper version of `_.reverse`.\\n   *\\n   * **Note:** This method mutates the wrapped array.\\n   *\\n   * @name reverse\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Seq\\n   * @returns {Object} Returns the new `lodash` wrapper instance.\\n   * @example\\n   *\\n   * var array = [1, 2, 3];\\n   *\\n   * _(array).reverse().value()\\n   * // => [3, 2, 1]\\n   *\\n   * console.log(array);\\n   * // => [3, 2, 1]\\n   */\\n  function wrapperReverse() {\\n    var value = this.__wrapped__;\\n    if (value instanceof LazyWrapper) {\\n      var wrapped = value;\\n      if (this.__actions__.length) {\\n        wrapped = new LazyWrapper(this);\\n      }\\n      wrapped = wrapped.reverse();\\n      wrapped.__actions__.push({\\n        'func': thru,\\n        'args': [reverse],\\n        'thisArg': undefined\\n      });\\n      return new LodashWrapper(wrapped, this.__chain__);\\n    }\\n    return this.thru(reverse);\\n  }\\n\\n  /**\\n   * Executes the chain sequence to resolve the unwrapped value.\\n   *\\n   * @name value\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @alias toJSON, valueOf\\n   * @category Seq\\n   * @returns {*} Returns the resolved unwrapped value.\\n   * @example\\n   *\\n   * _([1, 2, 3]).value();\\n   * // => [1, 2, 3]\\n   */\\n  function wrapperValue() {\\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\\n  }\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates an object composed of keys generated from the results of running\\n   * each element of `collection` thru `iteratee`. The corresponding value of\\n   * each key is the number of times the key was returned by `iteratee`. The\\n   * iteratee is invoked with one argument: (value).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.5.0\\n   * @category Collection\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\\n   * @returns {Object} Returns the composed aggregate object.\\n   * @example\\n   *\\n   * _.countBy([6.1, 4.2, 6.3], Math.floor);\\n   * // => { '4': 1, '6': 2 }\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.countBy(['one', 'two', 'three'], 'length');\\n   * // => { '3': 2, '5': 1 }\\n   */\\n  var countBy = createAggregator(function(result, value, key) {\\n    if (hasOwnProperty.call(result, key)) {\\n      ++result[key];\\n    } else {\\n      baseAssignValue(result, key, 1);\\n    }\\n  });\\n\\n  /**\\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\\n   * invoked with three arguments: (value, index|key, collection).\\n   *\\n   * **Note:** This method returns `true` for\\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\\n   * elements of empty collections.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Collection\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\\n   *  else `false`.\\n   * @example\\n   *\\n   * _.every([true, 1, null, 'yes'], Boolean);\\n   * // => false\\n   *\\n   * var users = [\\n   *   { 'user': 'barney', 'age': 36, 'active': false },\\n   *   { 'user': 'fred',   'age': 40, 'active': false }\\n   * ];\\n   *\\n   * // The `_.matches` iteratee shorthand.\\n   * _.every(users, { 'user': 'barney', 'active': false });\\n   * // => false\\n   *\\n   * // The `_.matchesProperty` iteratee shorthand.\\n   * _.every(users, ['active', false]);\\n   * // => true\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.every(users, 'active');\\n   * // => false\\n   */\\n  function every(collection, predicate, guard) {\\n    var func = isArray(collection) ? arrayEvery : baseEvery;\\n    if (guard && isIterateeCall(collection, predicate, guard)) {\\n      predicate = undefined;\\n    }\\n    return func(collection, baseIteratee(predicate, 3));\\n  }\\n\\n  /**\\n   * Iterates over elements of `collection`, returning an array of all elements\\n   * `predicate` returns truthy for. The predicate is invoked with three\\n   * arguments: (value, index|key, collection).\\n   *\\n   * **Note:** Unlike `_.remove`, this method returns a new array.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Collection\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n   * @returns {Array} Returns the new filtered array.\\n   * @see _.reject\\n   * @example\\n   *\\n   * var users = [\\n   *   { 'user': 'barney', 'age': 36, 'active': true },\\n   *   { 'user': 'fred',   'age': 40, 'active': false }\\n   * ];\\n   *\\n   * _.filter(users, function(o) { return !o.active; });\\n   * // => objects for ['fred']\\n   *\\n   * // The `_.matches` iteratee shorthand.\\n   * _.filter(users, { 'age': 36, 'active': true });\\n   * // => objects for ['barney']\\n   *\\n   * // The `_.matchesProperty` iteratee shorthand.\\n   * _.filter(users, ['active', false]);\\n   * // => objects for ['fred']\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.filter(users, 'active');\\n   * // => objects for ['barney']\\n   */\\n  function filter(collection, predicate) {\\n    var func = isArray(collection) ? arrayFilter : baseFilter;\\n    return func(collection, baseIteratee(predicate, 3));\\n  }\\n\\n  /**\\n   * Iterates over elements of `collection`, returning the first element\\n   * `predicate` returns truthy for. The predicate is invoked with three\\n   * arguments: (value, index|key, collection).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Collection\\n   * @param {Array|Object} collection The collection to inspect.\\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n   * @param {number} [fromIndex=0] The index to search from.\\n   * @returns {*} Returns the matched element, else `undefined`.\\n   * @example\\n   *\\n   * var users = [\\n   *   { 'user': 'barney',  'age': 36, 'active': true },\\n   *   { 'user': 'fred',    'age': 40, 'active': false },\\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\\n   * ];\\n   *\\n   * _.find(users, function(o) { return o.age < 40; });\\n   * // => object for 'barney'\\n   *\\n   * // The `_.matches` iteratee shorthand.\\n   * _.find(users, { 'age': 1, 'active': true });\\n   * // => object for 'pebbles'\\n   *\\n   * // The `_.matchesProperty` iteratee shorthand.\\n   * _.find(users, ['active', false]);\\n   * // => object for 'fred'\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.find(users, 'active');\\n   * // => object for 'barney'\\n   */\\n  var find = createFind(findIndex);\\n\\n  /**\\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\\n   *\\n   * **Note:** As with other \\\"Collections\\\" methods, objects with a \\\"length\\\"\\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\\n   * or `_.forOwn` for object iteration.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @alias each\\n   * @category Collection\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\\n   * @returns {Array|Object} Returns `collection`.\\n   * @see _.forEachRight\\n   * @example\\n   *\\n   * _.forEach([1, 2], function(value) {\\n   *   console.log(value);\\n   * });\\n   * // => Logs `1` then `2`.\\n   *\\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\\n   *   console.log(key);\\n   * });\\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\\n   */\\n  function forEach(collection, iteratee) {\\n    var func = isArray(collection) ? arrayEach : baseEach;\\n    return func(collection, baseIteratee(iteratee, 3));\\n  }\\n\\n  /**\\n   * Creates an object composed of keys generated from the results of running\\n   * each element of `collection` thru `iteratee`. The order of grouped values\\n   * is determined by the order they occur in `collection`. The corresponding\\n   * value of each key is an array of elements responsible for generating the\\n   * key. The iteratee is invoked with one argument: (value).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Collection\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\\n   * @returns {Object} Returns the composed aggregate object.\\n   * @example\\n   *\\n   * _.groupBy([6.1, 4.2, 6.3], Math.floor);\\n   * // => { '4': [4.2], '6': [6.1, 6.3] }\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.groupBy(['one', 'two', 'three'], 'length');\\n   * // => { '3': ['one', 'two'], '5': ['three'] }\\n   */\\n  var groupBy = createAggregator(function(result, value, key) {\\n    if (hasOwnProperty.call(result, key)) {\\n      result[key].push(value);\\n    } else {\\n      baseAssignValue(result, key, [value]);\\n    }\\n  });\\n\\n  /**\\n   * Creates an array of values by running each element in `collection` thru\\n   * `iteratee`. The iteratee is invoked with three arguments:\\n   * (value, index|key, collection).\\n   *\\n   * Many lodash methods are guarded to work as iteratees for methods like\\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\\n   *\\n   * The guarded methods are:\\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Collection\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\\n   * @returns {Array} Returns the new mapped array.\\n   * @example\\n   *\\n   * function square(n) {\\n   *   return n * n;\\n   * }\\n   *\\n   * _.map([4, 8], square);\\n   * // => [16, 64]\\n   *\\n   * _.map({ 'a': 4, 'b': 8 }, square);\\n   * // => [16, 64] (iteration order is not guaranteed)\\n   *\\n   * var users = [\\n   *   { 'user': 'barney' },\\n   *   { 'user': 'fred' }\\n   * ];\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.map(users, 'user');\\n   * // => ['barney', 'fred']\\n   */\\n  function map(collection, iteratee) {\\n    var func = isArray(collection) ? arrayMap : baseMap;\\n    return func(collection, baseIteratee(iteratee, 3));\\n  }\\n\\n  /**\\n   * Reduces `collection` to a value which is the accumulated result of running\\n   * each element in `collection` thru `iteratee`, where each successive\\n   * invocation is supplied the return value of the previous. If `accumulator`\\n   * is not given, the first element of `collection` is used as the initial\\n   * value. The iteratee is invoked with four arguments:\\n   * (accumulator, value, index|key, collection).\\n   *\\n   * Many lodash methods are guarded to work as iteratees for methods like\\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\\n   *\\n   * The guarded methods are:\\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\\n   * and `sortBy`\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Collection\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\\n   * @param {*} [accumulator] The initial value.\\n   * @returns {*} Returns the accumulated value.\\n   * @see _.reduceRight\\n   * @example\\n   *\\n   * _.reduce([1, 2], function(sum, n) {\\n   *   return sum + n;\\n   * }, 0);\\n   * // => 3\\n   *\\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\\n   *   (result[value] || (result[value] = [])).push(key);\\n   *   return result;\\n   * }, {});\\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\\n   */\\n  function reduce(collection, iteratee, accumulator) {\\n    var func = isArray(collection) ? arrayReduce : baseReduce,\\n        initAccum = arguments.length < 3;\\n\\n    return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\\n  }\\n\\n  /**\\n   * The opposite of `_.filter`; this method returns the elements of `collection`\\n   * that `predicate` does **not** return truthy for.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Collection\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n   * @returns {Array} Returns the new filtered array.\\n   * @see _.filter\\n   * @example\\n   *\\n   * var users = [\\n   *   { 'user': 'barney', 'age': 36, 'active': false },\\n   *   { 'user': 'fred',   'age': 40, 'active': true }\\n   * ];\\n   *\\n   * _.reject(users, function(o) { return !o.active; });\\n   * // => objects for ['fred']\\n   *\\n   * // The `_.matches` iteratee shorthand.\\n   * _.reject(users, { 'age': 40, 'active': true });\\n   * // => objects for ['barney']\\n   *\\n   * // The `_.matchesProperty` iteratee shorthand.\\n   * _.reject(users, ['active', false]);\\n   * // => objects for ['fred']\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.reject(users, 'active');\\n   * // => objects for ['barney']\\n   */\\n  function reject(collection, predicate) {\\n    var func = isArray(collection) ? arrayFilter : baseFilter;\\n    return func(collection, negate(baseIteratee(predicate, 3)));\\n  }\\n\\n  /**\\n   * Gets the size of `collection` by returning its length for array-like\\n   * values or the number of own enumerable string keyed properties for objects.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Collection\\n   * @param {Array|Object|string} collection The collection to inspect.\\n   * @returns {number} Returns the collection size.\\n   * @example\\n   *\\n   * _.size([1, 2, 3]);\\n   * // => 3\\n   *\\n   * _.size({ 'a': 1, 'b': 2 });\\n   * // => 2\\n   *\\n   * _.size('pebbles');\\n   * // => 7\\n   */\\n  function size(collection) {\\n    if (collection == null) {\\n      return 0;\\n    }\\n    if (isArrayLike(collection)) {\\n      return isString(collection) ? stringSize(collection) : collection.length;\\n    }\\n    var tag = getTag(collection);\\n    if (tag == mapTag || tag == setTag) {\\n      return collection.size;\\n    }\\n    return baseKeys(collection).length;\\n  }\\n\\n  /**\\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\\n   * invoked with three arguments: (value, index|key, collection).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Collection\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\\n   *  else `false`.\\n   * @example\\n   *\\n   * _.some([null, 0, 'yes', false], Boolean);\\n   * // => true\\n   *\\n   * var users = [\\n   *   { 'user': 'barney', 'active': true },\\n   *   { 'user': 'fred',   'active': false }\\n   * ];\\n   *\\n   * // The `_.matches` iteratee shorthand.\\n   * _.some(users, { 'user': 'barney', 'active': false });\\n   * // => false\\n   *\\n   * // The `_.matchesProperty` iteratee shorthand.\\n   * _.some(users, ['active', false]);\\n   * // => true\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.some(users, 'active');\\n   * // => true\\n   */\\n  function some(collection, predicate, guard) {\\n    var func = isArray(collection) ? arraySome : baseSome;\\n    if (guard && isIterateeCall(collection, predicate, guard)) {\\n      predicate = undefined;\\n    }\\n    return func(collection, baseIteratee(predicate, 3));\\n  }\\n\\n  /**\\n   * Creates an array of elements, sorted in ascending order by the results of\\n   * running each element in a collection thru each iteratee. This method\\n   * performs a stable sort, that is, it preserves the original sort order of\\n   * equal elements. The iteratees are invoked with one argument: (value).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Collection\\n   * @param {Array|Object} collection The collection to iterate over.\\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\\n   *  The iteratees to sort by.\\n   * @returns {Array} Returns the new sorted array.\\n   * @example\\n   *\\n   * var users = [\\n   *   { 'user': 'fred',   'age': 48 },\\n   *   { 'user': 'barney', 'age': 36 },\\n   *   { 'user': 'fred',   'age': 40 },\\n   *   { 'user': 'barney', 'age': 34 }\\n   * ];\\n   *\\n   * _.sortBy(users, [function(o) { return o.user; }]);\\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\\n   *\\n   * _.sortBy(users, ['user', 'age']);\\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\\n   */\\n  var sortBy = baseRest(function(collection, iteratees) {\\n    if (collection == null) {\\n      return [];\\n    }\\n    var length = iteratees.length;\\n    if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\\n      iteratees = [];\\n    } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\\n      iteratees = [iteratees[0]];\\n    }\\n    return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\\n  });\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Gets the timestamp of the number of milliseconds that have elapsed since\\n   * the Unix epoch (1 January 1970 00:00:00 UTC).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 2.4.0\\n   * @category Date\\n   * @returns {number} Returns the timestamp.\\n   * @example\\n   *\\n   * _.defer(function(stamp) {\\n   *   console.log(_.now() - stamp);\\n   * }, _.now());\\n   * // => Logs the number of milliseconds it took for the deferred invocation.\\n   */\\n  var now = function() {\\n    return root.Date.now();\\n  };\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * The opposite of `_.before`; this method creates a function that invokes\\n   * `func` once it's called `n` or more times.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Function\\n   * @param {number} n The number of calls before `func` is invoked.\\n   * @param {Function} func The function to restrict.\\n   * @returns {Function} Returns the new restricted function.\\n   * @example\\n   *\\n   * var saves = ['profile', 'settings'];\\n   *\\n   * var done = _.after(saves.length, function() {\\n   *   console.log('done saving!');\\n   * });\\n   *\\n   * _.forEach(saves, function(type) {\\n   *   asyncSave({ 'type': type, 'complete': done });\\n   * });\\n   * // => Logs 'done saving!' after the two async saves have completed.\\n   */\\n  function after(n, func) {\\n    if (typeof func != 'function') {\\n      throw new TypeError(FUNC_ERROR_TEXT);\\n    }\\n    n = toInteger(n);\\n    return function() {\\n      if (--n < 1) {\\n        return func.apply(this, arguments);\\n      }\\n    };\\n  }\\n\\n  /**\\n   * Creates a function that invokes `func`, with the `this` binding and arguments\\n   * of the created function, while it's called less than `n` times. Subsequent\\n   * calls to the created function return the result of the last `func` invocation.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.0.0\\n   * @category Function\\n   * @param {number} n The number of calls at which `func` is no longer invoked.\\n   * @param {Function} func The function to restrict.\\n   * @returns {Function} Returns the new restricted function.\\n   * @example\\n   *\\n   * jQuery(element).on('click', _.before(5, addContactToList));\\n   * // => Allows adding up to 4 contacts to the list.\\n   */\\n  function before(n, func) {\\n    var result;\\n    if (typeof func != 'function') {\\n      throw new TypeError(FUNC_ERROR_TEXT);\\n    }\\n    n = toInteger(n);\\n    return function() {\\n      if (--n > 0) {\\n        result = func.apply(this, arguments);\\n      }\\n      if (n <= 1) {\\n        func = undefined;\\n      }\\n      return result;\\n    };\\n  }\\n\\n  /**\\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\\n   * and `partials` prepended to the arguments it receives.\\n   *\\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\\n   * may be used as a placeholder for partially applied arguments.\\n   *\\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \\\"length\\\"\\n   * property of bound functions.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Function\\n   * @param {Function} func The function to bind.\\n   * @param {*} thisArg The `this` binding of `func`.\\n   * @param {...*} [partials] The arguments to be partially applied.\\n   * @returns {Function} Returns the new bound function.\\n   * @example\\n   *\\n   * function greet(greeting, punctuation) {\\n   *   return greeting + ' ' + this.user + punctuation;\\n   * }\\n   *\\n   * var object = { 'user': 'fred' };\\n   *\\n   * var bound = _.bind(greet, object, 'hi');\\n   * bound('!');\\n   * // => 'hi fred!'\\n   *\\n   * // Bound with placeholders.\\n   * var bound = _.bind(greet, object, _, '!');\\n   * bound('hi');\\n   * // => 'hi fred!'\\n   */\\n  var bind = baseRest(function(func, thisArg, partials) {\\n    var bitmask = WRAP_BIND_FLAG;\\n    if (partials.length) {\\n      var holders = replaceHolders(partials, getHolder(bind));\\n      bitmask |= WRAP_PARTIAL_FLAG;\\n    }\\n    return createWrap(func, bitmask, thisArg, partials, holders);\\n  });\\n\\n  /**\\n   * Creates a debounced function that delays invoking `func` until after `wait`\\n   * milliseconds have elapsed since the last time the debounced function was\\n   * invoked. The debounced function comes with a `cancel` method to cancel\\n   * delayed `func` invocations and a `flush` method to immediately invoke them.\\n   * Provide `options` to indicate whether `func` should be invoked on the\\n   * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\\n   * with the last arguments provided to the debounced function. Subsequent\\n   * calls to the debounced function return the result of the last `func`\\n   * invocation.\\n   *\\n   * **Note:** If `leading` and `trailing` options are `true`, `func` is\\n   * invoked on the trailing edge of the timeout only if the debounced function\\n   * is invoked more than once during the `wait` timeout.\\n   *\\n   * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\\n   * until to the next tick, similar to `setTimeout` with a timeout of `0`.\\n   *\\n   * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\\n   * for details over the differences between `_.debounce` and `_.throttle`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Function\\n   * @param {Function} func The function to debounce.\\n   * @param {number} [wait=0] The number of milliseconds to delay.\\n   * @param {Object} [options={}] The options object.\\n   * @param {boolean} [options.leading=false]\\n   *  Specify invoking on the leading edge of the timeout.\\n   * @param {number} [options.maxWait]\\n   *  The maximum time `func` is allowed to be delayed before it's invoked.\\n   * @param {boolean} [options.trailing=true]\\n   *  Specify invoking on the trailing edge of the timeout.\\n   * @returns {Function} Returns the new debounced function.\\n   * @example\\n   *\\n   * // Avoid costly calculations while the window size is in flux.\\n   * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\\n   *\\n   * // Invoke `sendMail` when clicked, debouncing subsequent calls.\\n   * jQuery(element).on('click', _.debounce(sendMail, 300, {\\n   *   'leading': true,\\n   *   'trailing': false\\n   * }));\\n   *\\n   * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\\n   * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\\n   * var source = new EventSource('/stream');\\n   * jQuery(source).on('message', debounced);\\n   *\\n   * // Cancel the trailing debounced invocation.\\n   * jQuery(window).on('popstate', debounced.cancel);\\n   */\\n  function debounce(func, wait, options) {\\n    var lastArgs,\\n        lastThis,\\n        maxWait,\\n        result,\\n        timerId,\\n        lastCallTime,\\n        lastInvokeTime = 0,\\n        leading = false,\\n        maxing = false,\\n        trailing = true;\\n\\n    if (typeof func != 'function') {\\n      throw new TypeError(FUNC_ERROR_TEXT);\\n    }\\n    wait = toNumber(wait) || 0;\\n    if (isObject(options)) {\\n      leading = !!options.leading;\\n      maxing = 'maxWait' in options;\\n      maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\\n      trailing = 'trailing' in options ? !!options.trailing : trailing;\\n    }\\n\\n    function invokeFunc(time) {\\n      var args = lastArgs,\\n          thisArg = lastThis;\\n\\n      lastArgs = lastThis = undefined;\\n      lastInvokeTime = time;\\n      result = func.apply(thisArg, args);\\n      return result;\\n    }\\n\\n    function leadingEdge(time) {\\n      // Reset any `maxWait` timer.\\n      lastInvokeTime = time;\\n      // Start the timer for the trailing edge.\\n      timerId = setTimeout(timerExpired, wait);\\n      // Invoke the leading edge.\\n      return leading ? invokeFunc(time) : result;\\n    }\\n\\n    function remainingWait(time) {\\n      var timeSinceLastCall = time - lastCallTime,\\n          timeSinceLastInvoke = time - lastInvokeTime,\\n          timeWaiting = wait - timeSinceLastCall;\\n\\n      return maxing\\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\\n          : timeWaiting;\\n    }\\n\\n    function shouldInvoke(time) {\\n      var timeSinceLastCall = time - lastCallTime,\\n          timeSinceLastInvoke = time - lastInvokeTime;\\n\\n      // Either this is the first call, activity has stopped and we're at the\\n      // trailing edge, the system time has gone backwards and we're treating\\n      // it as the trailing edge, or we've hit the `maxWait` limit.\\n      return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\\n    }\\n\\n    function timerExpired() {\\n      var time = now();\\n      if (shouldInvoke(time)) {\\n        return trailingEdge(time);\\n      }\\n      // Restart the timer.\\n      timerId = setTimeout(timerExpired, remainingWait(time));\\n    }\\n\\n    function trailingEdge(time) {\\n      timerId = undefined;\\n\\n      // Only invoke if we have `lastArgs` which means `func` has been\\n      // debounced at least once.\\n      if (trailing && lastArgs) {\\n        return invokeFunc(time);\\n      }\\n      lastArgs = lastThis = undefined;\\n      return result;\\n    }\\n\\n    function cancel() {\\n      if (timerId !== undefined) {\\n        clearTimeout(timerId);\\n      }\\n      lastInvokeTime = 0;\\n      lastArgs = lastCallTime = lastThis = timerId = undefined;\\n    }\\n\\n    function flush() {\\n      return timerId === undefined ? result : trailingEdge(now());\\n    }\\n\\n    function debounced() {\\n      var time = now(),\\n          isInvoking = shouldInvoke(time);\\n\\n      lastArgs = arguments;\\n      lastThis = this;\\n      lastCallTime = time;\\n\\n      if (isInvoking) {\\n        if (timerId === undefined) {\\n          return leadingEdge(lastCallTime);\\n        }\\n        if (maxing) {\\n          // Handle invocations in a tight loop.\\n          timerId = setTimeout(timerExpired, wait);\\n          return invokeFunc(lastCallTime);\\n        }\\n      }\\n      if (timerId === undefined) {\\n        timerId = setTimeout(timerExpired, wait);\\n      }\\n      return result;\\n    }\\n    debounced.cancel = cancel;\\n    debounced.flush = flush;\\n    return debounced;\\n  }\\n\\n  /**\\n   * Defers invoking the `func` until the current call stack has cleared. Any\\n   * additional arguments are provided to `func` when it's invoked.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Function\\n   * @param {Function} func The function to defer.\\n   * @param {...*} [args] The arguments to invoke `func` with.\\n   * @returns {number} Returns the timer id.\\n   * @example\\n   *\\n   * _.defer(function(text) {\\n   *   console.log(text);\\n   * }, 'deferred');\\n   * // => Logs 'deferred' after one millisecond.\\n   */\\n  var defer = baseRest(function(func, args) {\\n    return baseDelay(func, 1, args);\\n  });\\n\\n  /**\\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\\n   * provided to `func` when it's invoked.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Function\\n   * @param {Function} func The function to delay.\\n   * @param {number} wait The number of milliseconds to delay invocation.\\n   * @param {...*} [args] The arguments to invoke `func` with.\\n   * @returns {number} Returns the timer id.\\n   * @example\\n   *\\n   * _.delay(function(text) {\\n   *   console.log(text);\\n   * }, 1000, 'later');\\n   * // => Logs 'later' after one second.\\n   */\\n  var delay = baseRest(function(func, wait, args) {\\n    return baseDelay(func, toNumber(wait) || 0, args);\\n  });\\n\\n  /**\\n   * Creates a function that memoizes the result of `func`. If `resolver` is\\n   * provided, it determines the cache key for storing the result based on the\\n   * arguments provided to the memoized function. By default, the first argument\\n   * provided to the memoized function is used as the map cache key. The `func`\\n   * is invoked with the `this` binding of the memoized function.\\n   *\\n   * **Note:** The cache is exposed as the `cache` property on the memoized\\n   * function. Its creation may be customized by replacing the `_.memoize.Cache`\\n   * constructor with one whose instances implement the\\n   * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\\n   * method interface of `clear`, `delete`, `get`, `has`, and `set`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Function\\n   * @param {Function} func The function to have its output memoized.\\n   * @param {Function} [resolver] The function to resolve the cache key.\\n   * @returns {Function} Returns the new memoized function.\\n   * @example\\n   *\\n   * var object = { 'a': 1, 'b': 2 };\\n   * var other = { 'c': 3, 'd': 4 };\\n   *\\n   * var values = _.memoize(_.values);\\n   * values(object);\\n   * // => [1, 2]\\n   *\\n   * values(other);\\n   * // => [3, 4]\\n   *\\n   * object.a = 2;\\n   * values(object);\\n   * // => [1, 2]\\n   *\\n   * // Modify the result cache.\\n   * values.cache.set(object, ['a', 'b']);\\n   * values(object);\\n   * // => ['a', 'b']\\n   *\\n   * // Replace `_.memoize.Cache`.\\n   * _.memoize.Cache = WeakMap;\\n   */\\n  function memoize(func, resolver) {\\n    if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\\n      throw new TypeError(FUNC_ERROR_TEXT);\\n    }\\n    var memoized = function() {\\n      var args = arguments,\\n          key = resolver ? resolver.apply(this, args) : args[0],\\n          cache = memoized.cache;\\n\\n      if (cache.has(key)) {\\n        return cache.get(key);\\n      }\\n      var result = func.apply(this, args);\\n      memoized.cache = cache.set(key, result) || cache;\\n      return result;\\n    };\\n    memoized.cache = new (memoize.Cache || MapCache);\\n    return memoized;\\n  }\\n\\n  // Expose `MapCache`.\\n  memoize.Cache = MapCache;\\n\\n  /**\\n   * Creates a function that negates the result of the predicate `func`. The\\n   * `func` predicate is invoked with the `this` binding and arguments of the\\n   * created function.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.0.0\\n   * @category Function\\n   * @param {Function} predicate The predicate to negate.\\n   * @returns {Function} Returns the new negated function.\\n   * @example\\n   *\\n   * function isEven(n) {\\n   *   return n % 2 == 0;\\n   * }\\n   *\\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\\n   * // => [1, 3, 5]\\n   */\\n  function negate(predicate) {\\n    if (typeof predicate != 'function') {\\n      throw new TypeError(FUNC_ERROR_TEXT);\\n    }\\n    return function() {\\n      var args = arguments;\\n      switch (args.length) {\\n        case 0: return !predicate.call(this);\\n        case 1: return !predicate.call(this, args[0]);\\n        case 2: return !predicate.call(this, args[0], args[1]);\\n        case 3: return !predicate.call(this, args[0], args[1], args[2]);\\n      }\\n      return !predicate.apply(this, args);\\n    };\\n  }\\n\\n  /**\\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\\n   * to the function return the value of the first invocation. The `func` is\\n   * invoked with the `this` binding and arguments of the created function.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Function\\n   * @param {Function} func The function to restrict.\\n   * @returns {Function} Returns the new restricted function.\\n   * @example\\n   *\\n   * var initialize = _.once(createApplication);\\n   * initialize();\\n   * initialize();\\n   * // => `createApplication` is invoked once\\n   */\\n  function once(func) {\\n    return before(2, func);\\n  }\\n\\n  /**\\n   * Creates a function that invokes `func` with the `this` binding of the\\n   * created function and arguments from `start` and beyond provided as\\n   * an array.\\n   *\\n   * **Note:** This method is based on the\\n   * [rest parameter](https://mdn.io/rest_parameters).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Function\\n   * @param {Function} func The function to apply a rest parameter to.\\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\\n   * @returns {Function} Returns the new function.\\n   * @example\\n   *\\n   * var say = _.rest(function(what, names) {\\n   *   return what + ' ' + _.initial(names).join(', ') +\\n   *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\\n   * });\\n   *\\n   * say('hello', 'fred', 'barney', 'pebbles');\\n   * // => 'hello fred, barney, & pebbles'\\n   */\\n  function rest(func, start) {\\n    if (typeof func != 'function') {\\n      throw new TypeError(FUNC_ERROR_TEXT);\\n    }\\n    start = start === undefined ? start : toInteger(start);\\n    return baseRest(func, start);\\n  }\\n\\n  /**\\n   * Creates a throttled function that only invokes `func` at most once per\\n   * every `wait` milliseconds. The throttled function comes with a `cancel`\\n   * method to cancel delayed `func` invocations and a `flush` method to\\n   * immediately invoke them. Provide `options` to indicate whether `func`\\n   * should be invoked on the leading and/or trailing edge of the `wait`\\n   * timeout. The `func` is invoked with the last arguments provided to the\\n   * throttled function. Subsequent calls to the throttled function return the\\n   * result of the last `func` invocation.\\n   *\\n   * **Note:** If `leading` and `trailing` options are `true`, `func` is\\n   * invoked on the trailing edge of the timeout only if the throttled function\\n   * is invoked more than once during the `wait` timeout.\\n   *\\n   * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\\n   * until to the next tick, similar to `setTimeout` with a timeout of `0`.\\n   *\\n   * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\\n   * for details over the differences between `_.throttle` and `_.debounce`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Function\\n   * @param {Function} func The function to throttle.\\n   * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\\n   * @param {Object} [options={}] The options object.\\n   * @param {boolean} [options.leading=true]\\n   *  Specify invoking on the leading edge of the timeout.\\n   * @param {boolean} [options.trailing=true]\\n   *  Specify invoking on the trailing edge of the timeout.\\n   * @returns {Function} Returns the new throttled function.\\n   * @example\\n   *\\n   * // Avoid excessively updating the position while scrolling.\\n   * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\\n   *\\n   * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\\n   * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\\n   * jQuery(element).on('click', throttled);\\n   *\\n   * // Cancel the trailing throttled invocation.\\n   * jQuery(window).on('popstate', throttled.cancel);\\n   */\\n  function throttle(func, wait, options) {\\n    var leading = true,\\n        trailing = true;\\n\\n    if (typeof func != 'function') {\\n      throw new TypeError(FUNC_ERROR_TEXT);\\n    }\\n    if (isObject(options)) {\\n      leading = 'leading' in options ? !!options.leading : leading;\\n      trailing = 'trailing' in options ? !!options.trailing : trailing;\\n    }\\n    return debounce(func, wait, {\\n      'leading': leading,\\n      'maxWait': wait,\\n      'trailing': trailing\\n    });\\n  }\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates a shallow clone of `value`.\\n   *\\n   * **Note:** This method is loosely based on the\\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\\n   * arrays. The own enumerable properties of `arguments` objects are cloned\\n   * as plain objects. An empty object is returned for uncloneable values such\\n   * as error objects, functions, DOM nodes, and WeakMaps.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to clone.\\n   * @returns {*} Returns the cloned value.\\n   * @see _.cloneDeep\\n   * @example\\n   *\\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\\n   *\\n   * var shallow = _.clone(objects);\\n   * console.log(shallow[0] === objects[0]);\\n   * // => true\\n   */\\n  function clone(value) {\\n    return baseClone(value, CLONE_SYMBOLS_FLAG);\\n  }\\n\\n  /**\\n   * This method is like `_.clone` except that it recursively clones `value`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 1.0.0\\n   * @category Lang\\n   * @param {*} value The value to recursively clone.\\n   * @returns {*} Returns the deep cloned value.\\n   * @see _.clone\\n   * @example\\n   *\\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\\n   *\\n   * var deep = _.cloneDeep(objects);\\n   * console.log(deep[0] === objects[0]);\\n   * // => false\\n   */\\n  function cloneDeep(value) {\\n    return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\\n  }\\n\\n  /**\\n   * Performs a\\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n   * comparison between two values to determine if they are equivalent.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Lang\\n   * @param {*} value The value to compare.\\n   * @param {*} other The other value to compare.\\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n   * @example\\n   *\\n   * var object = { 'a': 1 };\\n   * var other = { 'a': 1 };\\n   *\\n   * _.eq(object, object);\\n   * // => true\\n   *\\n   * _.eq(object, other);\\n   * // => false\\n   *\\n   * _.eq('a', 'a');\\n   * // => true\\n   *\\n   * _.eq('a', Object('a'));\\n   * // => false\\n   *\\n   * _.eq(NaN, NaN);\\n   * // => true\\n   */\\n  function eq(value, other) {\\n    return value === other || (value !== value && other !== other);\\n  }\\n\\n  /**\\n   * Checks if `value` is likely an `arguments` object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\\n   *  else `false`.\\n   * @example\\n   *\\n   * _.isArguments(function() { return arguments; }());\\n   * // => true\\n   *\\n   * _.isArguments([1, 2, 3]);\\n   * // => false\\n   */\\n  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\\n        !propertyIsEnumerable.call(value, 'callee');\\n  };\\n\\n  /**\\n   * Checks if `value` is classified as an `Array` object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\\n   * @example\\n   *\\n   * _.isArray([1, 2, 3]);\\n   * // => true\\n   *\\n   * _.isArray(document.body.children);\\n   * // => false\\n   *\\n   * _.isArray('abc');\\n   * // => false\\n   *\\n   * _.isArray(_.noop);\\n   * // => false\\n   */\\n  var isArray = Array.isArray;\\n\\n  /**\\n   * Checks if `value` is array-like. A value is considered array-like if it's\\n   * not a function and has a `value.length` that's an integer greater than or\\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\\n   * @example\\n   *\\n   * _.isArrayLike([1, 2, 3]);\\n   * // => true\\n   *\\n   * _.isArrayLike(document.body.children);\\n   * // => true\\n   *\\n   * _.isArrayLike('abc');\\n   * // => true\\n   *\\n   * _.isArrayLike(_.noop);\\n   * // => false\\n   */\\n  function isArrayLike(value) {\\n    return value != null && isLength(value.length) && !isFunction(value);\\n  }\\n\\n  /**\\n   * This method is like `_.isArrayLike` except that it also checks if `value`\\n   * is an object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is an array-like object,\\n   *  else `false`.\\n   * @example\\n   *\\n   * _.isArrayLikeObject([1, 2, 3]);\\n   * // => true\\n   *\\n   * _.isArrayLikeObject(document.body.children);\\n   * // => true\\n   *\\n   * _.isArrayLikeObject('abc');\\n   * // => false\\n   *\\n   * _.isArrayLikeObject(_.noop);\\n   * // => false\\n   */\\n  function isArrayLikeObject(value) {\\n    return isObjectLike(value) && isArrayLike(value);\\n  }\\n\\n  /**\\n   * Checks if `value` is classified as a boolean primitive or object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\\n   * @example\\n   *\\n   * _.isBoolean(false);\\n   * // => true\\n   *\\n   * _.isBoolean(null);\\n   * // => false\\n   */\\n  function isBoolean(value) {\\n    return value === true || value === false ||\\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\\n  }\\n\\n  /**\\n   * Checks if `value` is a buffer.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.3.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\\n   * @example\\n   *\\n   * _.isBuffer(new Buffer(2));\\n   * // => true\\n   *\\n   * _.isBuffer(new Uint8Array(2));\\n   * // => false\\n   */\\n  var isBuffer = nativeIsBuffer || stubFalse;\\n\\n  /**\\n   * Checks if `value` is classified as a `Date` object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\\n   * @example\\n   *\\n   * _.isDate(new Date);\\n   * // => true\\n   *\\n   * _.isDate('Mon April 23 2012');\\n   * // => false\\n   */\\n  var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\\n\\n  /**\\n   * Checks if `value` is an empty object, collection, map, or set.\\n   *\\n   * Objects are considered empty if they have no own enumerable string keyed\\n   * properties.\\n   *\\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\\n   * @example\\n   *\\n   * _.isEmpty(null);\\n   * // => true\\n   *\\n   * _.isEmpty(true);\\n   * // => true\\n   *\\n   * _.isEmpty(1);\\n   * // => true\\n   *\\n   * _.isEmpty([1, 2, 3]);\\n   * // => false\\n   *\\n   * _.isEmpty({ 'a': 1 });\\n   * // => false\\n   */\\n  function isEmpty(value) {\\n    if (value == null) {\\n      return true;\\n    }\\n    if (isArrayLike(value) &&\\n        (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\\n      return !value.length;\\n    }\\n    var tag = getTag(value);\\n    if (tag == mapTag || tag == setTag) {\\n      return !value.size;\\n    }\\n    if (isPrototype(value)) {\\n      return !baseKeys(value).length;\\n    }\\n    for (var key in value) {\\n      if (hasOwnProperty.call(value, key)) {\\n        return false;\\n      }\\n    }\\n    return true;\\n  }\\n\\n  /**\\n   * Performs a deep comparison between two values to determine if they are\\n   * equivalent.\\n   *\\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\\n   * by their own, not inherited, enumerable properties. Functions and DOM\\n   * nodes are compared by strict equality, i.e. `===`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to compare.\\n   * @param {*} other The other value to compare.\\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n   * @example\\n   *\\n   * var object = { 'a': 1 };\\n   * var other = { 'a': 1 };\\n   *\\n   * _.isEqual(object, other);\\n   * // => true\\n   *\\n   * object === other;\\n   * // => false\\n   */\\n  function isEqual(value, other) {\\n    return baseIsEqual(value, other);\\n  }\\n\\n  /**\\n   * Checks if `value` is a finite primitive number.\\n   *\\n   * **Note:** This method is based on\\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\\n   * @example\\n   *\\n   * _.isFinite(3);\\n   * // => true\\n   *\\n   * _.isFinite(Number.MIN_VALUE);\\n   * // => true\\n   *\\n   * _.isFinite(Infinity);\\n   * // => false\\n   *\\n   * _.isFinite('3');\\n   * // => false\\n   */\\n  function isFinite(value) {\\n    return typeof value == 'number' && nativeIsFinite(value);\\n  }\\n\\n  /**\\n   * Checks if `value` is classified as a `Function` object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\\n   * @example\\n   *\\n   * _.isFunction(_);\\n   * // => true\\n   *\\n   * _.isFunction(/abc/);\\n   * // => false\\n   */\\n  function isFunction(value) {\\n    if (!isObject(value)) {\\n      return false;\\n    }\\n    // The use of `Object#toString` avoids issues with the `typeof` operator\\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\\n    var tag = baseGetTag(value);\\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\\n  }\\n\\n  /**\\n   * Checks if `value` is a valid array-like length.\\n   *\\n   * **Note:** This method is loosely based on\\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\\n   * @example\\n   *\\n   * _.isLength(3);\\n   * // => true\\n   *\\n   * _.isLength(Number.MIN_VALUE);\\n   * // => false\\n   *\\n   * _.isLength(Infinity);\\n   * // => false\\n   *\\n   * _.isLength('3');\\n   * // => false\\n   */\\n  function isLength(value) {\\n    return typeof value == 'number' &&\\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\\n  }\\n\\n  /**\\n   * Checks if `value` is the\\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\\n   * @example\\n   *\\n   * _.isObject({});\\n   * // => true\\n   *\\n   * _.isObject([1, 2, 3]);\\n   * // => true\\n   *\\n   * _.isObject(_.noop);\\n   * // => true\\n   *\\n   * _.isObject(null);\\n   * // => false\\n   */\\n  function isObject(value) {\\n    var type = typeof value;\\n    return value != null && (type == 'object' || type == 'function');\\n  }\\n\\n  /**\\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\\n   * and has a `typeof` result of \\\"object\\\".\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\\n   * @example\\n   *\\n   * _.isObjectLike({});\\n   * // => true\\n   *\\n   * _.isObjectLike([1, 2, 3]);\\n   * // => true\\n   *\\n   * _.isObjectLike(_.noop);\\n   * // => false\\n   *\\n   * _.isObjectLike(null);\\n   * // => false\\n   */\\n  function isObjectLike(value) {\\n    return value != null && typeof value == 'object';\\n  }\\n\\n  /**\\n   * Checks if `value` is classified as a `Map` object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.3.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a map, else `false`.\\n   * @example\\n   *\\n   * _.isMap(new Map);\\n   * // => true\\n   *\\n   * _.isMap(new WeakMap);\\n   * // => false\\n   */\\n  var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\\n\\n  /**\\n   * Checks if `value` is `NaN`.\\n   *\\n   * **Note:** This method is based on\\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\\n   * `undefined` and other non-number values.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\\n   * @example\\n   *\\n   * _.isNaN(NaN);\\n   * // => true\\n   *\\n   * _.isNaN(new Number(NaN));\\n   * // => true\\n   *\\n   * isNaN(undefined);\\n   * // => true\\n   *\\n   * _.isNaN(undefined);\\n   * // => false\\n   */\\n  function isNaN(value) {\\n    // An `NaN` primitive is the only value that is not equal to itself.\\n    // Perform the `toStringTag` check first to avoid errors with some\\n    // ActiveX objects in IE.\\n    return isNumber(value) && value != +value;\\n  }\\n\\n  /**\\n   * Checks if `value` is `null`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\\n   * @example\\n   *\\n   * _.isNull(null);\\n   * // => true\\n   *\\n   * _.isNull(void 0);\\n   * // => false\\n   */\\n  function isNull(value) {\\n    return value === null;\\n  }\\n\\n  /**\\n   * Checks if `value` is classified as a `Number` primitive or object.\\n   *\\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\\n   * classified as numbers, use the `_.isFinite` method.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\\n   * @example\\n   *\\n   * _.isNumber(3);\\n   * // => true\\n   *\\n   * _.isNumber(Number.MIN_VALUE);\\n   * // => true\\n   *\\n   * _.isNumber(Infinity);\\n   * // => true\\n   *\\n   * _.isNumber('3');\\n   * // => false\\n   */\\n  function isNumber(value) {\\n    return typeof value == 'number' ||\\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\\n  }\\n\\n  /**\\n   * Checks if `value` is a plain object, that is, an object created by the\\n   * `Object` constructor or one with a `[[Prototype]]` of `null`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.8.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\\n   * @example\\n   *\\n   * function Foo() {\\n   *   this.a = 1;\\n   * }\\n   *\\n   * _.isPlainObject(new Foo);\\n   * // => false\\n   *\\n   * _.isPlainObject([1, 2, 3]);\\n   * // => false\\n   *\\n   * _.isPlainObject({ 'x': 0, 'y': 0 });\\n   * // => true\\n   *\\n   * _.isPlainObject(Object.create(null));\\n   * // => true\\n   */\\n  function isPlainObject(value) {\\n    if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\\n      return false;\\n    }\\n    var proto = getPrototype(value);\\n    if (proto === null) {\\n      return true;\\n    }\\n    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\\n    return typeof Ctor == 'function' && Ctor instanceof Ctor &&\\n        funcToString.call(Ctor) == objectCtorString;\\n  }\\n\\n  /**\\n   * Checks if `value` is classified as a `RegExp` object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.1.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\\n   * @example\\n   *\\n   * _.isRegExp(/abc/);\\n   * // => true\\n   *\\n   * _.isRegExp('/abc/');\\n   * // => false\\n   */\\n  var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\\n\\n  /**\\n   * Checks if `value` is classified as a `Set` object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.3.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a set, else `false`.\\n   * @example\\n   *\\n   * _.isSet(new Set);\\n   * // => true\\n   *\\n   * _.isSet(new WeakSet);\\n   * // => false\\n   */\\n  var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\\n\\n  /**\\n   * Checks if `value` is classified as a `String` primitive or object.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\\n   * @example\\n   *\\n   * _.isString('abc');\\n   * // => true\\n   *\\n   * _.isString(1);\\n   * // => false\\n   */\\n  function isString(value) {\\n    return typeof value == 'string' ||\\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\\n  }\\n\\n  /**\\n   * Checks if `value` is classified as a `Symbol` primitive or object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\\n   * @example\\n   *\\n   * _.isSymbol(Symbol.iterator);\\n   * // => true\\n   *\\n   * _.isSymbol('abc');\\n   * // => false\\n   */\\n  function isSymbol(value) {\\n    return typeof value == 'symbol' ||\\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\\n  }\\n\\n  /**\\n   * Checks if `value` is classified as a typed array.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.0.0\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\n   * @example\\n   *\\n   * _.isTypedArray(new Uint8Array);\\n   * // => true\\n   *\\n   * _.isTypedArray([]);\\n   * // => false\\n   */\\n  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\\n\\n  /**\\n   * Checks if `value` is `undefined`.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Lang\\n   * @param {*} value The value to check.\\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\\n   * @example\\n   *\\n   * _.isUndefined(void 0);\\n   * // => true\\n   *\\n   * _.isUndefined(null);\\n   * // => false\\n   */\\n  function isUndefined(value) {\\n    return value === undefined;\\n  }\\n\\n  /**\\n   * Converts `value` to an array.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Lang\\n   * @param {*} value The value to convert.\\n   * @returns {Array} Returns the converted array.\\n   * @example\\n   *\\n   * _.toArray({ 'a': 1, 'b': 2 });\\n   * // => [1, 2]\\n   *\\n   * _.toArray('abc');\\n   * // => ['a', 'b', 'c']\\n   *\\n   * _.toArray(1);\\n   * // => []\\n   *\\n   * _.toArray(null);\\n   * // => []\\n   */\\n  function toArray(value) {\\n    if (!value) {\\n      return [];\\n    }\\n    if (isArrayLike(value)) {\\n      return isString(value) ? stringToArray(value) : copyArray(value);\\n    }\\n    if (symIterator && value[symIterator]) {\\n      return iteratorToArray(value[symIterator]());\\n    }\\n    var tag = getTag(value),\\n        func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\\n\\n    return func(value);\\n  }\\n\\n  /**\\n   * Converts `value` to a finite number.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.12.0\\n   * @category Lang\\n   * @param {*} value The value to convert.\\n   * @returns {number} Returns the converted number.\\n   * @example\\n   *\\n   * _.toFinite(3.2);\\n   * // => 3.2\\n   *\\n   * _.toFinite(Number.MIN_VALUE);\\n   * // => 5e-324\\n   *\\n   * _.toFinite(Infinity);\\n   * // => 1.7976931348623157e+308\\n   *\\n   * _.toFinite('3.2');\\n   * // => 3.2\\n   */\\n  function toFinite(value) {\\n    if (!value) {\\n      return value === 0 ? value : 0;\\n    }\\n    value = toNumber(value);\\n    if (value === INFINITY || value === -INFINITY) {\\n      var sign = (value < 0 ? -1 : 1);\\n      return sign * MAX_INTEGER;\\n    }\\n    return value === value ? value : 0;\\n  }\\n\\n  /**\\n   * Converts `value` to an integer.\\n   *\\n   * **Note:** This method is loosely based on\\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Lang\\n   * @param {*} value The value to convert.\\n   * @returns {number} Returns the converted integer.\\n   * @example\\n   *\\n   * _.toInteger(3.2);\\n   * // => 3\\n   *\\n   * _.toInteger(Number.MIN_VALUE);\\n   * // => 0\\n   *\\n   * _.toInteger(Infinity);\\n   * // => 1.7976931348623157e+308\\n   *\\n   * _.toInteger('3.2');\\n   * // => 3\\n   */\\n  function toInteger(value) {\\n    var result = toFinite(value),\\n        remainder = result % 1;\\n\\n    return result === result ? (remainder ? result - remainder : result) : 0;\\n  }\\n\\n  /**\\n   * Converts `value` to a number.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Lang\\n   * @param {*} value The value to process.\\n   * @returns {number} Returns the number.\\n   * @example\\n   *\\n   * _.toNumber(3.2);\\n   * // => 3.2\\n   *\\n   * _.toNumber(Number.MIN_VALUE);\\n   * // => 5e-324\\n   *\\n   * _.toNumber(Infinity);\\n   * // => Infinity\\n   *\\n   * _.toNumber('3.2');\\n   * // => 3.2\\n   */\\n  function toNumber(value) {\\n    if (typeof value == 'number') {\\n      return value;\\n    }\\n    if (isSymbol(value)) {\\n      return NAN;\\n    }\\n    if (isObject(value)) {\\n      var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\\n      value = isObject(other) ? (other + '') : other;\\n    }\\n    if (typeof value != 'string') {\\n      return value === 0 ? value : +value;\\n    }\\n    value = value.replace(reTrim, '');\\n    var isBinary = reIsBinary.test(value);\\n    return (isBinary || reIsOctal.test(value))\\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\\n        : (reIsBadHex.test(value) ? NAN : +value);\\n  }\\n\\n  /**\\n   * Converts `value` to a plain object flattening inherited enumerable string\\n   * keyed properties of `value` to own properties of the plain object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.0.0\\n   * @category Lang\\n   * @param {*} value The value to convert.\\n   * @returns {Object} Returns the converted plain object.\\n   * @example\\n   *\\n   * function Foo() {\\n   *   this.b = 2;\\n   * }\\n   *\\n   * Foo.prototype.c = 3;\\n   *\\n   * _.assign({ 'a': 1 }, new Foo);\\n   * // => { 'a': 1, 'b': 2 }\\n   *\\n   * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\\n   * // => { 'a': 1, 'b': 2, 'c': 3 }\\n   */\\n  function toPlainObject(value) {\\n    return copyObject(value, keysIn(value));\\n  }\\n\\n  /**\\n   * Converts `value` to a string. An empty string is returned for `null`\\n   * and `undefined` values. The sign of `-0` is preserved.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Lang\\n   * @param {*} value The value to convert.\\n   * @returns {string} Returns the converted string.\\n   * @example\\n   *\\n   * _.toString(null);\\n   * // => ''\\n   *\\n   * _.toString(-0);\\n   * // => '-0'\\n   *\\n   * _.toString([1, 2, 3]);\\n   * // => '1,2,3'\\n   */\\n  function toString(value) {\\n    return value == null ? '' : baseToString(value);\\n  }\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * This method is like `_.assign` except that it iterates over own and\\n   * inherited source properties.\\n   *\\n   * **Note:** This method mutates `object`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @alias extend\\n   * @category Object\\n   * @param {Object} object The destination object.\\n   * @param {...Object} [sources] The source objects.\\n   * @returns {Object} Returns `object`.\\n   * @see _.assign\\n   * @example\\n   *\\n   * function Foo() {\\n   *   this.a = 1;\\n   * }\\n   *\\n   * function Bar() {\\n   *   this.c = 3;\\n   * }\\n   *\\n   * Foo.prototype.b = 2;\\n   * Bar.prototype.d = 4;\\n   *\\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\\n   */\\n  var assignIn = createAssigner(function(object, source) {\\n    copyObject(source, keysIn(source), object);\\n  });\\n\\n  /**\\n   * Creates an object that inherits from the `prototype` object. If a\\n   * `properties` object is given, its own enumerable string keyed properties\\n   * are assigned to the created object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 2.3.0\\n   * @category Object\\n   * @param {Object} prototype The object to inherit from.\\n   * @param {Object} [properties] The properties to assign to the object.\\n   * @returns {Object} Returns the new object.\\n   * @example\\n   *\\n   * function Shape() {\\n   *   this.x = 0;\\n   *   this.y = 0;\\n   * }\\n   *\\n   * function Circle() {\\n   *   Shape.call(this);\\n   * }\\n   *\\n   * Circle.prototype = _.create(Shape.prototype, {\\n   *   'constructor': Circle\\n   * });\\n   *\\n   * var circle = new Circle;\\n   * circle instanceof Circle;\\n   * // => true\\n   *\\n   * circle instanceof Shape;\\n   * // => true\\n   */\\n  function create(prototype, properties) {\\n    var result = baseCreate(prototype);\\n    return properties == null ? result : baseAssign(result, properties);\\n  }\\n\\n  /**\\n   * Assigns own and inherited enumerable string keyed properties of source\\n   * objects to the destination object for all destination properties that\\n   * resolve to `undefined`. Source objects are applied from left to right.\\n   * Once a property is set, additional values of the same property are ignored.\\n   *\\n   * **Note:** This method mutates `object`.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Object\\n   * @param {Object} object The destination object.\\n   * @param {...Object} [sources] The source objects.\\n   * @returns {Object} Returns `object`.\\n   * @see _.defaultsDeep\\n   * @example\\n   *\\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\\n   * // => { 'a': 1, 'b': 2 }\\n   */\\n  var defaults = baseRest(function(object, sources) {\\n    object = Object(object);\\n\\n    var index = -1;\\n    var length = sources.length;\\n    var guard = length > 2 ? sources[2] : undefined;\\n\\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\\n      length = 1;\\n    }\\n\\n    while (++index < length) {\\n      var source = sources[index];\\n      var props = keysIn(source);\\n      var propsIndex = -1;\\n      var propsLength = props.length;\\n\\n      while (++propsIndex < propsLength) {\\n        var key = props[propsIndex];\\n        var value = object[key];\\n\\n        if (value === undefined ||\\n            (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\\n          object[key] = source[key];\\n        }\\n      }\\n    }\\n\\n    return object;\\n  });\\n\\n  /**\\n   * This method is like `_.defaults` except that it recursively assigns\\n   * default properties.\\n   *\\n   * **Note:** This method mutates `object`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.10.0\\n   * @category Object\\n   * @param {Object} object The destination object.\\n   * @param {...Object} [sources] The source objects.\\n   * @returns {Object} Returns `object`.\\n   * @see _.defaults\\n   * @example\\n   *\\n   * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\\n   * // => { 'a': { 'b': 2, 'c': 3 } }\\n   */\\n  var defaultsDeep = baseRest(function(args) {\\n    args.push(undefined, customDefaultsMerge);\\n    return apply(mergeWith, undefined, args);\\n  });\\n\\n  /**\\n   * This method is like `_.find` except that it returns the key of the first\\n   * element `predicate` returns truthy for instead of the element itself.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 1.1.0\\n   * @category Object\\n   * @param {Object} object The object to inspect.\\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n   * @returns {string|undefined} Returns the key of the matched element,\\n   *  else `undefined`.\\n   * @example\\n   *\\n   * var users = {\\n   *   'barney':  { 'age': 36, 'active': true },\\n   *   'fred':    { 'age': 40, 'active': false },\\n   *   'pebbles': { 'age': 1,  'active': true }\\n   * };\\n   *\\n   * _.findKey(users, function(o) { return o.age < 40; });\\n   * // => 'barney' (iteration order is not guaranteed)\\n   *\\n   * // The `_.matches` iteratee shorthand.\\n   * _.findKey(users, { 'age': 1, 'active': true });\\n   * // => 'pebbles'\\n   *\\n   * // The `_.matchesProperty` iteratee shorthand.\\n   * _.findKey(users, ['active', false]);\\n   * // => 'fred'\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.findKey(users, 'active');\\n   * // => 'barney'\\n   */\\n  function findKey(object, predicate) {\\n    return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);\\n  }\\n\\n  /**\\n   * This method is like `_.findKey` except that it iterates over elements of\\n   * a collection in the opposite order.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 2.0.0\\n   * @category Object\\n   * @param {Object} object The object to inspect.\\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\\n   * @returns {string|undefined} Returns the key of the matched element,\\n   *  else `undefined`.\\n   * @example\\n   *\\n   * var users = {\\n   *   'barney':  { 'age': 36, 'active': true },\\n   *   'fred':    { 'age': 40, 'active': false },\\n   *   'pebbles': { 'age': 1,  'active': true }\\n   * };\\n   *\\n   * _.findLastKey(users, function(o) { return o.age < 40; });\\n   * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\\n   *\\n   * // The `_.matches` iteratee shorthand.\\n   * _.findLastKey(users, { 'age': 36, 'active': true });\\n   * // => 'barney'\\n   *\\n   * // The `_.matchesProperty` iteratee shorthand.\\n   * _.findLastKey(users, ['active', false]);\\n   * // => 'fred'\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.findLastKey(users, 'active');\\n   * // => 'pebbles'\\n   */\\n  function findLastKey(object, predicate) {\\n    return baseFindKey(object, baseIteratee(predicate, 3), baseForOwnRight);\\n  }\\n\\n  /**\\n   * Gets the value at `path` of `object`. If the resolved value is\\n   * `undefined`, the `defaultValue` is returned in its place.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.7.0\\n   * @category Object\\n   * @param {Object} object The object to query.\\n   * @param {Array|string} path The path of the property to get.\\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\\n   * @returns {*} Returns the resolved value.\\n   * @example\\n   *\\n   * var object = { 'a': [{ 'b': { 'c': 3 } }] };\\n   *\\n   * _.get(object, 'a[0].b.c');\\n   * // => 3\\n   *\\n   * _.get(object, ['a', '0', 'b', 'c']);\\n   * // => 3\\n   *\\n   * _.get(object, 'a.b.c', 'default');\\n   * // => 'default'\\n   */\\n  function get(object, path, defaultValue) {\\n    var result = object == null ? undefined : baseGet(object, path);\\n    return result === undefined ? defaultValue : result;\\n  }\\n\\n  /**\\n   * Checks if `path` is a direct property of `object`.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Object\\n   * @param {Object} object The object to query.\\n   * @param {Array|string} path The path to check.\\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\\n   * @example\\n   *\\n   * var object = { 'a': { 'b': 2 } };\\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\\n   *\\n   * _.has(object, 'a');\\n   * // => true\\n   *\\n   * _.has(object, 'a.b');\\n   * // => true\\n   *\\n   * _.has(object, ['a', 'b']);\\n   * // => true\\n   *\\n   * _.has(other, 'a');\\n   * // => false\\n   */\\n  function has(object, path) {\\n    return object != null && hasPath(object, path, baseHas);\\n  }\\n\\n  /**\\n   * Checks if `path` is a direct or inherited property of `object`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Object\\n   * @param {Object} object The object to query.\\n   * @param {Array|string} path The path to check.\\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\\n   * @example\\n   *\\n   * var object = _.create({ 'a': _.create({ 'b': 2 }) });\\n   *\\n   * _.hasIn(object, 'a');\\n   * // => true\\n   *\\n   * _.hasIn(object, 'a.b');\\n   * // => true\\n   *\\n   * _.hasIn(object, ['a', 'b']);\\n   * // => true\\n   *\\n   * _.hasIn(object, 'b');\\n   * // => false\\n   */\\n  function hasIn(object, path) {\\n    return object != null && hasPath(object, path, baseHasIn);\\n  }\\n\\n  /**\\n   * Creates an object composed of the inverted keys and values of `object`.\\n   * If `object` contains duplicate values, subsequent values overwrite\\n   * property assignments of previous values.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.7.0\\n   * @category Object\\n   * @param {Object} object The object to invert.\\n   * @returns {Object} Returns the new inverted object.\\n   * @example\\n   *\\n   * var object = { 'a': 1, 'b': 2, 'c': 1 };\\n   *\\n   * _.invert(object);\\n   * // => { '1': 'c', '2': 'b' }\\n   */\\n  var invert = createInverter(function(result, value, key) {\\n    if (value != null &&\\n        typeof value.toString != 'function') {\\n      value = nativeObjectToString.call(value);\\n    }\\n\\n    result[value] = key;\\n  }, constant(identity));\\n\\n  /**\\n   * This method is like `_.invert` except that the inverted object is generated\\n   * from the results of running each element of `object` thru `iteratee`. The\\n   * corresponding inverted value of each inverted key is an array of keys\\n   * responsible for generating the inverted value. The iteratee is invoked\\n   * with one argument: (value).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.1.0\\n   * @category Object\\n   * @param {Object} object The object to invert.\\n   * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\\n   * @returns {Object} Returns the new inverted object.\\n   * @example\\n   *\\n   * var object = { 'a': 1, 'b': 2, 'c': 1 };\\n   *\\n   * _.invertBy(object);\\n   * // => { '1': ['a', 'c'], '2': ['b'] }\\n   *\\n   * _.invertBy(object, function(value) {\\n   *   return 'group' + value;\\n   * });\\n   * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\\n   */\\n  var invertBy = createInverter(function(result, value, key) {\\n    if (value != null &&\\n        typeof value.toString != 'function') {\\n      value = nativeObjectToString.call(value);\\n    }\\n\\n    if (hasOwnProperty.call(result, value)) {\\n      result[value].push(key);\\n    } else {\\n      result[value] = [key];\\n    }\\n  }, baseIteratee);\\n\\n  /**\\n   * Creates an array of the own enumerable property names of `object`.\\n   *\\n   * **Note:** Non-object values are coerced to objects. See the\\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\\n   * for more details.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Object\\n   * @param {Object} object The object to query.\\n   * @returns {Array} Returns the array of property names.\\n   * @example\\n   *\\n   * function Foo() {\\n   *   this.a = 1;\\n   *   this.b = 2;\\n   * }\\n   *\\n   * Foo.prototype.c = 3;\\n   *\\n   * _.keys(new Foo);\\n   * // => ['a', 'b'] (iteration order is not guaranteed)\\n   *\\n   * _.keys('hi');\\n   * // => ['0', '1']\\n   */\\n  function keys(object) {\\n    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\\n  }\\n\\n  /**\\n   * Creates an array of the own and inherited enumerable property names of `object`.\\n   *\\n   * **Note:** Non-object values are coerced to objects.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.0.0\\n   * @category Object\\n   * @param {Object} object The object to query.\\n   * @returns {Array} Returns the array of property names.\\n   * @example\\n   *\\n   * function Foo() {\\n   *   this.a = 1;\\n   *   this.b = 2;\\n   * }\\n   *\\n   * Foo.prototype.c = 3;\\n   *\\n   * _.keysIn(new Foo);\\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\\n   */\\n  function keysIn(object) {\\n    return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\\n  }\\n\\n  /**\\n   * This method is like `_.assign` except that it recursively merges own and\\n   * inherited enumerable string keyed properties of source objects into the\\n   * destination object. Source properties that resolve to `undefined` are\\n   * skipped if a destination value exists. Array and plain object properties\\n   * are merged recursively. Other objects and value types are overridden by\\n   * assignment. Source objects are applied from left to right. Subsequent\\n   * sources overwrite property assignments of previous sources.\\n   *\\n   * **Note:** This method mutates `object`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.5.0\\n   * @category Object\\n   * @param {Object} object The destination object.\\n   * @param {...Object} [sources] The source objects.\\n   * @returns {Object} Returns `object`.\\n   * @example\\n   *\\n   * var object = {\\n   *   'a': [{ 'b': 2 }, { 'd': 4 }]\\n   * };\\n   *\\n   * var other = {\\n   *   'a': [{ 'c': 3 }, { 'e': 5 }]\\n   * };\\n   *\\n   * _.merge(object, other);\\n   * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\\n   */\\n  var merge = createAssigner(function(object, source, srcIndex) {\\n    baseMerge(object, source, srcIndex);\\n  });\\n\\n  /**\\n   * This method is like `_.merge` except that it accepts `customizer` which\\n   * is invoked to produce the merged values of the destination and source\\n   * properties. If `customizer` returns `undefined`, merging is handled by the\\n   * method instead. The `customizer` is invoked with six arguments:\\n   * (objValue, srcValue, key, object, source, stack).\\n   *\\n   * **Note:** This method mutates `object`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Object\\n   * @param {Object} object The destination object.\\n   * @param {...Object} sources The source objects.\\n   * @param {Function} customizer The function to customize assigned values.\\n   * @returns {Object} Returns `object`.\\n   * @example\\n   *\\n   * function customizer(objValue, srcValue) {\\n   *   if (_.isArray(objValue)) {\\n   *     return objValue.concat(srcValue);\\n   *   }\\n   * }\\n   *\\n   * var object = { 'a': [1], 'b': [2] };\\n   * var other = { 'a': [3], 'b': [4] };\\n   *\\n   * _.mergeWith(object, other, customizer);\\n   * // => { 'a': [1, 3], 'b': [2, 4] }\\n   */\\n  var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\\n    baseMerge(object, source, srcIndex, customizer);\\n  });\\n\\n  /**\\n   * The opposite of `_.pick`; this method creates an object composed of the\\n   * own and inherited enumerable property paths of `object` that are not omitted.\\n   *\\n   * **Note:** This method is considerably slower than `_.pick`.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Object\\n   * @param {Object} object The source object.\\n   * @param {...(string|string[])} [paths] The property paths to omit.\\n   * @returns {Object} Returns the new object.\\n   * @example\\n   *\\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\\n   *\\n   * _.omit(object, ['a', 'c']);\\n   * // => { 'b': '2' }\\n   */\\n  var omit = flatRest(function(object, paths) {\\n    var result = {};\\n    if (object == null) {\\n      return result;\\n    }\\n    var isDeep = false;\\n    paths = arrayMap(paths, function(path) {\\n      path = castPath(path, object);\\n      isDeep || (isDeep = path.length > 1);\\n      return path;\\n    });\\n    copyObject(object, getAllKeysIn(object), result);\\n    if (isDeep) {\\n      result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\\n    }\\n    var length = paths.length;\\n    while (length--) {\\n      baseUnset(result, paths[length]);\\n    }\\n    return result;\\n  });\\n\\n  /**\\n   * The opposite of `_.pickBy`; this method creates an object composed of\\n   * the own and inherited enumerable string keyed properties of `object` that\\n   * `predicate` doesn't return truthy for. The predicate is invoked with two\\n   * arguments: (value, key).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Object\\n   * @param {Object} object The source object.\\n   * @param {Function} [predicate=_.identity] The function invoked per property.\\n   * @returns {Object} Returns the new object.\\n   * @example\\n   *\\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\\n   *\\n   * _.omitBy(object, _.isNumber);\\n   * // => { 'b': '2' }\\n   */\\n  function omitBy(object, predicate) {\\n    return pickBy(object, negate(baseIteratee(predicate)));\\n  }\\n\\n  /**\\n   * Creates an object composed of the picked `object` properties.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Object\\n   * @param {Object} object The source object.\\n   * @param {...(string|string[])} [paths] The property paths to pick.\\n   * @returns {Object} Returns the new object.\\n   * @example\\n   *\\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\\n   *\\n   * _.pick(object, ['a', 'c']);\\n   * // => { 'a': 1, 'c': 3 }\\n   */\\n  var pick = flatRest(function(object, paths) {\\n    return object == null ? {} : basePick(object, paths);\\n  });\\n\\n  /**\\n   * Creates an object composed of the `object` properties `predicate` returns\\n   * truthy for. The predicate is invoked with two arguments: (value, key).\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Object\\n   * @param {Object} object The source object.\\n   * @param {Function} [predicate=_.identity] The function invoked per property.\\n   * @returns {Object} Returns the new object.\\n   * @example\\n   *\\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\\n   *\\n   * _.pickBy(object, _.isNumber);\\n   * // => { 'a': 1, 'c': 3 }\\n   */\\n  function pickBy(object, predicate) {\\n    if (object == null) {\\n      return {};\\n    }\\n    var props = arrayMap(getAllKeysIn(object), function(prop) {\\n      return [prop];\\n    });\\n    predicate = baseIteratee(predicate);\\n    return basePickBy(object, props, function(value, path) {\\n      return predicate(value, path[0]);\\n    });\\n  }\\n\\n  /**\\n   * This method is like `_.get` except that if the resolved value is a\\n   * function it's invoked with the `this` binding of its parent object and\\n   * its result is returned.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Object\\n   * @param {Object} object The object to query.\\n   * @param {Array|string} path The path of the property to resolve.\\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\\n   * @returns {*} Returns the resolved value.\\n   * @example\\n   *\\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\\n   *\\n   * _.result(object, 'a[0].b.c1');\\n   * // => 3\\n   *\\n   * _.result(object, 'a[0].b.c2');\\n   * // => 4\\n   *\\n   * _.result(object, 'a[0].b.c3', 'default');\\n   * // => 'default'\\n   *\\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\\n   * // => 'default'\\n   */\\n  function result(object, path, defaultValue) {\\n    path = castPath(path, object);\\n\\n    var index = -1,\\n        length = path.length;\\n\\n    // Ensure the loop is entered when path is empty.\\n    if (!length) {\\n      length = 1;\\n      object = undefined;\\n    }\\n    while (++index < length) {\\n      var value = object == null ? undefined : object[toKey(path[index])];\\n      if (value === undefined) {\\n        index = length;\\n        value = defaultValue;\\n      }\\n      object = isFunction(value) ? value.call(object) : value;\\n    }\\n    return object;\\n  }\\n\\n  /**\\n   * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\\n   * it's created. Arrays are created for missing index properties while objects\\n   * are created for all other missing properties. Use `_.setWith` to customize\\n   * `path` creation.\\n   *\\n   * **Note:** This method mutates `object`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.7.0\\n   * @category Object\\n   * @param {Object} object The object to modify.\\n   * @param {Array|string} path The path of the property to set.\\n   * @param {*} value The value to set.\\n   * @returns {Object} Returns `object`.\\n   * @example\\n   *\\n   * var object = { 'a': [{ 'b': { 'c': 3 } }] };\\n   *\\n   * _.set(object, 'a[0].b.c', 4);\\n   * console.log(object.a[0].b.c);\\n   * // => 4\\n   *\\n   * _.set(object, ['x', '0', 'y', 'z'], 5);\\n   * console.log(object.x[0].y.z);\\n   * // => 5\\n   */\\n  function set(object, path, value) {\\n    return object == null ? object : baseSet(object, path, value);\\n  }\\n\\n  /**\\n   * Creates an array of the own enumerable string keyed property values of `object`.\\n   *\\n   * **Note:** Non-object values are coerced to objects.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Object\\n   * @param {Object} object The object to query.\\n   * @returns {Array} Returns the array of property values.\\n   * @example\\n   *\\n   * function Foo() {\\n   *   this.a = 1;\\n   *   this.b = 2;\\n   * }\\n   *\\n   * Foo.prototype.c = 3;\\n   *\\n   * _.values(new Foo);\\n   * // => [1, 2] (iteration order is not guaranteed)\\n   *\\n   * _.values('hi');\\n   * // => ['h', 'i']\\n   */\\n  function values(object) {\\n    return object == null ? [] : baseValues(object, keys(object));\\n  }\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Clamps `number` within the inclusive `lower` and `upper` bounds.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.0.0\\n   * @category Number\\n   * @param {number} number The number to clamp.\\n   * @param {number} [lower] The lower bound.\\n   * @param {number} upper The upper bound.\\n   * @returns {number} Returns the clamped number.\\n   * @example\\n   *\\n   * _.clamp(-10, -5, 5);\\n   * // => -5\\n   *\\n   * _.clamp(10, -5, 5);\\n   * // => 5\\n   */\\n  function clamp(number, lower, upper) {\\n    if (upper === undefined) {\\n      upper = lower;\\n      lower = undefined;\\n    }\\n    if (upper !== undefined) {\\n      upper = toNumber(upper);\\n      upper = upper === upper ? upper : 0;\\n    }\\n    if (lower !== undefined) {\\n      lower = toNumber(lower);\\n      lower = lower === lower ? lower : 0;\\n    }\\n    return baseClamp(toNumber(number), lower, upper);\\n  }\\n\\n  /**\\n   * Produces a random number between the inclusive `lower` and `upper` bounds.\\n   * If only one argument is provided a number between `0` and the given number\\n   * is returned. If `floating` is `true`, or either `lower` or `upper` are\\n   * floats, a floating-point number is returned instead of an integer.\\n   *\\n   * **Note:** JavaScript follows the IEEE-754 standard for resolving\\n   * floating-point values which can produce unexpected results.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 0.7.0\\n   * @category Number\\n   * @param {number} [lower=0] The lower bound.\\n   * @param {number} [upper=1] The upper bound.\\n   * @param {boolean} [floating] Specify returning a floating-point number.\\n   * @returns {number} Returns the random number.\\n   * @example\\n   *\\n   * _.random(0, 5);\\n   * // => an integer between 0 and 5\\n   *\\n   * _.random(5);\\n   * // => also an integer between 0 and 5\\n   *\\n   * _.random(5, true);\\n   * // => a floating-point number between 0 and 5\\n   *\\n   * _.random(1.2, 5.2);\\n   * // => a floating-point number between 1.2 and 5.2\\n   */\\n  function random(lower, upper, floating) {\\n    if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\\n      upper = floating = undefined;\\n    }\\n    if (floating === undefined) {\\n      if (typeof upper == 'boolean') {\\n        floating = upper;\\n        upper = undefined;\\n      }\\n      else if (typeof lower == 'boolean') {\\n        floating = lower;\\n        lower = undefined;\\n      }\\n    }\\n    if (lower === undefined && upper === undefined) {\\n      lower = 0;\\n      upper = 1;\\n    }\\n    else {\\n      lower = toFinite(lower);\\n      if (upper === undefined) {\\n        upper = lower;\\n        lower = 0;\\n      } else {\\n        upper = toFinite(upper);\\n      }\\n    }\\n    if (lower > upper) {\\n      var temp = lower;\\n      lower = upper;\\n      upper = temp;\\n    }\\n    if (floating || lower % 1 || upper % 1) {\\n      var rand = nativeRandom();\\n      return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\\n    }\\n    return baseRandom(lower, upper);\\n  }\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Converts the characters \\\"&\\\", \\\"<\\\", \\\">\\\", '\\\"', and \\\"'\\\" in `string` to their\\n   * corresponding HTML entities.\\n   *\\n   * **Note:** No other characters are escaped. To escape additional\\n   * characters use a third-party library like [_he_](https://mths.be/he).\\n   *\\n   * Though the \\\">\\\" character is escaped for symmetry, characters like\\n   * \\\">\\\" and \\\"/\\\" don't need escaping in HTML and have no special meaning\\n   * unless they're part of a tag or unquoted attribute value. See\\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\\n   * (under \\\"semi-related fun fact\\\") for more details.\\n   *\\n   * When working with HTML you should always\\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\\n   * XSS vectors.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category String\\n   * @param {string} [string=''] The string to escape.\\n   * @returns {string} Returns the escaped string.\\n   * @example\\n   *\\n   * _.escape('fred, barney, & pebbles');\\n   * // => 'fred, barney, &amp; pebbles'\\n   */\\n  function escape(string) {\\n    string = toString(string);\\n    return (string && reHasUnescapedHtml.test(string))\\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\\n        : string;\\n  }\\n\\n  /**\\n   * Removes leading and trailing whitespace or specified characters from `string`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.0.0\\n   * @category String\\n   * @param {string} [string=''] The string to trim.\\n   * @param {string} [chars=whitespace] The characters to trim.\\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\\n   * @returns {string} Returns the trimmed string.\\n   * @example\\n   *\\n   * _.trim('  abc  ');\\n   * // => 'abc'\\n   *\\n   * _.trim('-_-abc-_-', '_-');\\n   * // => 'abc'\\n   *\\n   * _.map(['  foo  ', '  bar  '], _.trim);\\n   * // => ['foo', 'bar']\\n   */\\n  function trim(string, chars, guard) {\\n    string = toString(string);\\n    if (string && (guard || chars === undefined)) {\\n      return string.replace(reTrim, '');\\n    }\\n    if (!string || !(chars = baseToString(chars))) {\\n      return string;\\n    }\\n    var strSymbols = stringToArray(string),\\n        chrSymbols = stringToArray(chars),\\n        start = charsStartIndex(strSymbols, chrSymbols),\\n        end = charsEndIndex(strSymbols, chrSymbols) + 1;\\n\\n    return castSlice(strSymbols, start, end).join('');\\n  }\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Creates a function that returns `value`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 2.4.0\\n   * @category Util\\n   * @param {*} value The value to return from the new function.\\n   * @returns {Function} Returns the new constant function.\\n   * @example\\n   *\\n   * var objects = _.times(2, _.constant({ 'a': 1 }));\\n   *\\n   * console.log(objects);\\n   * // => [{ 'a': 1 }, { 'a': 1 }]\\n   *\\n   * console.log(objects[0] === objects[1]);\\n   * // => true\\n   */\\n  function constant(value) {\\n    return function() {\\n      return value;\\n    };\\n  }\\n\\n  /**\\n   * This method returns the first argument it receives.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Util\\n   * @param {*} value Any value.\\n   * @returns {*} Returns `value`.\\n   * @example\\n   *\\n   * var object = { 'a': 1 };\\n   *\\n   * console.log(_.identity(object) === object);\\n   * // => true\\n   */\\n  function identity(value) {\\n    return value;\\n  }\\n\\n  /**\\n   * Creates a function that invokes `func` with the arguments of the created\\n   * function. If `func` is a property name, the created function returns the\\n   * property value for a given element. If `func` is an array or object, the\\n   * created function returns `true` for elements that contain the equivalent\\n   * source properties, otherwise it returns `false`.\\n   *\\n   * @static\\n   * @since 4.0.0\\n   * @memberOf _\\n   * @category Util\\n   * @param {*} [func=_.identity] The value to convert to a callback.\\n   * @returns {Function} Returns the callback.\\n   * @example\\n   *\\n   * var users = [\\n   *   { 'user': 'barney', 'age': 36, 'active': true },\\n   *   { 'user': 'fred',   'age': 40, 'active': false }\\n   * ];\\n   *\\n   * // The `_.matches` iteratee shorthand.\\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\\n   *\\n   * // The `_.matchesProperty` iteratee shorthand.\\n   * _.filter(users, _.iteratee(['user', 'fred']));\\n   * // => [{ 'user': 'fred', 'age': 40 }]\\n   *\\n   * // The `_.property` iteratee shorthand.\\n   * _.map(users, _.iteratee('user'));\\n   * // => ['barney', 'fred']\\n   *\\n   * // Create custom iteratee shorthands.\\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\\n   *     return func.test(string);\\n   *   };\\n   * });\\n   *\\n   * _.filter(['abc', 'def'], /ef/);\\n   * // => ['def']\\n   */\\n  function iteratee(func) {\\n    return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\\n  }\\n\\n  /**\\n   * Creates a function that performs a partial deep comparison between a given\\n   * object and `source`, returning `true` if the given object has equivalent\\n   * property values, else `false`.\\n   *\\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\\n   * partially applied.\\n   *\\n   * Partial comparisons will match empty array and empty object `source`\\n   * values against any array or object value, respectively. See `_.isEqual`\\n   * for a list of supported value comparisons.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 3.0.0\\n   * @category Util\\n   * @param {Object} source The object of property values to match.\\n   * @returns {Function} Returns the new spec function.\\n   * @example\\n   *\\n   * var objects = [\\n   *   { 'a': 1, 'b': 2, 'c': 3 },\\n   *   { 'a': 4, 'b': 5, 'c': 6 }\\n   * ];\\n   *\\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\\n   */\\n  function matches(source) {\\n    return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\\n  }\\n\\n  /**\\n   * Adds all own enumerable string keyed function properties of a source\\n   * object to the destination object. If `object` is a function, then methods\\n   * are added to its prototype as well.\\n   *\\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\\n   * avoid conflicts caused by modifying the original.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Util\\n   * @param {Function|Object} [object=lodash] The destination object.\\n   * @param {Object} source The object of functions to add.\\n   * @param {Object} [options={}] The options object.\\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\\n   * @returns {Function|Object} Returns `object`.\\n   * @example\\n   *\\n   * function vowels(string) {\\n   *   return _.filter(string, function(v) {\\n   *     return /[aeiou]/i.test(v);\\n   *   });\\n   * }\\n   *\\n   * _.mixin({ 'vowels': vowels });\\n   * _.vowels('fred');\\n   * // => ['e']\\n   *\\n   * _('fred').vowels().value();\\n   * // => ['e']\\n   *\\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\\n   * _('fred').vowels();\\n   * // => ['e']\\n   */\\n  function mixin(object, source, options) {\\n    var props = keys(source),\\n        methodNames = baseFunctions(source, props);\\n\\n    if (options == null &&\\n        !(isObject(source) && (methodNames.length || !props.length))) {\\n      options = source;\\n      source = object;\\n      object = this;\\n      methodNames = baseFunctions(source, keys(source));\\n    }\\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\\n        isFunc = isFunction(object);\\n\\n    arrayEach(methodNames, function(methodName) {\\n      var func = source[methodName];\\n      object[methodName] = func;\\n      if (isFunc) {\\n        object.prototype[methodName] = function() {\\n          var chainAll = this.__chain__;\\n          if (chain || chainAll) {\\n            var result = object(this.__wrapped__),\\n                actions = result.__actions__ = copyArray(this.__actions__);\\n\\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\\n            result.__chain__ = chainAll;\\n            return result;\\n          }\\n          return func.apply(object, arrayPush([this.value()], arguments));\\n        };\\n      }\\n    });\\n\\n    return object;\\n  }\\n\\n  /**\\n   * Reverts the `_` variable to its previous value and returns a reference to\\n   * the `lodash` function.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Util\\n   * @returns {Function} Returns the `lodash` function.\\n   * @example\\n   *\\n   * var lodash = _.noConflict();\\n   */\\n  function noConflict() {\\n    if (root._ === this) {\\n      root._ = oldDash;\\n    }\\n    return this;\\n  }\\n\\n  /**\\n   * This method returns `undefined`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 2.3.0\\n   * @category Util\\n   * @example\\n   *\\n   * _.times(2, _.noop);\\n   * // => [undefined, undefined]\\n   */\\n  function noop() {\\n    // No operation performed.\\n  }\\n\\n  /**\\n   * Creates a function that returns the value at `path` of a given object.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 2.4.0\\n   * @category Util\\n   * @param {Array|string} path The path of the property to get.\\n   * @returns {Function} Returns the new accessor function.\\n   * @example\\n   *\\n   * var objects = [\\n   *   { 'a': { 'b': 2 } },\\n   *   { 'a': { 'b': 1 } }\\n   * ];\\n   *\\n   * _.map(objects, _.property('a.b'));\\n   * // => [2, 1]\\n   *\\n   * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\\n   * // => [1, 2]\\n   */\\n  function property(path) {\\n    return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\\n  }\\n\\n  /**\\n   * Creates an array of numbers (positive and/or negative) progressing from\\n   * `start` up to, but not including, `end`. A step of `-1` is used if a negative\\n   * `start` is specified without an `end` or `step`. If `end` is not specified,\\n   * it's set to `start` with `start` then set to `0`.\\n   *\\n   * **Note:** JavaScript follows the IEEE-754 standard for resolving\\n   * floating-point values which can produce unexpected results.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Util\\n   * @param {number} [start=0] The start of the range.\\n   * @param {number} end The end of the range.\\n   * @param {number} [step=1] The value to increment or decrement by.\\n   * @returns {Array} Returns the range of numbers.\\n   * @see _.inRange, _.rangeRight\\n   * @example\\n   *\\n   * _.range(4);\\n   * // => [0, 1, 2, 3]\\n   *\\n   * _.range(-4);\\n   * // => [0, -1, -2, -3]\\n   *\\n   * _.range(1, 5);\\n   * // => [1, 2, 3, 4]\\n   *\\n   * _.range(0, 20, 5);\\n   * // => [0, 5, 10, 15]\\n   *\\n   * _.range(0, -4, -1);\\n   * // => [0, -1, -2, -3]\\n   *\\n   * _.range(1, 4, 0);\\n   * // => [1, 1, 1]\\n   *\\n   * _.range(0);\\n   * // => []\\n   */\\n  var range = createRange();\\n\\n  /**\\n   * This method returns a new empty array.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.13.0\\n   * @category Util\\n   * @returns {Array} Returns the new empty array.\\n   * @example\\n   *\\n   * var arrays = _.times(2, _.stubArray);\\n   *\\n   * console.log(arrays);\\n   * // => [[], []]\\n   *\\n   * console.log(arrays[0] === arrays[1]);\\n   * // => false\\n   */\\n  function stubArray() {\\n    return [];\\n  }\\n\\n  /**\\n   * This method returns `false`.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @since 4.13.0\\n   * @category Util\\n   * @returns {boolean} Returns `false`.\\n   * @example\\n   *\\n   * _.times(2, _.stubFalse);\\n   * // => [false, false]\\n   */\\n  function stubFalse() {\\n    return false;\\n  }\\n\\n  /**\\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Util\\n   * @param {string} [prefix=''] The value to prefix the ID with.\\n   * @returns {string} Returns the unique ID.\\n   * @example\\n   *\\n   * _.uniqueId('contact_');\\n   * // => 'contact_104'\\n   *\\n   * _.uniqueId();\\n   * // => '105'\\n   */\\n  function uniqueId(prefix) {\\n    var id = ++idCounter;\\n    return toString(prefix) + id;\\n  }\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\\n   * `undefined` is returned.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Math\\n   * @param {Array} array The array to iterate over.\\n   * @returns {*} Returns the maximum value.\\n   * @example\\n   *\\n   * _.max([4, 2, 8, 6]);\\n   * // => 8\\n   *\\n   * _.max([]);\\n   * // => undefined\\n   */\\n  function max(array) {\\n    return (array && array.length)\\n        ? baseExtremum(array, identity, baseGt)\\n        : undefined;\\n  }\\n\\n  /**\\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\\n   * `undefined` is returned.\\n   *\\n   * @static\\n   * @since 0.1.0\\n   * @memberOf _\\n   * @category Math\\n   * @param {Array} array The array to iterate over.\\n   * @returns {*} Returns the minimum value.\\n   * @example\\n   *\\n   * _.min([4, 2, 8, 6]);\\n   * // => 2\\n   *\\n   * _.min([]);\\n   * // => undefined\\n   */\\n  function min(array) {\\n    return (array && array.length)\\n        ? baseExtremum(array, identity, baseLt)\\n        : undefined;\\n  }\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  // Add methods that return wrapped values in chain sequences.\\n  lodash.after = after;\\n  lodash.assignIn = assignIn;\\n  lodash.before = before;\\n  lodash.bind = bind;\\n  lodash.chain = chain;\\n  lodash.compact = compact;\\n  lodash.concat = concat;\\n  lodash.countBy = countBy;\\n  lodash.create = create;\\n  lodash.debounce = debounce;\\n  lodash.defaults = defaults;\\n  lodash.defaultsDeep = defaultsDeep;\\n  lodash.defer = defer;\\n  lodash.delay = delay;\\n  lodash.difference = difference;\\n  lodash.drop = drop;\\n  lodash.filter = filter;\\n  lodash.flatten = flatten;\\n  lodash.flattenDeep = flattenDeep;\\n  lodash.groupBy = groupBy;\\n  lodash.initial = initial;\\n  lodash.intersection = intersection;\\n  lodash.invert = invert;\\n  lodash.invertBy = invertBy;\\n  lodash.iteratee = iteratee;\\n  lodash.keys = keys;\\n  lodash.map = map;\\n  lodash.matches = matches;\\n  lodash.merge = merge;\\n  lodash.mixin = mixin;\\n  lodash.negate = negate;\\n  lodash.omit = omit;\\n  lodash.omitBy = omitBy;\\n  lodash.once = once;\\n  lodash.pick = pick;\\n  lodash.range = range;\\n  lodash.reject = reject;\\n  lodash.rest = rest;\\n  lodash.set = set;\\n  lodash.slice = slice;\\n  lodash.sortBy = sortBy;\\n  lodash.take = take;\\n  lodash.takeRight = takeRight;\\n  lodash.tap = tap;\\n  lodash.throttle = throttle;\\n  lodash.thru = thru;\\n  lodash.toArray = toArray;\\n  lodash.union = union;\\n  lodash.uniq = uniq;\\n  lodash.uniqBy = uniqBy;\\n  lodash.unzip = unzip;\\n  lodash.values = values;\\n  lodash.without = without;\\n  lodash.zip = zip;\\n  lodash.zipObject = zipObject;\\n\\n  // Add aliases.\\n  lodash.extend = assignIn;\\n\\n  // Add methods to `lodash.prototype`.\\n  mixin(lodash, lodash);\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  // Add methods that return unwrapped values in chain sequences.\\n  lodash.clamp = clamp;\\n  lodash.clone = clone;\\n  lodash.cloneDeep = cloneDeep;\\n  lodash.escape = escape;\\n  lodash.every = every;\\n  lodash.find = find;\\n  lodash.findIndex = findIndex;\\n  lodash.findKey = findKey;\\n  lodash.findLastIndex = findLastIndex;\\n  lodash.findLastKey = findLastKey;\\n  lodash.forEach = forEach;\\n  lodash.get = get;\\n  lodash.has = has;\\n  lodash.head = head;\\n  lodash.identity = identity;\\n  lodash.indexOf = indexOf;\\n  lodash.isArguments = isArguments;\\n  lodash.isArray = isArray;\\n  lodash.isArrayLike = isArrayLike;\\n  lodash.isBoolean = isBoolean;\\n  lodash.isDate = isDate;\\n  lodash.isEmpty = isEmpty;\\n  lodash.isEqual = isEqual;\\n  lodash.isFinite = isFinite;\\n  lodash.isFunction = isFunction;\\n  lodash.isNaN = isNaN;\\n  lodash.isNull = isNull;\\n  lodash.isNumber = isNumber;\\n  lodash.isObject = isObject;\\n  lodash.isPlainObject = isPlainObject;\\n  lodash.isRegExp = isRegExp;\\n  lodash.isString = isString;\\n  lodash.isUndefined = isUndefined;\\n  lodash.last = last;\\n  lodash.max = max;\\n  lodash.min = min;\\n  lodash.noConflict = noConflict;\\n  lodash.noop = noop;\\n  lodash.random = random;\\n  lodash.reduce = reduce;\\n  lodash.result = result;\\n  lodash.size = size;\\n  lodash.some = some;\\n  lodash.trim = trim;\\n  lodash.uniqueId = uniqueId;\\n\\n  // Add aliases.\\n  lodash.each = forEach;\\n  lodash.first = head;\\n\\n  mixin(lodash, (function() {\\n    var source = {};\\n    baseForOwn(lodash, function(func, methodName) {\\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\\n        source[methodName] = func;\\n      }\\n    });\\n    return source;\\n  }()), { 'chain': false });\\n\\n  /*------------------------------------------------------------------------*/\\n\\n  /**\\n   * The semantic version number.\\n   *\\n   * @static\\n   * @memberOf _\\n   * @type {string}\\n   */\\n  lodash.VERSION = VERSION;\\n\\n  // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\\n  arrayEach(['drop', 'take'], function(methodName, index) {\\n    LazyWrapper.prototype[methodName] = function(n) {\\n      n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\\n\\n      var result = (this.__filtered__ && !index)\\n          ? new LazyWrapper(this)\\n          : this.clone();\\n\\n      if (result.__filtered__) {\\n        result.__takeCount__ = nativeMin(n, result.__takeCount__);\\n      } else {\\n        result.__views__.push({\\n          'size': nativeMin(n, MAX_ARRAY_LENGTH),\\n          'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\\n        });\\n      }\\n      return result;\\n    };\\n\\n    LazyWrapper.prototype[methodName + 'Right'] = function(n) {\\n      return this.reverse()[methodName](n).reverse();\\n    };\\n  });\\n\\n  // Add `LazyWrapper` methods that accept an `iteratee` value.\\n  arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\\n    var type = index + 1,\\n        isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\\n\\n    LazyWrapper.prototype[methodName] = function(iteratee) {\\n      var result = this.clone();\\n      result.__iteratees__.push({\\n        'iteratee': getIteratee(iteratee, 3),\\n        'type': type\\n      });\\n      result.__filtered__ = result.__filtered__ || isFilter;\\n      return result;\\n    };\\n  });\\n\\n  // Add `LazyWrapper` methods for `_.head` and `_.last`.\\n  arrayEach(['head', 'last'], function(methodName, index) {\\n    var takeName = 'take' + (index ? 'Right' : '');\\n\\n    LazyWrapper.prototype[methodName] = function() {\\n      return this[takeName](1).value()[0];\\n    };\\n  });\\n\\n  // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\\n  arrayEach(['initial', 'tail'], function(methodName, index) {\\n    var dropName = 'drop' + (index ? '' : 'Right');\\n\\n    LazyWrapper.prototype[methodName] = function() {\\n      return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\\n    };\\n  });\\n\\n  LazyWrapper.prototype.compact = function() {\\n    return this.filter(identity);\\n  };\\n\\n  LazyWrapper.prototype.find = function(predicate) {\\n    return this.filter(predicate).head();\\n  };\\n\\n  LazyWrapper.prototype.findLast = function(predicate) {\\n    return this.reverse().find(predicate);\\n  };\\n\\n  LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\\n    if (typeof path == 'function') {\\n      return new LazyWrapper(this);\\n    }\\n    return this.map(function(value) {\\n      return baseInvoke(value, path, args);\\n    });\\n  });\\n\\n  LazyWrapper.prototype.reject = function(predicate) {\\n    return this.filter(negate(getIteratee(predicate)));\\n  };\\n\\n  LazyWrapper.prototype.slice = function(start, end) {\\n    start = toInteger(start);\\n\\n    var result = this;\\n    if (result.__filtered__ && (start > 0 || end < 0)) {\\n      return new LazyWrapper(result);\\n    }\\n    if (start < 0) {\\n      result = result.takeRight(-start);\\n    } else if (start) {\\n      result = result.drop(start);\\n    }\\n    if (end !== undefined) {\\n      end = toInteger(end);\\n      result = end < 0 ? result.dropRight(-end) : result.take(end - start);\\n    }\\n    return result;\\n  };\\n\\n  LazyWrapper.prototype.takeRightWhile = function(predicate) {\\n    return this.reverse().takeWhile(predicate).reverse();\\n  };\\n\\n  LazyWrapper.prototype.toArray = function() {\\n    return this.take(MAX_ARRAY_LENGTH);\\n  };\\n\\n  // Add `LazyWrapper` methods to `lodash.prototype`.\\n  baseForOwn(LazyWrapper.prototype, function(func, methodName) {\\n    var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\\n        isTaker = /^(?:head|last)$/.test(methodName),\\n        lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\\n        retUnwrapped = isTaker || /^find/.test(methodName);\\n\\n    if (!lodashFunc) {\\n      return;\\n    }\\n    lodash.prototype[methodName] = function() {\\n      var value = this.__wrapped__,\\n          args = isTaker ? [1] : arguments,\\n          isLazy = value instanceof LazyWrapper,\\n          iteratee = args[0],\\n          useLazy = isLazy || isArray(value);\\n\\n      var interceptor = function(value) {\\n        var result = lodashFunc.apply(lodash, arrayPush([value], args));\\n        return (isTaker && chainAll) ? result[0] : result;\\n      };\\n\\n      if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\\n        // Avoid lazy use if the iteratee has a \\\"length\\\" value other than `1`.\\n        isLazy = useLazy = false;\\n      }\\n      var chainAll = this.__chain__,\\n          isHybrid = !!this.__actions__.length,\\n          isUnwrapped = retUnwrapped && !chainAll,\\n          onlyLazy = isLazy && !isHybrid;\\n\\n      if (!retUnwrapped && useLazy) {\\n        value = onlyLazy ? value : new LazyWrapper(this);\\n        var result = func.apply(value, args);\\n        result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\\n        return new LodashWrapper(result, chainAll);\\n      }\\n      if (isUnwrapped && onlyLazy) {\\n        return func.apply(this, args);\\n      }\\n      result = this.thru(interceptor);\\n      return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\\n    };\\n  });\\n\\n  // Add `Array` methods to `lodash.prototype`.\\n  arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\\n    var func = arrayProto[methodName],\\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\\n        retUnwrapped = /^(?:pop|shift)$/.test(methodName);\\n\\n    lodash.prototype[methodName] = function() {\\n      var args = arguments;\\n      if (retUnwrapped && !this.__chain__) {\\n        var value = this.value();\\n        return func.apply(isArray(value) ? value : [], args);\\n      }\\n      return this[chainName](function(value) {\\n        return func.apply(isArray(value) ? value : [], args);\\n      });\\n    };\\n  });\\n\\n  // Map minified method names to their real names.\\n  baseForOwn(LazyWrapper.prototype, function(func, methodName) {\\n    var lodashFunc = lodash[methodName];\\n    if (lodashFunc) {\\n      var key = (lodashFunc.name + ''),\\n          names = realNames[key] || (realNames[key] = []);\\n\\n      names.push({ 'name': methodName, 'func': lodashFunc });\\n    }\\n  });\\n\\n  realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\\n    'name': 'wrapper',\\n    'func': undefined\\n  }];\\n\\n  // Add methods to `LazyWrapper`.\\n  LazyWrapper.prototype.clone = lazyClone;\\n  LazyWrapper.prototype.reverse = lazyReverse;\\n  LazyWrapper.prototype.value = lazyValue;\\n\\n  // Add lazy aliases.\\n  lodash.prototype.first = lodash.prototype.head;\\n\\n  if (symIterator) {\\n    lodash.prototype[symIterator] = wrapperToIterator;\\n  }\\n\\n  /*--------------------------------------------------------------------------*/\\n\\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\\n    // Expose Lodash on the global object to prevent errors when Lodash is\\n    // loaded by a script tag in the presence of an AMD loader.\\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\\n    // Use `_.noConflict` to remove Lodash from the global object.\\n    root._ = lodash;\\n\\n    // Define as an anonymous module so, through path mapping, it can be\\n    // referenced as the \\\"underscore\\\" module.\\n    define(function() {\\n      return lodash;\\n    });\\n  }\\n  // Check for `exports` after `define` in case a build optimizer adds it.\\n  else if (freeModule) {\\n    // Export for Node.js.\\n    (freeModule.exports = lodash)._ = lodash;\\n    // Export for CommonJS support.\\n    freeExports._ = lodash;\\n  }\\n  else {\\n    // Export to the global object.\\n    root._ = lodash;\\n  }\\n}.call(this));\\n\"","/**\n * 基本函数\n * Create By GUY 2014\\11\\17\n *\n */\n_global = undefined;\nif (typeof window !== \"undefined\") {\n    _global = window;\n} else if (typeof global !== \"undefined\") {\n    _global = global;\n} else if (typeof self !== \"undefined\") {\n    _global = self;\n} else {\n    _global = this;\n}\nif (!_global.BI) {\n    _global.BI = {};\n}\n\n!(function (undefined) {\n    var traverse = function (func, context) {\n        return function (value, key, obj) {\n            return func.call(context, key, value, obj);\n        };\n    };\n    var _apply = function (name) {\n        return function () {\n            return _[name].apply(_, arguments);\n        };\n    };\n    var _applyFunc = function (name) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments, 0);\n            args[1] = _.isFunction(args[1]) ? traverse(args[1], args[2]) : args[1];\n            return _[name].apply(_, args);\n        };\n    };\n\n    // Utility\n    _.extend(BI, {\n        assert: function (v, is) {\n            if (this.isFunction(is)) {\n                if (!is(v)) {\n                    throw new Error(v + \" error\");\n                } else {\n                    return true;\n                }\n            }\n            if (!this.isArray(is)) {\n                is = [is];\n            }\n            if (!this.deepContains(is, v)) {\n                throw new Error(v + \" error\");\n            }\n            return true;\n        },\n\n        warn: function (message) {\n            console.warn(message);\n        },\n\n        UUID: function () {\n            var f = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n            var str = \"\";\n            for (var i = 0; i < 16; i++) {\n                var r = parseInt(f.length * Math.random(), 10);\n                str += f[r];\n            }\n            return str;\n        },\n\n        isWidget: function (widget) {\n            return widget instanceof BI.Widget || (BI.View && widget instanceof BI.View);\n        },\n\n        createWidgets: function (items, options, context) {\n            if (!BI.isArray(items)) {\n                throw new Error(\"cannot create Widgets\");\n            }\n            if (BI.isWidget(options)) {\n                context = options;\n                options = {};\n            } else {\n                options || (options = {});\n            }\n            return BI.map(BI.flatten(items), function (i, item) {\n                return BI.createWidget(item, BI.deepClone(options));\n            });\n        },\n\n        createItems: function (data, innerAttr, outerAttr) {\n            innerAttr = BI.isArray(innerAttr) ? innerAttr : BI.makeArray(BI.flatten(data).length, innerAttr || {});\n            outerAttr = BI.isArray(outerAttr) ? outerAttr : BI.makeArray(BI.flatten(data).length, outerAttr || {});\n            return BI.map(data, function (i, item) {\n                if (BI.isArray(item)) {\n                    return BI.createItems(item, innerAttr, outerAttr);\n                }\n                if (item instanceof BI.Widget) {\n                    return BI.extend({}, innerAttr.shift(), outerAttr.shift(), {\n                        type: null,\n                        el: item\n                    });\n                }\n                if (innerAttr[0] instanceof BI.Widget) {\n                    outerAttr.shift();\n                    return BI.extend({}, item, {\n                        el: innerAttr.shift()\n                    });\n                }\n                if (item.el instanceof BI.Widget || (BI.View && item.el instanceof BI.View)) {\n                    innerAttr.shift();\n                    return BI.extend({}, outerAttr.shift(), { type: null }, item);\n                }\n                if (item.el) {\n                    return BI.extend({}, outerAttr.shift(), item, {\n                        el: BI.extend({}, innerAttr.shift(), item.el)\n                    });\n                }\n                return BI.extend({}, outerAttr.shift(), {\n                    el: BI.extend({}, innerAttr.shift(), item)\n                });\n            });\n        },\n\n        // 用容器包装items\n        packageItems: function (items, layouts) {\n            for (var i = layouts.length - 1; i >= 0; i--) {\n                items = BI.map(items, function (k, it) {\n                    return BI.extend({}, layouts[i], {\n                        items: [\n                            BI.extend({}, layouts[i].el, {\n                                el: it\n                            })\n                        ]\n                    });\n                });\n            }\n            return items;\n        },\n\n        formatEL: function (obj) {\n            if (obj && !obj.type && obj.el) {\n                return obj;\n            }\n            return {\n                el: obj\n            };\n        },\n\n        // 剥开EL\n        stripEL: function (obj) {\n            return obj.type && obj || obj.el || obj;\n        },\n\n        trans2Element: function (widgets) {\n            return BI.map(widgets, function (i, wi) {\n                return wi.element;\n            });\n        }\n    });\n\n    // 集合相关方法\n    _.each([\"where\", \"findWhere\", \"invoke\", \"pluck\", \"shuffle\", \"sample\", \"toArray\", \"size\"], function (name) {\n        BI[name] = _apply(name);\n    });\n    _.each([\"get\", \"set\", \"each\", \"map\", \"reduce\", \"reduceRight\", \"find\", \"filter\", \"reject\", \"every\", \"all\", \"some\", \"any\", \"max\", \"min\",\n        \"sortBy\", \"groupBy\", \"indexBy\", \"countBy\", \"partition\", \"clamp\"], function (name) {\n        if (name === \"any\") {\n            BI[name] = _applyFunc(\"some\");\n        } else {\n            BI[name] = _applyFunc(name);\n        }\n    });\n    _.extend(BI, {\n        // 数数\n        count: function (from, to, predicate) {\n            var t;\n            if (predicate) {\n                for (t = from; t < to; t++) {\n                    predicate(t);\n                }\n            }\n            return to - from;\n        },\n\n        // 倒数\n        inverse: function (from, to, predicate) {\n            return BI.count(to, from, predicate);\n        },\n\n        firstKey: function (obj) {\n            var res = undefined;\n            BI.any(obj, function (key, value) {\n                res = key;\n                return true;\n            });\n            return res;\n        },\n\n        lastKey: function (obj) {\n            var res = undefined;\n            BI.each(obj, function (key, value) {\n                res = key;\n                return true;\n            });\n            return res;\n        },\n\n        firstObject: function (obj) {\n            var res = undefined;\n            BI.any(obj, function (key, value) {\n                res = value;\n                return true;\n            });\n            return res;\n        },\n\n        lastObject: function (obj) {\n            var res = undefined;\n            BI.each(obj, function (key, value) {\n                res = value;\n                return true;\n            });\n            return res;\n        },\n\n        concat: function (obj1, obj2) {\n            if (BI.isKey(obj1)) {\n                return BI.map([].slice.apply(arguments), function (idx, v) {\n                    return v;\n                }).join(\"\");\n            }\n            if (BI.isArray(obj1)) {\n                return _.concat.apply([], arguments);\n            }\n            if (BI.isObject(obj1)) {\n                return _.extend.apply({}, arguments);\n            }\n        },\n\n        backEach: function (obj, predicate, context) {\n            predicate = BI.iteratee(predicate, context);\n            for (var index = obj.length - 1; index >= 0; index--) {\n                predicate(index, obj[index], obj);\n            }\n            return false;\n        },\n\n        backAny: function (obj, predicate, context) {\n            predicate = BI.iteratee(predicate, context);\n            for (var index = obj.length - 1; index >= 0; index--) {\n                if (predicate(index, obj[index], obj)) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        backEvery: function (obj, predicate, context) {\n            predicate = BI.iteratee(predicate, context);\n            for (var index = obj.length - 1; index >= 0; index--) {\n                if (!predicate(index, obj[index], obj)) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n        backFindKey: function (obj, predicate, context) {\n            predicate = BI.iteratee(predicate, context);\n            var keys = _.keys(obj), key;\n            for (var i = keys.length - 1; i >= 0; i--) {\n                key = keys[i];\n                if (predicate(obj[key], key, obj)) {\n                    return key;\n                }\n            }\n        },\n\n        backFind: function (obj, predicate, context) {\n            var key;\n            if (BI.isArray(obj)) {\n                key = BI.findLastIndex(obj, predicate, context);\n            } else {\n                key = BI.backFindKey(obj, predicate, context);\n            }\n            if (key !== void 0 && key !== -1) {\n                return obj[key];\n            }\n        },\n\n        remove: function (obj, target, context) {\n            var isFunction = BI.isFunction(target);\n            target = isFunction || BI.isArray(target) ? target : [target];\n            var i;\n            if (BI.isArray(obj)) {\n                for (i = 0; i < obj.length; i++) {\n                    if ((isFunction && target.apply(context, [i, obj[i]]) === true) || (!isFunction && BI.contains(target, obj[i]))) {\n                        obj.splice(i--, 1);\n                    }\n                }\n            } else {\n                BI.each(obj, function (i, v) {\n                    if ((isFunction && target.apply(context, [i, obj[i]]) === true) || (!isFunction && BI.contains(target, obj[i]))) {\n                        delete obj[i];\n                    }\n                });\n            }\n        },\n\n        removeAt: function (obj, index) {\n            index = BI.isArray(index) ? index : [index];\n            var isArray = BI.isArray(obj), i;\n            for (i = 0; i < index.length; i++) {\n                if (isArray) {\n                    obj[index[i]] = \"$deleteIndex\";\n                } else {\n                    delete obj[index[i]];\n                }\n            }\n            if (isArray) {\n                BI.remove(obj, \"$deleteIndex\");\n            }\n        },\n\n        string2Array: function (str) {\n            return str.split(\"&-&\");\n        },\n\n        array2String: function (array) {\n            return array.join(\"&-&\");\n        },\n\n        abc2Int: function (str) {\n            var idx = 0, start = \"A\", str = str.toUpperCase();\n            for (var i = 0, len = str.length; i < len; ++i) {\n                idx = str.charAt(i).charCodeAt(0) - start.charCodeAt(0) + 26 * idx + 1;\n                if (idx > (2147483646 - str.charAt(i).charCodeAt(0) + start.charCodeAt(0)) / 26) {\n                    return 0;\n                }\n            }\n            return idx;\n        },\n\n        int2Abc: function (num) {\n            var DIGITS = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n            var idx = num, str = \"\";\n            if (num === 0) {\n                return \"\";\n            }\n            while (idx !== 0) {\n                var t = idx % 26;\n                if (t === 0) {\n                    t = 26;\n                }\n                str = DIGITS[t - 1] + str;\n                idx = (idx - t) / 26;\n            }\n            return str;\n        }\n    });\n\n    // 数组相关的方法\n    _.each([\"first\", \"initial\", \"last\", \"rest\", \"compact\", \"flatten\", \"without\", \"union\", \"intersection\",\n        \"difference\", \"zip\", \"unzip\", \"object\", \"indexOf\", \"lastIndexOf\", \"sortedIndex\", \"range\", \"take\", \"takeRight\", \"uniqBy\"], function (name) {\n        BI[name] = _apply(name);\n    });\n    _.each([\"findIndex\", \"findLastIndex\"], function (name) {\n        BI[name] = _applyFunc(name);\n    });\n    _.extend(BI, {\n        // 构建一个长度为length的数组\n        makeArray: function (length, value) {\n            var res = [];\n            for (var i = 0; i < length; i++) {\n                if (BI.isNull(value)) {\n                    res.push(i);\n                } else {\n                    res.push(BI.deepClone(value));\n                }\n            }\n            return res;\n        },\n\n        makeObject: function (array, value) {\n            var map = {};\n            for (var i = 0; i < array.length; i++) {\n                if (BI.isNull(value)) {\n                    map[array[i]] = array[i];\n                } else {\n                    map[array[i]] = BI.deepClone(value);\n                }\n            }\n            return map;\n        },\n\n        makeArrayByArray: function (array, value) {\n            var res = [];\n            if (!array) {\n                return res;\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (BI.isArray(array[i])) {\n                    res.push(arguments.callee(array[i], value));\n                } else {\n                    res.push(BI.deepClone(value));\n                }\n            }\n            return res;\n        },\n\n        uniq: function (array, isSorted, iteratee, context) {\n            if (array == null) {\n                return [];\n            }\n            if (!_.isBoolean(isSorted)) {\n                context = iteratee;\n                iteratee = isSorted;\n                isSorted = false;\n            }\n            iteratee && (iteratee = traverse(iteratee, context));\n            return _.uniq.call(_, array, isSorted, iteratee, context);\n        }\n    });\n\n    // 对象相关方法\n    _.each([\"keys\", \"allKeys\", \"values\", \"pairs\", \"invert\", \"create\", \"functions\", \"extend\", \"extendOwn\",\n        \"defaults\", \"clone\", \"property\", \"propertyOf\", \"matcher\", \"isEqual\", \"isMatch\", \"isEmpty\",\n        \"isElement\", \"isNumber\", \"isString\", \"isArray\", \"isObject\", \"isPlainObject\", \"isArguments\", \"isFunction\", \"isFinite\",\n        \"isBoolean\", \"isDate\", \"isRegExp\", \"isError\", \"isNaN\", \"isUndefined\", \"zipObject\", \"cloneDeep\"], function (name) {\n        BI[name] = _apply(name);\n    });\n    _.each([\"mapObject\", \"findKey\", \"pick\", \"omit\", \"tap\"], function (name) {\n        BI[name] = _applyFunc(name);\n    });\n    _.extend(BI, {\n\n        inherit: function (sb, sp, overrides) {\n            if (typeof sp === \"object\") {\n                overrides = sp;\n                sp = sb;\n                sb = function () {\n                    return sp.apply(this, arguments);\n                };\n            }\n            var F = function () {\n            }, spp = sp.prototype;\n            F.prototype = spp;\n            sb.prototype = new F();\n            sb.superclass = spp;\n            _.extend(sb.prototype, overrides, {\n                superclass: sp\n            });\n            return sb;\n        },\n\n        init: function () {\n            // 先把准备环境准备好\n            while (BI.prepares && BI.prepares.length > 0) {\n                BI.prepares.shift()();\n            }\n            while (_global.___fineuiExposedFunction && _global.___fineuiExposedFunction.length > 0) {\n                _global.___fineuiExposedFunction.shift()();\n            }\n            BI.initialized = true;\n        },\n\n        has: function (obj, keys) {\n            if (BI.isArray(keys)) {\n                if (keys.length === 0) {\n                    return false;\n                }\n                return BI.every(keys, function (i, key) {\n                    return _.has(obj, key);\n                });\n            }\n            return _.has.apply(_, arguments);\n        },\n\n        freeze: function (value) {\n            // 在ES5中，如果这个方法的参数不是一个对象（一个原始值），那么它会导致 TypeError\n            // 在ES2015中，非对象参数将被视为要被冻结的普通对象，并被简单地返回\n            if (Object.freeze && BI.isObject(value)) {\n                return Object.freeze(value);\n            }\n            return value;\n        },\n\n        // 数字和字符串可以作为key\n        isKey: function (key) {\n            return BI.isNumber(key) || (BI.isString(key) && key.length > 0);\n        },\n\n        // 忽略大小写的等于\n        isCapitalEqual: function (a, b) {\n            a = BI.isNull(a) ? a : (\"\" + a).toLowerCase();\n            b = BI.isNull(b) ? b : (\"\" + b).toLowerCase();\n            return BI.isEqual(a, b);\n        },\n\n        isWidthOrHeight: function (w) {\n            if (typeof w === \"number\") {\n                return w >= 0;\n            } else if (typeof w === \"string\") {\n                return /^\\d{1,3}%$/.exec(w) || w == \"auto\" || /^\\d+px$/.exec(w);\n            }\n        },\n\n        isNotNull: function (obj) {\n            return !BI.isNull(obj);\n        },\n\n        isNull: function (obj) {\n            return typeof obj === \"undefined\" || obj === null;\n        },\n\n        isEmptyArray: function (arr) {\n            return BI.isArray(arr) && BI.isEmpty(arr);\n        },\n\n        isNotEmptyArray: function (arr) {\n            return BI.isArray(arr) && !BI.isEmpty(arr);\n        },\n\n        isEmptyObject: function (obj) {\n            return BI.isEqual(obj, {});\n        },\n\n        isNotEmptyObject: function (obj) {\n            return BI.isPlainObject(obj) && !BI.isEmptyObject(obj);\n        },\n\n        isEmptyString: function (obj) {\n            return BI.isString(obj) && obj.length === 0;\n        },\n\n        isNotEmptyString: function (obj) {\n            return BI.isString(obj) && !BI.isEmptyString(obj);\n        },\n\n        isWindow: function (obj) {\n            return obj != null && obj == obj.window;\n        }\n    });\n\n    // deep方法\n    _.extend(BI, {\n        deepClone: _.cloneDeep,\n        deepExtend: _.merge,\n\n        isDeepMatch: function (object, attrs) {\n            var keys = BI.keys(attrs), length = keys.length;\n            if (object == null) {\n                return !length;\n            }\n            var obj = Object(object);\n            for (var i = 0; i < length; i++) {\n                var key = keys[i];\n                if (!BI.isEqual(attrs[key], obj[key]) || !(key in obj)) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n        contains: function (obj, target, fromIndex) {\n            if (!_.isArrayLike(obj)) obj = _.values(obj);\n            return _.indexOf(obj, target, typeof fromIndex === \"number\" && fromIndex) >= 0;\n        },\n\n        deepContains: function (obj, copy) {\n            if (BI.isObject(copy)) {\n                return BI.any(obj, function (i, v) {\n                    if (BI.isEqual(v, copy)) {\n                        return true;\n                    }\n                });\n            }\n            return BI.contains(obj, copy);\n        },\n\n        deepIndexOf: function (obj, target) {\n            for (var i = 0; i < obj.length; i++) {\n                if (BI.isEqual(target, obj[i])) {\n                    return i;\n                }\n            }\n            return -1;\n        },\n\n        deepRemove: function (obj, target) {\n            var done = false;\n            var i;\n            if (BI.isArray(obj)) {\n                for (i = 0; i < obj.length; i++) {\n                    if (BI.isEqual(target, obj[i])) {\n                        obj.splice(i--, 1);\n                        done = true;\n                    }\n                }\n            } else {\n                BI.each(obj, function (i, v) {\n                    if (BI.isEqual(target, obj[i])) {\n                        delete obj[i];\n                        done = true;\n                    }\n                });\n            }\n            return done;\n        },\n\n        deepWithout: function (obj, target) {\n            if (BI.isArray(obj)) {\n                var result = [];\n                for (var i = 0; i < obj.length; i++) {\n                    if (!BI.isEqual(target, obj[i])) {\n                        result.push(obj[i]);\n                    }\n                }\n                return result;\n            }\n            var result = {};\n            BI.each(obj, function (i, v) {\n                if (!BI.isEqual(target, obj[i])) {\n                    result[i] = v;\n                }\n            });\n            return result;\n\n        },\n\n        deepUnique: function (array) {\n            var result = [];\n            BI.each(array, function (i, item) {\n                if (!BI.deepContains(result, item)) {\n                    result.push(item);\n                }\n            });\n            return result;\n        },\n\n        // 比较两个对象得出不一样的key值\n        deepDiff: function (object, other) {\n            object || (object = {});\n            other || (other = {});\n            var result = [];\n            var used = [];\n            for (var b in object) {\n                if (this.has(object, b)) {\n                    if (!this.isEqual(object[b], other[b])) {\n                        result.push(b);\n                    }\n                    used.push(b);\n                }\n            }\n            for (var b in other) {\n                if (this.has(other, b) && !BI.contains(used, b)) {\n                    result.push(b);\n                }\n            }\n            return result;\n        }\n    });\n\n    // 通用方法\n    _.each([\"uniqueId\", \"result\", \"chain\", \"iteratee\", \"escape\", \"unescape\", \"before\", \"after\"], function (name) {\n        BI[name] = function () {\n            return _[name].apply(_, arguments);\n        };\n    });\n\n    // 事件相关方法\n    _.each([\"bind\", \"once\", \"partial\", \"debounce\", \"throttle\", \"delay\", \"defer\", \"wrap\"], function (name) {\n        BI[name] = function () {\n            return _[name].apply(_, arguments);\n        };\n    });\n\n    _.extend(BI, {\n        nextTick: (function () {\n            var callbacks = [];\n            var pending = false;\n            var timerFunc = void 0;\n\n            function nextTickHandler() {\n                pending = false;\n                var copies = callbacks.slice(0);\n                callbacks.length = 0;\n                for (var i = 0; i < copies.length; i++) {\n                    copies[i]();\n                }\n            }\n\n            if (typeof Promise !== \"undefined\") {\n                var p = Promise.resolve();\n                timerFunc = function timerFunc() {\n                    p.then(nextTickHandler);\n                };\n            } else if (typeof MutationObserver !== \"undefined\") {\n                var counter = 1;\n                var observer = new MutationObserver(nextTickHandler);\n                var textNode = document.createTextNode(String(counter));\n                observer.observe(textNode, {\n                    characterData: true\n                });\n                timerFunc = function timerFunc() {\n                    counter = (counter + 1) % 2;\n                    textNode.data = String(counter);\n                };\n            } else if (typeof setImmediate !== \"undefined\") {\n                timerFunc = function timerFunc() {\n                    setImmediate(nextTickHandler);\n                };\n            } else {\n                // Fallback to setTimeout.\n                timerFunc = function timerFunc() {\n                    setTimeout(nextTickHandler, 0);\n                };\n            }\n\n            return function queueNextTick(cb) {\n                var _resolve = void 0;\n                var args = [].slice.call(arguments, 1);\n                callbacks.push(function () {\n                    if (cb) {\n                        try {\n                            cb.apply(null, args);\n                        } catch (e) {\n                            console.error(e);\n                        }\n                    } else if (_resolve) {\n                        _resolve.apply(null, args);\n                    }\n                });\n                if (!pending) {\n                    pending = true;\n                    timerFunc();\n                }\n                // $flow-disable-line\n                if (!cb && typeof Promise !== 'undefined') {\n                    return new Promise(function (resolve, reject) {\n                        _resolve = resolve;\n                    });\n                }\n            };\n        })()\n    });\n\n    // 数字相关方法\n    _.each([\"random\"], function (name) {\n        BI[name] = _apply(name);\n    });\n    _.extend(BI, {\n        getTime: function () {\n            if (_global.performance && _global.performance.now) {\n                return _global.performance.now();\n            }\n            if (_global.performance && _global.performance.webkitNow) {\n                return _global.performance.webkitNow();\n            }\n            if (Date.now) {\n                return Date.now();\n            }\n            return BI.getDate().getTime();\n\n\n        },\n\n        parseInt: function (number) {\n            var radix = 10;\n            if (/^0x/g.test(number)) {\n                radix = 16;\n            }\n            try {\n                return parseInt(number, radix);\n            } catch (e) {\n                throw new Error(number + \"parse int error\");\n                return NaN;\n            }\n        },\n\n        parseSafeInt: function (value) {\n            var MAX_SAFE_INTEGER = 9007199254740991;\n            return value\n                ? this.clamp(this.parseInt(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n                : (value === 0 ? value : 0);\n        },\n\n        parseFloat: function (number) {\n            try {\n                return parseFloat(number);\n            } catch (e) {\n                throw new Error(number + \"parse float error\");\n                return NaN;\n            }\n        },\n\n        isNaturalNumber: function (number) {\n            if (/^\\d+$/.test(number)) {\n                return true;\n            }\n            return false;\n        },\n\n        isPositiveInteger: function (number) {\n            if (/^\\+?[1-9][0-9]*$/.test(number)) {\n                return true;\n            }\n            return false;\n        },\n\n        isNegativeInteger: function (number) {\n            if (/^\\-[1-9][0-9]*$/.test(number)) {\n                return true;\n            }\n            return false;\n        },\n\n        isInteger: function (number) {\n            if (/^\\-?\\d+$/.test(number)) {\n                return true;\n            }\n            return false;\n        },\n\n        isNumeric: function (number) {\n            return !isNaN(parseFloat(number)) && isFinite(number);\n        },\n\n        isFloat: function (number) {\n            if (/^([+-]?)\\d*\\.\\d+$/.test(number)) {\n                return true;\n            }\n            return false;\n        },\n\n        isOdd: function (number) {\n            if (!BI.isInteger(number)) {\n                return false;\n            }\n            return (number & 1) === 1;\n        },\n\n        isEven: function (number) {\n            if (!BI.isInteger(number)) {\n                return false;\n            }\n            return (number & 1) === 0;\n        },\n\n        sum: function (array, iteratee, context) {\n            var sum = 0;\n            BI.each(array, function (i, item) {\n                if (iteratee) {\n                    sum += Number(iteratee.apply(context, [i, item]));\n                } else {\n                    sum += Number(item);\n                }\n            });\n            return sum;\n        },\n\n        average: function (array, iteratee, context) {\n            var sum = BI.sum(array, iteratee, context);\n            return sum / array.length;\n        }\n    });\n\n    // 字符串相关方法\n    _.extend(BI, {\n        trim: function () {\n            return _.trim.apply(_, arguments);\n        },\n\n        toUpperCase: function (string) {\n            return (string + \"\").toLocaleUpperCase();\n        },\n\n        toLowerCase: function (string) {\n            return (string + \"\").toLocaleLowerCase();\n        },\n\n        isEndWithBlank: function (string) {\n            return /(\\s|\\u00A0)$/.test(string);\n        },\n\n        isLiteral: function (exp) {\n            var literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n            return literalValueRE.test(exp);\n        },\n\n        stripQuotes: function (str) {\n            var a = str.charCodeAt(0);\n            var b = str.charCodeAt(str.length - 1);\n            return a === b && (a === 0x22 || a === 0x27)\n                ? str.slice(1, -1)\n                : str;\n        },\n\n        // background-color => backgroundColor\n        camelize: function (str) {\n            return str.replace(/-(.)/g, function (_, character) {\n                return character.toUpperCase();\n            });\n        },\n\n        // backgroundColor => background-color\n        hyphenate: function (str) {\n            return str.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n        },\n\n        isNotEmptyString: function (str) {\n            return BI.isString(str) && !BI.isEmpty(str);\n        },\n\n        isEmptyString: function (str) {\n            return BI.isString(str) && BI.isEmpty(str);\n        },\n\n        /**\n         * 通用加密方法\n         */\n        encrypt: function (type, text, key) {\n            switch (type) {\n                case BI.CRYPT_TYPE.AES:\n                default:\n                    return BI.aesEncrypt(text, key);\n            }\n        },\n\n        /**\n         * 通用解密方法\n         * @param type 解密方式\n         * @param text 文本\n         * @param key 种子\n         * @return {*}\n         */\n        decrypt: function (type, text, key) {\n            switch (type) {\n                case BI.CRYPT_TYPE.AES:\n                default:\n                    return BI.aesDecrypt(text, key);\n            }\n        },\n\n        /**\n         * 对字符串中的'和\\做编码处理\n         * @static\n         * @param {String} string 要做编码处理的字符串\n         * @return {String} 编码后的字符串\n         */\n        escape: function (string) {\n            return string.replace(/('|\\\\)/g, \"\\\\$1\");\n        },\n\n        /**\n         * 让字符串通过指定字符做补齐的函数\n         *\n         *      var s = BI.leftPad('123', 5, '0');//s的值为：'00123'\n         *\n         * @static\n         * @param {String} val 原始值\n         * @param {Number} size 总共需要的位数\n         * @param {String} ch 用于补齐的字符\n         * @return {String}  补齐后的字符串\n         */\n        leftPad: function (val, size, ch) {\n            var result = String(val);\n            if (!ch) {\n                ch = \" \";\n            }\n            while (result.length < size) {\n                result = ch + result;\n            }\n            return result.toString();\n        },\n\n        /**\n         * 对字符串做替换的函数\n         *\n         *      var cls = 'my-class', text = 'Some text';\n         *      var res = BI.format('<div class=\"{0}\">{1}</div>', cls, text);\n         *      //res的值为：'<div class=\"my-class\">Some text</div>';\n         *\n         * @static\n         * @param {String} format 要做替换的字符串，替换字符串1，替换字符串2...\n         * @return {String} 做了替换后的字符串\n         */\n        format: function (format) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            return format.replace(/\\{(\\d+)\\}/g, function (m, i) {\n                return args[i];\n            });\n        }\n    });\n\n    // 日期相关方法\n    _.extend(BI, {\n        /**\n         * 是否是闰年\n         * @param year\n         * @returns {boolean}\n         */\n        isLeapYear: function (year) {\n            return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n        },\n\n        /**\n         * 检测是否在有效期\n         *\n         * @param YY 年\n         * @param MM 月\n         * @param DD 日\n         * @param minDate '1900-01-01'\n         * @param maxDate '2099-12-31'\n         * @returns {Array} 若无效返回无效状态\n         */\n        checkDateVoid: function (YY, MM, DD, minDate, maxDate) {\n            var back = [];\n            YY = YY | 0;\n            MM = MM | 0;\n            DD = DD | 0;\n            minDate = BI.isString(minDate) ? minDate.match(/\\d+/g) : minDate;\n            maxDate = BI.isString(maxDate) ? maxDate.match(/\\d+/g) : maxDate;\n            if (YY < minDate[0]) {\n                back = [\"y\"];\n            } else if (YY > maxDate[0]) {\n                back = [\"y\", 1];\n            } else if (YY >= minDate[0] && YY <= maxDate[0]) {\n                if (YY == minDate[0]) {\n                    if (MM < minDate[1]) {\n                        back = [\"m\"];\n                    } else if (MM == minDate[1]) {\n                        if (DD < minDate[2]) {\n                            back = [\"d\"];\n                        }\n                    }\n                }\n                if (YY == maxDate[0]) {\n                    if (MM > maxDate[1]) {\n                        back = [\"m\", 1];\n                    } else if (MM == maxDate[1]) {\n                        if (DD > maxDate[2]) {\n                            back = [\"d\", 1];\n                        }\n                    }\n                }\n            }\n            return back;\n        },\n\n        checkDateLegal: function (str) {\n            var ar = str.match(/\\d+/g);\n            var YY = ar[0] | 0, MM = ar[1] | 0, DD = ar[2] | 0;\n            if (ar.length <= 1) {\n                return true;\n            }\n            if (ar.length <= 2) {\n                return MM >= 1 && MM <= 12;\n            }\n            var MD = BI.Date._MD.slice(0);\n            MD[1] = BI.isLeapYear(YY) ? 29 : 28;\n            return MM >= 1 && MM <= 12 && DD <= MD[MM - 1];\n        },\n\n        parseDateTime: function (str, fmt) {\n            var today = BI.getDate();\n            var y = 0;\n            var m = 0;\n            var d = 1;\n            // wei : 对于fmt为‘YYYYMM’或者‘YYYYMMdd’的格式，str的值为类似'201111'的形式，因为年月之间没有分隔符，所以正则表达式分割无效，导致bug7376。\n            var a = str.split(/\\W+/);\n            if (fmt.toLowerCase() == \"%y%x\" || fmt.toLowerCase() == \"%y%x%d\") {\n                var yearlength = 4;\n                var otherlength = 2;\n                a[0] = str.substring(0, yearlength);\n                a[1] = str.substring(yearlength, yearlength + otherlength);\n                a[2] = str.substring(yearlength + otherlength, yearlength + otherlength * 2);\n            }\n            var b = fmt.match(/%./g);\n            var i = 0, j = 0;\n            var hr = 0;\n            var min = 0;\n            var sec = 0;\n            for (i = 0; i < a.length; ++i) {\n                switch (b[i]) {\n                    case \"%d\":\n                    case \"%e\":\n                        d = parseInt(a[i], 10);\n                        break;\n\n                    case \"%X\":\n                        m = parseInt(a[i], 10) - 1;\n                        break;\n                    case \"%x\":\n                        m = parseInt(a[i], 10) - 1;\n                        break;\n\n                    case \"%Y\":\n                    case \"%y\":\n                        y = parseInt(a[i], 10);\n                        (y < 100) && (y += (y > 29) ? 1900 : 2000);\n                        break;\n\n                    case \"%b\":\n                    case \"%B\":\n                        for (j = 0; j < 12; ++j) {\n                            if (BI.Date._MN[j].substr(0, a[i].length).toLowerCase() == a[i].toLowerCase()) {\n                                m = j;\n                                break;\n                            }\n                        }\n                        break;\n\n                    case \"%H\":\n                    case \"%I\":\n                    case \"%k\":\n                    case \"%l\":\n                        hr = parseInt(a[i], 10);\n                        break;\n\n                    case \"%P\":\n                    case \"%p\":\n                        if (/pm/i.test(a[i]) && hr < 12) {\n                            hr += 12;\n                        } else if (/am/i.test(a[i]) && hr >= 12) {\n                            hr -= 12;\n                        }\n                        break;\n\n                    case \"%M\":\n                        min = parseInt(a[i], 10);\n                    case \"%S\":\n                        sec = parseInt(a[i], 10);\n                        break;\n                }\n            }\n            //    if (!a[i]) {\n            //        continue;\n            //\t}\n            if (isNaN(y)) {\n                y = today.getFullYear();\n            }\n            if (isNaN(m)) {\n                m = today.getMonth();\n            }\n            if (isNaN(d)) {\n                d = today.getDate();\n            }\n            if (isNaN(hr)) {\n                hr = today.getHours();\n            }\n            if (isNaN(min)) {\n                min = today.getMinutes();\n            }\n            if (isNaN(sec)) {\n                sec = today.getSeconds();\n            }\n            if (y != 0) {\n                return BI.getDate(y, m, d, hr, min, sec);\n            }\n            y = 0;\n            m = -1;\n            d = 0;\n            for (i = 0; i < a.length; ++i) {\n                if (a[i].search(/[a-zA-Z]+/) != -1) {\n                    var t = -1;\n                    for (j = 0; j < 12; ++j) {\n                        if (BI.Date._MN[j].substr(0, a[i].length).toLowerCase() == a[i].toLowerCase()) {\n                            t = j;\n                            break;\n                        }\n                    }\n                    if (t != -1) {\n                        if (m != -1) {\n                            d = m + 1;\n                        }\n                        m = t;\n                    }\n                } else if (parseInt(a[i], 10) <= 12 && m == -1) {\n                    m = a[i] - 1;\n                } else if (parseInt(a[i], 10) > 31 && y == 0) {\n                    y = parseInt(a[i], 10);\n                    (y < 100) && (y += (y > 29) ? 1900 : 2000);\n                } else if (d == 0) {\n                    d = a[i];\n                }\n            }\n            if (y == 0) {\n                y = today.getFullYear();\n            }\n            if (m != -1 && d != 0) {\n                return BI.getDate(y, m, d, hr, min, sec);\n            }\n            return today;\n        },\n\n        getDate: function () {\n            var length = arguments.length;\n            var args = arguments;\n            var dt;\n            switch (length) {\n                // new Date()\n                case 0:\n                    dt = new Date();\n                    break;\n                // new Date(long)\n                case 1:\n                    dt = new Date(args[0]);\n                    break;\n                // new Date(year, month)\n                case 2:\n                    dt = new Date(args[0], args[1]);\n                    break;\n                // new Date(year, month, day)\n                case 3:\n                    dt = new Date(args[0], args[1], args[2]);\n                    break;\n                // new Date(year, month, day, hour)\n                case 4:\n                    dt = new Date(args[0], args[1], args[2], args[3]);\n                    break;\n                // new Date(year, month, day, hour, minute)\n                case 5:\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4]);\n                    break;\n                // new Date(year, month, day, hour, minute, second)\n                case 6:\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4], args[5]);\n                    break;\n                // new Date(year, month, day, hour, minute, second, millisecond)\n                case 7:\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n                    break;\n                default:\n                    dt = new Date();\n                    break;\n            }\n            if (BI.isNotNull(BI.timeZone) && (arguments.length === 0 || (arguments.length === 1 && BI.isNumber(arguments[0])))) {\n                var localTime = dt.getTime();\n                // BI-33791 1901年以前的东8区标准是GMT+0805, 统一无论是什么时间，都以整的0800这样的为基准\n                var localOffset = dt.getTimezoneOffset() * 60000; // 获得当地时间偏移的毫秒数\n                var utc = localTime + localOffset; // utc即GMT时间标准时区\n                return new Date(utc + BI.timeZone);// + Pool.timeZone.offset);\n            }\n            return dt;\n\n        },\n\n        getTime: function () {\n            var length = arguments.length;\n            var args = arguments;\n            var dt;\n            switch (length) {\n                // new Date()\n                case 0:\n                    dt = new Date();\n                    break;\n                // new Date(long)\n                case 1:\n                    dt = new Date(args[0]);\n                    break;\n                // new Date(year, month)\n                case 2:\n                    dt = new Date(args[0], args[1]);\n                    break;\n                // new Date(year, month, day)\n                case 3:\n                    dt = new Date(args[0], args[1], args[2]);\n                    break;\n                // new Date(year, month, day, hour)\n                case 4:\n                    dt = new Date(args[0], args[1], args[2], args[3]);\n                    break;\n                // new Date(year, month, day, hour, minute)\n                case 5:\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4]);\n                    break;\n                // new Date(year, month, day, hour, minute, second)\n                case 6:\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4], args[5]);\n                    break;\n                // new Date(year, month, day, hour, minute, second, millisecond)\n                case 7:\n                    dt = new Date(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n                    break;\n                default:\n                    dt = new Date();\n                    break;\n            }\n            if (BI.isNotNull(BI.timeZone)) {\n                // BI-33791 1901年以前的东8区标准是GMT+0805, 统一无论是什么时间，都以整的0800这样的为基准\n                return dt.getTime() - BI.timeZone - new Date().getTimezoneOffset() * 60000;\n            }\n            return dt.getTime();\n\n        }\n    });\n})();\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","!(function () {\n    function extend () {\n        var target = arguments[0] || {}, length = arguments.length, i = 1, options, name, src, copy;\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) != null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n\n                    if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        return target;\n    }\n\n    /**\n     * 客户端观察者，主要处理事件的添加、删除、执行等\n     * @class BI.OB\n     * @abstract\n     */\n    BI.OB = function (config) {\n        this._constructor(config);\n    };\n    _.extend(BI.OB.prototype, {\n        props: {},\n        init: null,\n        destroyed: null,\n\n        _constructor: function (config) {\n            this._initProps(config);\n            this._init();\n            this._initRef();\n        },\n\n        _defaultConfig: function (config) {\n            return {};\n        },\n\n        _initProps: function (config) {\n            var props = this.props;\n            if (BI.isFunction(this.props)) {\n                props = this.props(config);\n            }\n            this.options = extend(this._defaultConfig(config), props, config);\n        },\n\n        _init: function () {\n            this._initListeners();\n            this.init && this.init();\n        },\n\n        _initListeners: function () {\n            var self = this;\n            if (this.options.listeners != null) {\n                _.each(this.options.listeners, function (lis) {\n                    (lis.target ? lis.target : self)[lis.once ? \"once\" : \"on\"]\n                    (lis.eventName, _.bind(lis.action, self));\n                });\n                delete this.options.listeners;\n            }\n        },\n\n        // 获得一个当前对象的引用\n        _initRef: function () {\n            if (this.options.ref) {\n                this.options.ref.call(this, this);\n            }\n        },\n\n        //释放当前对象\n        _purgeRef: function () {\n            if (this.options.ref) {\n                this.options.ref.call(null);\n                this.options.ref = null;\n            }\n        },\n\n        _getEvents: function () {\n            if (!_.isArray(this.events)) {\n                this.events = [];\n            }\n            return this.events;\n        },\n\n        /**\n         * 给观察者绑定一个事件\n         * @param {String} eventName 事件的名字\n         * @param {Function} fn 事件对应的执行函数\n         */\n        on: function (eventName, fn) {\n            eventName = eventName.toLowerCase();\n            var fns = this._getEvents()[eventName];\n            if (!_.isArray(fns)) {\n                fns = [];\n                this._getEvents()[eventName] = fns;\n            }\n            fns.push(fn);\n        },\n\n        /**\n         * 给观察者绑定一个只执行一次的事件\n         * @param {String} eventName 事件的名字\n         * @param {Function} fn 事件对应的执行函数\n         */\n        once: function (eventName, fn) {\n            var proxy = function () {\n                fn.apply(this, arguments);\n                this.un(eventName, proxy);\n            };\n            this.on(eventName, proxy);\n        },\n        /**\n         * 解除观察者绑定的指定事件\n         * @param {String} eventName 要解除绑定事件的名字\n         * @param {Function} fn 事件对应的执行函数，该参数是可选的，没有该参数时，将解除绑定所有同名字的事件\n         */\n        un: function (eventName, fn) {\n            eventName = eventName.toLowerCase();\n\n            /* alex:如果fn是null,就是把eventName上面所有方法都un掉*/\n            if (fn == null) {\n                delete this._getEvents()[eventName];\n            } else {\n                var fns = this._getEvents()[eventName];\n                if (_.isArray(fns)) {\n                    var newFns = [];\n                    _.each(fns, function (ifn) {\n                        if (ifn != fn) {\n                            newFns.push(ifn);\n                        }\n                    });\n                    this._getEvents()[eventName] = newFns;\n                }\n            }\n        },\n        /**\n         * 清除观察者的所有事件绑定\n         */\n        purgeListeners: function () {\n            /* alex:清空events*/\n            this.events = [];\n        },\n        /**\n         * 触发绑定过的事件\n         *\n         * @param {String} eventName 要触发的事件的名字\n         * @returns {Boolean} 如果事件函数返回false，则返回false并中断其他同名事件的执行，否则执行所有的同名事件并返回true\n         */\n        fireEvent: function () {\n            var eventName = arguments[0].toLowerCase();\n            var fns = this._getEvents()[eventName];\n            if (BI.isArray(fns)) {\n                if (BI.isArguments(arguments[1])) {\n                    for (var i = 0; i < fns.length; i++) {\n                        if (fns[i].apply(this, arguments[1]) === false) {\n                            return false;\n                        }\n                    }\n                } else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    for (var i = 0; i < fns.length; i++) {\n                        if (fns[i].apply(this, args) === false) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;\n        },\n\n        destroy: function () {\n            this.destroyed && this.destroyed();\n            this._purgeRef();\n            this.purgeListeners();\n        }\n    });\n})();","/**\n * Created by astronaut007 on 2018/8/8\n */\n// 牵扯到国际化这些常量在页面加载后再生效\n// full day names\nBI.Date = BI.Date || {};\nBI.Date._DN = [\"星期日\",\n    \"星期一\",\n    \"星期二\",\n    \"星期三\",\n    \"星期四\",\n    \"星期五\",\n    \"星期六\",\n    \"星期日\"];\n\n// short day names\nBI.Date._SDN = [\"日\",\n    \"一\",\n    \"二\",\n    \"三\",\n    \"四\",\n    \"五\",\n    \"六\",\n    \"日\"];\n\n// Monday first, etc.\nBI.Date._FD = 1;\n\n// full month namesdat\nBI.Date._MN = [\n    \"一月\",\n    \"二月\",\n    \"三月\",\n    \"四月\",\n    \"五月\",\n    \"六月\",\n    \"七月\",\n    \"八月\",\n    \"九月\",\n    \"十月\",\n    \"十一月\",\n    \"十二月\"];\n\n// short month names\nBI.Date._SMN = [0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11];\n\nBI.Date._QN = [\"\", \"第1季度\",\n    \"第2季度\",\n    \"第3季度\",\n    \"第4季度\"];\n\n/** Adds the number of days array to the Date object. */\nBI.Date._MD = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n// 实际上无论周几作为一周的第一天，周初周末都是在-6-0间做偏移，用一个数组就可以\nBI.Date._OFFSET = [0, -1, -2, -3, -4, -5, -6];\n","!(function () {\n    /*\n    CryptoJS v3.1.2\n    code.google.com/p/crypto-js\n    (c) 2009-2013 by Jeff Mott. All rights reserved.\n    code.google.com/p/crypto-js/wiki/License\n    */\n    /**\n     * CryptoJS core components.\n     */\n    BI.CRYPT_TYPE = BI.CRYPT_TYPE || {};\n    BI.CRYPT_TYPE.AES = \"aes\";\n\n    var CryptoJS = CryptoJS || (function (Math, undefined) {\n        /**\n         * CryptoJS namespace.\n         */\n        var C = {};\n\n        /**\n         * Library namespace.\n         */\n        var C_lib = C.lib = {};\n\n        /**\n         * Base object for prototypal inheritance.\n         */\n        var Base = C_lib.Base = (function () {\n            function F () {\n            }\n\n            return {\n                /**\n                 * Creates a new object that inherits from this object.\n                 *\n                 * @param {Object} overrides Properties to copy into the new object.\n                 *\n                 * @return {Object} The new object.\n                 *\n                 * @static\n                 *\n                 * @example\n                 *\n                 *     var MyType = CryptoJS.lib.Base.extend({\n                 *         field: 'value',\n                 *\n                 *         method: function () {\n                 *         }\n                 *     });\n                 */\n                extend: function (overrides) {\n                    // Spawn\n                    F.prototype = this;\n                    var subtype = new F();\n\n                    // Augment\n                    if (overrides) {\n                        subtype.mixIn(overrides);\n                    }\n\n                    // Create default initializer\n                    if (!subtype.hasOwnProperty('init')) {\n                        subtype.init = function () {\n                            subtype.$super.init.apply(this, arguments);\n                        };\n                    }\n\n                    // Initializer's prototype is the subtype object\n                    subtype.init.prototype = subtype;\n\n                    // Reference supertype\n                    subtype.$super = this;\n\n                    return subtype;\n                },\n\n                /**\n                 * Extends this object and runs the init method.\n                 * Arguments to create() will be passed to init().\n                 *\n                 * @return {Object} The new object.\n                 *\n                 * @static\n                 *\n                 * @example\n                 *\n                 *     var instance = MyType.create();\n                 */\n                create: function () {\n                    var instance = this.extend();\n                    instance.init.apply(instance, arguments);\n\n                    return instance;\n                },\n\n                /**\n                 * Initializes a newly created object.\n                 * Override this method to add some logic when your objects are created.\n                 *\n                 * @example\n                 *\n                 *     var MyType = CryptoJS.lib.Base.extend({\n                 *         init: function () {\n                 *             // ...\n                 *         }\n                 *     });\n                 */\n                init: function () {\n                },\n\n                /**\n                 * Copies properties into this object.\n                 *\n                 * @param {Object} properties The properties to mix in.\n                 *\n                 * @example\n                 *\n                 *     MyType.mixIn({\n                 *         field: 'value'\n                 *     });\n                 */\n                mixIn: function (properties) {\n                    for (var propertyName in properties) {\n                        if (properties.hasOwnProperty(propertyName)) {\n                            this[propertyName] = properties[propertyName];\n                        }\n                    }\n\n                    // IE won't copy toString using the loop above\n                    if (properties.hasOwnProperty('toString')) {\n                        this.toString = properties.toString;\n                    }\n                },\n\n                /**\n                 * Creates a copy of this object.\n                 *\n                 * @return {Object} The clone.\n                 *\n                 * @example\n                 *\n                 *     var clone = instance.clone();\n                 */\n                clone: function () {\n                    return this.init.prototype.extend(this);\n                }\n            };\n        }());\n\n        /**\n         * An array of 32-bit words.\n         *\n         * @property {Array} words The array of 32-bit words.\n         * @property {number} sigBytes The number of significant bytes in this word array.\n         */\n        var WordArray = C_lib.WordArray = Base.extend({\n            /**\n             * Initializes a newly created word array.\n             *\n             * @param {Array} words (Optional) An array of 32-bit words.\n             * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n             *\n             * @example\n             *\n             *     var wordArray = CryptoJS.lib.WordArray.create();\n             *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n             *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n             */\n            init: function (words, sigBytes) {\n                words = this.words = words || [];\n\n                if (sigBytes != undefined) {\n                    this.sigBytes = sigBytes;\n                } else {\n                    this.sigBytes = words.length * 4;\n                }\n            },\n\n            /**\n             * Converts this word array to a string.\n             *\n             * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n             *\n             * @return {string} The stringified word array.\n             *\n             * @example\n             *\n             *     var string = wordArray + '';\n             *     var string = wordArray.toString();\n             *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n             */\n            toString: function (encoder) {\n                return (encoder || Hex).stringify(this);\n            },\n\n            /**\n             * Concatenates a word array to this word array.\n             *\n             * @param {WordArray} wordArray The word array to append.\n             *\n             * @return {WordArray} This word array.\n             *\n             * @example\n             *\n             *     wordArray1.concat(wordArray2);\n             */\n            concat: function (wordArray) {\n                // Shortcuts\n                var thisWords = this.words;\n                var thatWords = wordArray.words;\n                var thisSigBytes = this.sigBytes;\n                var thatSigBytes = wordArray.sigBytes;\n\n                // Clamp excess bits\n                this.clamp();\n\n                // Concat\n                if (thisSigBytes % 4) {\n                    // Copy one byte at a time\n                    for (var i = 0; i < thatSigBytes; i++) {\n                        var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                        thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n                    }\n                } else if (thatWords.length > 0xffff) {\n                    // Copy one word at a time\n                    for (var i = 0; i < thatSigBytes; i += 4) {\n                        thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n                    }\n                } else {\n                    // Copy all words at once\n                    thisWords.push.apply(thisWords, thatWords);\n                }\n                this.sigBytes += thatSigBytes;\n\n                // Chainable\n                return this;\n            },\n\n            /**\n             * Removes insignificant bits.\n             *\n             * @example\n             *\n             *     wordArray.clamp();\n             */\n            clamp: function () {\n                // Shortcuts\n                var words = this.words;\n                var sigBytes = this.sigBytes;\n\n                // Clamp\n                words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n                words.length = Math.ceil(sigBytes / 4);\n            },\n\n            /**\n             * Creates a copy of this word array.\n             *\n             * @return {WordArray} The clone.\n             *\n             * @example\n             *\n             *     var clone = wordArray.clone();\n             */\n            clone: function () {\n                var clone = Base.clone.call(this);\n                clone.words = this.words.slice(0);\n\n                return clone;\n            },\n\n            /**\n             * Creates a word array filled with random bytes.\n             *\n             * @param {number} nBytes The number of random bytes to generate.\n             *\n             * @return {WordArray} The random word array.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var wordArray = CryptoJS.lib.WordArray.random(16);\n             */\n            random: function (nBytes) {\n                var words = [];\n                for (var i = 0; i < nBytes; i += 4) {\n                    words.push((Math.random() * 0x100000000) | 0);\n                }\n\n                return new WordArray.init(words, nBytes);\n            }\n        });\n\n        /**\n         * Encoder namespace.\n         */\n        var C_enc = C.enc = {};\n\n        /**\n         * Hex encoding strategy.\n         */\n        var Hex = C_enc.Hex = {\n            /**\n             * Converts a word array to a hex string.\n             *\n             * @param {WordArray} wordArray The word array.\n             *\n             * @return {string} The hex string.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n             */\n            stringify: function (wordArray) {\n                // Shortcuts\n                var words = wordArray.words;\n                var sigBytes = wordArray.sigBytes;\n\n                // Convert\n                var hexChars = [];\n                for (var i = 0; i < sigBytes; i++) {\n                    var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                    hexChars.push((bite >>> 4).toString(16));\n                    hexChars.push((bite & 0x0f).toString(16));\n                }\n\n                return hexChars.join('');\n            },\n\n            /**\n             * Converts a hex string to a word array.\n             *\n             * @param {string} hexStr The hex string.\n             *\n             * @return {WordArray} The word array.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n             */\n            parse: function (hexStr) {\n                // Shortcut\n                var hexStrLength = hexStr.length;\n\n                // Convert\n                var words = [];\n                for (var i = 0; i < hexStrLength; i += 2) {\n                    words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n                }\n\n                return new WordArray.init(words, hexStrLength / 2);\n            }\n        };\n\n        /**\n         * Latin1 encoding strategy.\n         */\n        var Latin1 = C_enc.Latin1 = {\n            /**\n             * Converts a word array to a Latin1 string.\n             *\n             * @param {WordArray} wordArray The word array.\n             *\n             * @return {string} The Latin1 string.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n             */\n            stringify: function (wordArray) {\n                // Shortcuts\n                var words = wordArray.words;\n                var sigBytes = wordArray.sigBytes;\n\n                // Convert\n                var latin1Chars = [];\n                for (var i = 0; i < sigBytes; i++) {\n                    var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                    latin1Chars.push(String.fromCharCode(bite));\n                }\n\n                return latin1Chars.join('');\n            },\n\n            /**\n             * Converts a Latin1 string to a word array.\n             *\n             * @param {string} latin1Str The Latin1 string.\n             *\n             * @return {WordArray} The word array.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n             */\n            parse: function (latin1Str) {\n                // Shortcut\n                var latin1StrLength = latin1Str.length;\n\n                // Convert\n                var words = [];\n                for (var i = 0; i < latin1StrLength; i++) {\n                    words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n                }\n\n                return new WordArray.init(words, latin1StrLength);\n            }\n        };\n\n        /**\n         * UTF-8 encoding strategy.\n         */\n        var Utf8 = C_enc.Utf8 = {\n            /**\n             * Converts a word array to a UTF-8 string.\n             *\n             * @param {WordArray} wordArray The word array.\n             *\n             * @return {string} The UTF-8 string.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n             */\n            stringify: function (wordArray) {\n                try {\n                    return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n                } catch (e) {\n                    throw new Error('Malformed UTF-8 data');\n                }\n            },\n\n            /**\n             * Converts a UTF-8 string to a word array.\n             *\n             * @param {string} utf8Str The UTF-8 string.\n             *\n             * @return {WordArray} The word array.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n             */\n            parse: function (utf8Str) {\n                return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n            }\n        };\n\n        /**\n         * Abstract buffered block algorithm template.\n         *\n         * The property blockSize must be implemented in a concrete subtype.\n         *\n         * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n         */\n        var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n            /**\n             * Resets this block algorithm's data buffer to its initial state.\n             *\n             * @example\n             *\n             *     bufferedBlockAlgorithm.reset();\n             */\n            reset: function () {\n                // Initial values\n                this._data = new WordArray.init();\n                this._nDataBytes = 0;\n            },\n\n            /**\n             * Adds new data to this block algorithm's buffer.\n             *\n             * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n             *\n             * @example\n             *\n             *     bufferedBlockAlgorithm._append('data');\n             *     bufferedBlockAlgorithm._append(wordArray);\n             */\n            _append: function (data) {\n                // Convert string to WordArray, else assume WordArray already\n                if (typeof data == 'string') {\n                    data = Utf8.parse(data);\n                }\n\n                // Append\n                this._data.concat(data);\n                this._nDataBytes += data.sigBytes;\n            },\n\n            /**\n             * Processes available data blocks.\n             *\n             * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n             *\n             * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n             *\n             * @return {WordArray} The processed data.\n             *\n             * @example\n             *\n             *     var processedData = bufferedBlockAlgorithm._process();\n             *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n             */\n            _process: function (doFlush) {\n                // Shortcuts\n                var data = this._data;\n                var dataWords = data.words;\n                var dataSigBytes = data.sigBytes;\n                var blockSize = this.blockSize;\n                var blockSizeBytes = blockSize * 4;\n\n                // Count blocks ready\n                var nBlocksReady = dataSigBytes / blockSizeBytes;\n                if (doFlush) {\n                    // Round up to include partial blocks\n                    nBlocksReady = Math.ceil(nBlocksReady);\n                } else {\n                    // Round down to include only full blocks,\n                    // less the number of blocks that must remain in the buffer\n                    nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n                }\n\n                // Count words ready\n                var nWordsReady = nBlocksReady * blockSize;\n\n                // Count bytes ready\n                var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n                // Process blocks\n                if (nWordsReady) {\n                    for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n                        // Perform concrete-algorithm logic\n                        this._doProcessBlock(dataWords, offset);\n                    }\n\n                    // Remove processed words\n                    var processedWords = dataWords.splice(0, nWordsReady);\n                    data.sigBytes -= nBytesReady;\n                }\n\n                // Return processed words\n                return new WordArray.init(processedWords, nBytesReady);\n            },\n\n            /**\n             * Creates a copy of this object.\n             *\n             * @return {Object} The clone.\n             *\n             * @example\n             *\n             *     var clone = bufferedBlockAlgorithm.clone();\n             */\n            clone: function () {\n                var clone = Base.clone.call(this);\n                clone._data = this._data.clone();\n\n                return clone;\n            },\n\n            _minBufferSize: 0\n        });\n\n        /**\n         * Abstract hasher template.\n         *\n         * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n         */\n        var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n            /**\n             * Configuration options.\n             */\n            cfg: Base.extend(),\n\n            /**\n             * Initializes a newly created hasher.\n             *\n             * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n             *\n             * @example\n             *\n             *     var hasher = CryptoJS.algo.SHA256.create();\n             */\n            init: function (cfg) {\n                // Apply config defaults\n                this.cfg = this.cfg.extend(cfg);\n\n                // Set initial values\n                this.reset();\n            },\n\n            /**\n             * Resets this hasher to its initial state.\n             *\n             * @example\n             *\n             *     hasher.reset();\n             */\n            reset: function () {\n                // Reset data buffer\n                BufferedBlockAlgorithm.reset.call(this);\n\n                // Perform concrete-hasher logic\n                this._doReset();\n            },\n\n            /**\n             * Updates this hasher with a message.\n             *\n             * @param {WordArray|string} messageUpdate The message to append.\n             *\n             * @return {Hasher} This hasher.\n             *\n             * @example\n             *\n             *     hasher.update('message');\n             *     hasher.update(wordArray);\n             */\n            update: function (messageUpdate) {\n                // Append\n                this._append(messageUpdate);\n\n                // Update the hash\n                this._process();\n\n                // Chainable\n                return this;\n            },\n\n            /**\n             * Finalizes the hash computation.\n             * Note that the finalize operation is effectively a destructive, read-once operation.\n             *\n             * @param {WordArray|string} messageUpdate (Optional) A final message update.\n             *\n             * @return {WordArray} The hash.\n             *\n             * @example\n             *\n             *     var hash = hasher.finalize();\n             *     var hash = hasher.finalize('message');\n             *     var hash = hasher.finalize(wordArray);\n             */\n            finalize: function (messageUpdate) {\n                // Final message update\n                if (messageUpdate) {\n                    this._append(messageUpdate);\n                }\n\n                // Perform concrete-hasher logic\n                var hash = this._doFinalize();\n\n                return hash;\n            },\n\n            blockSize: 512 / 32,\n\n            /**\n             * Creates a shortcut function to a hasher's object interface.\n             *\n             * @param {Hasher} hasher The hasher to create a helper for.\n             *\n             * @return {Function} The shortcut function.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n             */\n            _createHelper: function (hasher) {\n                return function (message, cfg) {\n                    return new hasher.init(cfg).finalize(message);\n                };\n            },\n\n            /**\n             * Creates a shortcut function to the HMAC's object interface.\n             *\n             * @param {Hasher} hasher The hasher to use in this HMAC helper.\n             *\n             * @return {Function} The shortcut function.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n             */\n            _createHmacHelper: function (hasher) {\n                return function (message, key) {\n                    return new C_algo.HMAC.init(hasher, key).finalize(message);\n                };\n            }\n        });\n\n        /**\n         * Algorithm namespace.\n         */\n        var C_algo = C.algo = {};\n\n        return C;\n    }(Math));\n\n    /*\n    CryptoJS v3.1.2\n    code.google.com/p/crypto-js\n    (c) 2009-2013 by Jeff Mott. All rights reserved.\n    code.google.com/p/crypto-js/wiki/License\n    */\n    (function () {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var WordArray = C_lib.WordArray;\n        var C_enc = C.enc;\n\n        /**\n         * Base64 encoding strategy.\n         */\n        var Base64 = C_enc.Base64 = {\n            /**\n             * Converts a word array to a Base64 string.\n             *\n             * @param {WordArray} wordArray The word array.\n             *\n             * @return {string} The Base64 string.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n             */\n            stringify: function (wordArray) {\n                // Shortcuts\n                var words = wordArray.words;\n                var sigBytes = wordArray.sigBytes;\n                var map = this._map;\n\n                // Clamp excess bits\n                wordArray.clamp();\n\n                // Convert\n                var base64Chars = [];\n                for (var i = 0; i < sigBytes; i += 3) {\n                    var byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                    var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n                    var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n                    var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n                    for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n                        base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n                    }\n                }\n\n                // Add padding\n                var paddingChar = map.charAt(64);\n                if (paddingChar) {\n                    while (base64Chars.length % 4) {\n                        base64Chars.push(paddingChar);\n                    }\n                }\n\n                return base64Chars.join('');\n            },\n\n            /**\n             * Converts a Base64 string to a word array.\n             *\n             * @param {string} base64Str The Base64 string.\n             *\n             * @return {WordArray} The word array.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n             */\n            parse: function (base64Str) {\n                // Shortcuts\n                var base64StrLength = base64Str.length;\n                var map = this._map;\n\n                // Ignore padding\n                var paddingChar = map.charAt(64);\n                if (paddingChar) {\n                    var paddingIndex = base64Str.indexOf(paddingChar);\n                    if (paddingIndex != -1) {\n                        base64StrLength = paddingIndex;\n                    }\n                }\n\n                // Convert\n                var words = [];\n                var nBytes = 0;\n                for (var i = 0; i < base64StrLength; i++) {\n                    if (i % 4) {\n                        var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);\n                        var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);\n                        words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n                        nBytes++;\n                    }\n                }\n\n                return WordArray.create(words, nBytes);\n            },\n\n            _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n        };\n    }());\n\n    /*\n    CryptoJS v3.1.2\n    code.google.com/p/crypto-js\n    (c) 2009-2013 by Jeff Mott. All rights reserved.\n    code.google.com/p/crypto-js/wiki/License\n    */\n    (function (Math) {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var WordArray = C_lib.WordArray;\n        var Hasher = C_lib.Hasher;\n        var C_algo = C.algo;\n\n        // Constants table\n        var T = [];\n\n        // Compute constants\n        (function () {\n            for (var i = 0; i < 64; i++) {\n                T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n            }\n        }());\n\n        /**\n         * MD5 hash algorithm.\n         */\n        var MD5 = C_algo.MD5 = Hasher.extend({\n            _doReset: function () {\n                this._hash = new WordArray.init([\n                    0x67452301, 0xefcdab89,\n                    0x98badcfe, 0x10325476\n                ]);\n            },\n\n            _doProcessBlock: function (M, offset) {\n                // Swap endian\n                for (var i = 0; i < 16; i++) {\n                    // Shortcuts\n                    var offset_i = offset + i;\n                    var M_offset_i = M[offset_i];\n\n                    M[offset_i] = (\n                        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) |\n                        (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n                    );\n                }\n\n                // Shortcuts\n                var H = this._hash.words;\n\n                var M_offset_0 = M[offset + 0];\n                var M_offset_1 = M[offset + 1];\n                var M_offset_2 = M[offset + 2];\n                var M_offset_3 = M[offset + 3];\n                var M_offset_4 = M[offset + 4];\n                var M_offset_5 = M[offset + 5];\n                var M_offset_6 = M[offset + 6];\n                var M_offset_7 = M[offset + 7];\n                var M_offset_8 = M[offset + 8];\n                var M_offset_9 = M[offset + 9];\n                var M_offset_10 = M[offset + 10];\n                var M_offset_11 = M[offset + 11];\n                var M_offset_12 = M[offset + 12];\n                var M_offset_13 = M[offset + 13];\n                var M_offset_14 = M[offset + 14];\n                var M_offset_15 = M[offset + 15];\n\n                // Working varialbes\n                var a = H[0];\n                var b = H[1];\n                var c = H[2];\n                var d = H[3];\n\n                // Computation\n                a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n                d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n                c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n                b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n                a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n                d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n                c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n                b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n                a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n                d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n                c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n                b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n                a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n                d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n                c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n                b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n                a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n                d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n                c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n                b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n                a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n                d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n                c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n                b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n                a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n                d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n                c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n                b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n                a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n                d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n                c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n                b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n                a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n                d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n                c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n                b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n                a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n                d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n                c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n                b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n                a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n                d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n                c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n                b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n                a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n                d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n                c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n                b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n                a = II(a, b, c, d, M_offset_0, 6, T[48]);\n                d = II(d, a, b, c, M_offset_7, 10, T[49]);\n                c = II(c, d, a, b, M_offset_14, 15, T[50]);\n                b = II(b, c, d, a, M_offset_5, 21, T[51]);\n                a = II(a, b, c, d, M_offset_12, 6, T[52]);\n                d = II(d, a, b, c, M_offset_3, 10, T[53]);\n                c = II(c, d, a, b, M_offset_10, 15, T[54]);\n                b = II(b, c, d, a, M_offset_1, 21, T[55]);\n                a = II(a, b, c, d, M_offset_8, 6, T[56]);\n                d = II(d, a, b, c, M_offset_15, 10, T[57]);\n                c = II(c, d, a, b, M_offset_6, 15, T[58]);\n                b = II(b, c, d, a, M_offset_13, 21, T[59]);\n                a = II(a, b, c, d, M_offset_4, 6, T[60]);\n                d = II(d, a, b, c, M_offset_11, 10, T[61]);\n                c = II(c, d, a, b, M_offset_2, 15, T[62]);\n                b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n                // Intermediate hash value\n                H[0] = (H[0] + a) | 0;\n                H[1] = (H[1] + b) | 0;\n                H[2] = (H[2] + c) | 0;\n                H[3] = (H[3] + d) | 0;\n            },\n\n            _doFinalize: function () {\n                // Shortcuts\n                var data = this._data;\n                var dataWords = data.words;\n\n                var nBitsTotal = this._nDataBytes * 8;\n                var nBitsLeft = data.sigBytes * 8;\n\n                // Add padding\n                dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n                var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n                var nBitsTotalL = nBitsTotal;\n                dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n                    (((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n                    (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00)\n                );\n                dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n                    (((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n                    (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00)\n                );\n\n                data.sigBytes = (dataWords.length + 1) * 4;\n\n                // Hash final blocks\n                this._process();\n\n                // Shortcuts\n                var hash = this._hash;\n                var H = hash.words;\n\n                // Swap endian\n                for (var i = 0; i < 4; i++) {\n                    // Shortcut\n                    var H_i = H[i];\n\n                    H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) |\n                        (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n                }\n\n                // Return final computed hash\n                return hash;\n            },\n\n            clone: function () {\n                var clone = Hasher.clone.call(this);\n                clone._hash = this._hash.clone();\n\n                return clone;\n            }\n        });\n\n        function FF (a, b, c, d, x, s, t) {\n            var n = a + ((b & c) | (~b & d)) + x + t;\n            return ((n << s) | (n >>> (32 - s))) + b;\n        }\n\n        function GG (a, b, c, d, x, s, t) {\n            var n = a + ((b & d) | (c & ~d)) + x + t;\n            return ((n << s) | (n >>> (32 - s))) + b;\n        }\n\n        function HH (a, b, c, d, x, s, t) {\n            var n = a + (b ^ c ^ d) + x + t;\n            return ((n << s) | (n >>> (32 - s))) + b;\n        }\n\n        function II (a, b, c, d, x, s, t) {\n            var n = a + (c ^ (b | ~d)) + x + t;\n            return ((n << s) | (n >>> (32 - s))) + b;\n        }\n\n        /**\n         * Shortcut function to the hasher's object interface.\n         *\n         * @param {WordArray|string} message The message to hash.\n         *\n         * @return {WordArray} The hash.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var hash = CryptoJS.MD5('message');\n         *     var hash = CryptoJS.MD5(wordArray);\n         */\n        C.MD5 = Hasher._createHelper(MD5);\n\n        /**\n         * Shortcut function to the HMAC's object interface.\n         *\n         * @param {WordArray|string} message The message to hash.\n         * @param {WordArray|string} key The secret key.\n         *\n         * @return {WordArray} The HMAC.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var hmac = CryptoJS.HmacMD5(message, key);\n         */\n        C.HmacMD5 = Hasher._createHmacHelper(MD5);\n    }(Math));\n\n    /*\n    CryptoJS v3.1.2\n    code.google.com/p/crypto-js\n    (c) 2009-2013 by Jeff Mott. All rights reserved.\n    code.google.com/p/crypto-js/wiki/License\n    */\n    (function () {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var Base = C_lib.Base;\n        var WordArray = C_lib.WordArray;\n        var C_algo = C.algo;\n        var MD5 = C_algo.MD5;\n\n        /**\n         * This key derivation function is meant to conform with EVP_BytesToKey.\n         * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n         */\n        var EvpKDF = C_algo.EvpKDF = Base.extend({\n            /**\n             * Configuration options.\n             *\n             * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n             * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n             * @property {number} iterations The number of iterations to perform. Default: 1\n             */\n            cfg: Base.extend({\n                keySize: 128 / 32,\n                hasher: MD5,\n                iterations: 1\n            }),\n\n            /**\n             * Initializes a newly created key derivation function.\n             *\n             * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n             *\n             * @example\n             *\n             *     var kdf = CryptoJS.algo.EvpKDF.create();\n             *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n             *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n             */\n            init: function (cfg) {\n                this.cfg = this.cfg.extend(cfg);\n            },\n\n            /**\n             * Derives a key from a password.\n             *\n             * @param {WordArray|string} password The password.\n             * @param {WordArray|string} salt A salt.\n             *\n             * @return {WordArray} The derived key.\n             *\n             * @example\n             *\n             *     var key = kdf.compute(password, salt);\n             */\n            compute: function (password, salt) {\n                // Shortcut\n                var cfg = this.cfg;\n\n                // Init hasher\n                var hasher = cfg.hasher.create();\n\n                // Initial values\n                var derivedKey = WordArray.create();\n\n                // Shortcuts\n                var derivedKeyWords = derivedKey.words;\n                var keySize = cfg.keySize;\n                var iterations = cfg.iterations;\n\n                // Generate key\n                while (derivedKeyWords.length < keySize) {\n                    if (block) {\n                        hasher.update(block);\n                    }\n                    var block = hasher.update(password).finalize(salt);\n                    hasher.reset();\n\n                    // Iterations\n                    for (var i = 1; i < iterations; i++) {\n                        block = hasher.finalize(block);\n                        hasher.reset();\n                    }\n\n                    derivedKey.concat(block);\n                }\n                derivedKey.sigBytes = keySize * 4;\n\n                return derivedKey;\n            }\n        });\n\n        /**\n         * Derives a key from a password.\n         *\n         * @param {WordArray|string} password The password.\n         * @param {WordArray|string} salt A salt.\n         * @param {Object} cfg (Optional) The configuration options to use for this computation.\n         *\n         * @return {WordArray} The derived key.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var key = CryptoJS.EvpKDF(password, salt);\n         *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n         *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n         */\n        C.EvpKDF = function (password, salt, cfg) {\n            return EvpKDF.create(cfg).compute(password, salt);\n        };\n    }());\n\n\n    /*\n    CryptoJS v3.1.2\n    code.google.com/p/crypto-js\n    (c) 2009-2013 by Jeff Mott. All rights reserved.\n    code.google.com/p/crypto-js/wiki/License\n    */\n    /**\n     * Cipher core components.\n     */\n    CryptoJS.lib.Cipher || (function (undefined) {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var Base = C_lib.Base;\n        var WordArray = C_lib.WordArray;\n        var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n        var C_enc = C.enc;\n        var Utf8 = C_enc.Utf8;\n        var Base64 = C_enc.Base64;\n        var C_algo = C.algo;\n        var EvpKDF = C_algo.EvpKDF;\n\n        /**\n         * Abstract base cipher template.\n         *\n         * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n         * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n         * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n         * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n         */\n        var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n            /**\n             * Configuration options.\n             *\n             * @property {WordArray} iv The IV to use for this operation.\n             */\n            cfg: Base.extend(),\n\n            /**\n             * Creates this cipher in encryption mode.\n             *\n             * @param {WordArray} key The key.\n             * @param {Object} cfg (Optional) The configuration options to use for this operation.\n             *\n             * @return {Cipher} A cipher instance.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n             */\n            createEncryptor: function (key, cfg) {\n                return this.create(this._ENC_XFORM_MODE, key, cfg);\n            },\n\n            /**\n             * Creates this cipher in decryption mode.\n             *\n             * @param {WordArray} key The key.\n             * @param {Object} cfg (Optional) The configuration options to use for this operation.\n             *\n             * @return {Cipher} A cipher instance.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n             */\n            createDecryptor: function (key, cfg) {\n                return this.create(this._DEC_XFORM_MODE, key, cfg);\n            },\n\n            /**\n             * Initializes a newly created cipher.\n             *\n             * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n             * @param {WordArray} key The key.\n             * @param {Object} cfg (Optional) The configuration options to use for this operation.\n             *\n             * @example\n             *\n             *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n             */\n            init: function (xformMode, key, cfg) {\n                // Apply config defaults\n                this.cfg = this.cfg.extend(cfg);\n\n                // Store transform mode and key\n                this._xformMode = xformMode;\n                this._key = key;\n\n                // Set initial values\n                this.reset();\n            },\n\n            /**\n             * Resets this cipher to its initial state.\n             *\n             * @example\n             *\n             *     cipher.reset();\n             */\n            reset: function () {\n                // Reset data buffer\n                BufferedBlockAlgorithm.reset.call(this);\n\n                // Perform concrete-cipher logic\n                this._doReset();\n            },\n\n            /**\n             * Adds data to be encrypted or decrypted.\n             *\n             * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n             *\n             * @return {WordArray} The data after processing.\n             *\n             * @example\n             *\n             *     var encrypted = cipher.process('data');\n             *     var encrypted = cipher.process(wordArray);\n             */\n            process: function (dataUpdate) {\n                // Append\n                this._append(dataUpdate);\n\n                // Process available blocks\n                return this._process();\n            },\n\n            /**\n             * Finalizes the encryption or decryption process.\n             * Note that the finalize operation is effectively a destructive, read-once operation.\n             *\n             * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n             *\n             * @return {WordArray} The data after final processing.\n             *\n             * @example\n             *\n             *     var encrypted = cipher.finalize();\n             *     var encrypted = cipher.finalize('data');\n             *     var encrypted = cipher.finalize(wordArray);\n             */\n            finalize: function (dataUpdate) {\n                // Final data update\n                if (dataUpdate) {\n                    this._append(dataUpdate);\n                }\n\n                // Perform concrete-cipher logic\n                var finalProcessedData = this._doFinalize();\n\n                return finalProcessedData;\n            },\n\n            keySize: 128 / 32,\n\n            ivSize: 128 / 32,\n\n            _ENC_XFORM_MODE: 1,\n\n            _DEC_XFORM_MODE: 2,\n\n            /**\n             * Creates shortcut functions to a cipher's object interface.\n             *\n             * @param {Cipher} cipher The cipher to create a helper for.\n             *\n             * @return {Object} An object with encrypt and decrypt shortcut functions.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n             */\n            _createHelper: (function () {\n                function selectCipherStrategy (key) {\n                    if (typeof key == 'string') {\n                        return PasswordBasedCipher;\n                    } else {\n                        return SerializableCipher;\n                    }\n                }\n\n                return function (cipher) {\n                    return {\n                        encrypt: function (message, key, cfg) {\n                            return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n                        },\n\n                        decrypt: function (ciphertext, key, cfg) {\n                            return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n                        }\n                    };\n                };\n            }())\n        });\n\n        /**\n         * Abstract base stream cipher template.\n         *\n         * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n         */\n        var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n            _doFinalize: function () {\n                // Process partial blocks\n                var finalProcessedBlocks = this._process(!!'flush');\n\n                return finalProcessedBlocks;\n            },\n\n            blockSize: 1\n        });\n\n        /**\n         * Mode namespace.\n         */\n        var C_mode = C.mode = {};\n\n        /**\n         * Abstract base block cipher mode template.\n         */\n        var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n            /**\n             * Creates this mode for encryption.\n             *\n             * @param {Cipher} cipher A block cipher instance.\n             * @param {Array} iv The IV words.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n             */\n            createEncryptor: function (cipher, iv) {\n                return this.Encryptor.create(cipher, iv);\n            },\n\n            /**\n             * Creates this mode for decryption.\n             *\n             * @param {Cipher} cipher A block cipher instance.\n             * @param {Array} iv The IV words.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n             */\n            createDecryptor: function (cipher, iv) {\n                return this.Decryptor.create(cipher, iv);\n            },\n\n            /**\n             * Initializes a newly created mode.\n             *\n             * @param {Cipher} cipher A block cipher instance.\n             * @param {Array} iv The IV words.\n             *\n             * @example\n             *\n             *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n             */\n            init: function (cipher, iv) {\n                this._cipher = cipher;\n                this._iv = iv;\n            }\n        });\n\n        /**\n         * Cipher Block Chaining mode.\n         */\n        var CBC = C_mode.CBC = (function () {\n            /**\n             * Abstract base CBC mode.\n             */\n            var CBC = BlockCipherMode.extend();\n\n            /**\n             * CBC encryptor.\n             */\n            CBC.Encryptor = CBC.extend({\n                /**\n                 * Processes the data block at offset.\n                 *\n                 * @param {Array} words The data words to operate on.\n                 * @param {number} offset The offset where the block starts.\n                 *\n                 * @example\n                 *\n                 *     mode.processBlock(data.words, offset);\n                 */\n                processBlock: function (words, offset) {\n                    // Shortcuts\n                    var cipher = this._cipher;\n                    var blockSize = cipher.blockSize;\n\n                    // XOR and encrypt\n                    xorBlock.call(this, words, offset, blockSize);\n                    cipher.encryptBlock(words, offset);\n\n                    // Remember this block to use with next block\n                    this._prevBlock = words.slice(offset, offset + blockSize);\n                }\n            });\n\n            /**\n             * CBC decryptor.\n             */\n            CBC.Decryptor = CBC.extend({\n                /**\n                 * Processes the data block at offset.\n                 *\n                 * @param {Array} words The data words to operate on.\n                 * @param {number} offset The offset where the block starts.\n                 *\n                 * @example\n                 *\n                 *     mode.processBlock(data.words, offset);\n                 */\n                processBlock: function (words, offset) {\n                    // Shortcuts\n                    var cipher = this._cipher;\n                    var blockSize = cipher.blockSize;\n\n                    // Remember this block to use with next block\n                    var thisBlock = words.slice(offset, offset + blockSize);\n\n                    // Decrypt and XOR\n                    cipher.decryptBlock(words, offset);\n                    xorBlock.call(this, words, offset, blockSize);\n\n                    // This block becomes the previous block\n                    this._prevBlock = thisBlock;\n                }\n            });\n\n            function xorBlock (words, offset, blockSize) {\n                // Shortcut\n                var iv = this._iv;\n\n                // Choose mixing block\n                if (iv) {\n                    var block = iv;\n\n                    // Remove IV for subsequent blocks\n                    this._iv = undefined;\n                } else {\n                    var block = this._prevBlock;\n                }\n\n                // XOR blocks\n                for (var i = 0; i < blockSize; i++) {\n                    words[offset + i] ^= block[i];\n                }\n            }\n\n            return CBC;\n        }());\n\n        /**\n         * Padding namespace.\n         */\n        var C_pad = C.pad = {};\n\n        /**\n         * PKCS #5/7 padding strategy.\n         */\n        var Pkcs7 = C_pad.Pkcs7 = {\n            /**\n             * Pads data using the algorithm defined in PKCS #5/7.\n             *\n             * @param {WordArray} data The data to pad.\n             * @param {number} blockSize The multiple that the data should be padded to.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n             */\n            pad: function (data, blockSize) {\n                // Shortcut\n                var blockSizeBytes = blockSize * 4;\n\n                // Count padding bytes\n                var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n                // Create padding word\n                var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n                // Create padding\n                var paddingWords = [];\n                for (var i = 0; i < nPaddingBytes; i += 4) {\n                    paddingWords.push(paddingWord);\n                }\n                var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n                // Add padding\n                data.concat(padding);\n            },\n\n            /**\n             * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n             *\n             * @param {WordArray} data The data to unpad.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n             */\n            unpad: function (data) {\n                // Get number of padding bytes from last byte\n                var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n                // Remove padding\n                data.sigBytes -= nPaddingBytes;\n            }\n        };\n\n        /**\n         * Abstract base block cipher template.\n         *\n         * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n         */\n        var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n            /**\n             * Configuration options.\n             *\n             * @property {Mode} mode The block mode to use. Default: CBC\n             * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n             */\n            cfg: Cipher.cfg.extend({\n                mode: CBC,\n                padding: Pkcs7\n            }),\n\n            reset: function () {\n                // Reset cipher\n                Cipher.reset.call(this);\n\n                // Shortcuts\n                var cfg = this.cfg;\n                var iv = cfg.iv;\n                var mode = cfg.mode;\n\n                // Reset block mode\n                if (this._xformMode == this._ENC_XFORM_MODE) {\n                    var modeCreator = mode.createEncryptor;\n                } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n                    var modeCreator = mode.createDecryptor;\n\n                    // Keep at least one block in the buffer for unpadding\n                    this._minBufferSize = 1;\n                }\n                this._mode = modeCreator.call(mode, this, iv && iv.words);\n            },\n\n            _doProcessBlock: function (words, offset) {\n                this._mode.processBlock(words, offset);\n            },\n\n            _doFinalize: function () {\n                // Shortcut\n                var padding = this.cfg.padding;\n\n                // Finalize\n                if (this._xformMode == this._ENC_XFORM_MODE) {\n                    // Pad data\n                    padding.pad(this._data, this.blockSize);\n\n                    // Process final blocks\n                    var finalProcessedBlocks = this._process(!!'flush');\n                } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n                    // Process final blocks\n                    var finalProcessedBlocks = this._process(!!'flush');\n\n                    // Unpad data\n                    padding.unpad(finalProcessedBlocks);\n                }\n\n                return finalProcessedBlocks;\n            },\n\n            blockSize: 128 / 32\n        });\n\n        /**\n         * A collection of cipher parameters.\n         *\n         * @property {WordArray} ciphertext The raw ciphertext.\n         * @property {WordArray} key The key to this ciphertext.\n         * @property {WordArray} iv The IV used in the ciphering operation.\n         * @property {WordArray} salt The salt used with a key derivation function.\n         * @property {Cipher} algorithm The cipher algorithm.\n         * @property {Mode} mode The block mode used in the ciphering operation.\n         * @property {Padding} padding The padding scheme used in the ciphering operation.\n         * @property {number} blockSize The block size of the cipher.\n         * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n         */\n        var CipherParams = C_lib.CipherParams = Base.extend({\n            /**\n             * Initializes a newly created cipher params object.\n             *\n             * @param {Object} cipherParams An object with any of the possible cipher parameters.\n             *\n             * @example\n             *\n             *     var cipherParams = CryptoJS.lib.CipherParams.create({\n             *         ciphertext: ciphertextWordArray,\n             *         key: keyWordArray,\n             *         iv: ivWordArray,\n             *         salt: saltWordArray,\n             *         algorithm: CryptoJS.algo.AES,\n             *         mode: CryptoJS.mode.CBC,\n             *         padding: CryptoJS.pad.PKCS7,\n             *         blockSize: 4,\n             *         formatter: CryptoJS.format.OpenSSL\n             *     });\n             */\n            init: function (cipherParams) {\n                this.mixIn(cipherParams);\n            },\n\n            /**\n             * Converts this cipher params object to a string.\n             *\n             * @param {Format} formatter (Optional) The formatting strategy to use.\n             *\n             * @return {string} The stringified cipher params.\n             *\n             * @throws Error If neither the formatter nor the default formatter is set.\n             *\n             * @example\n             *\n             *     var string = cipherParams + '';\n             *     var string = cipherParams.toString();\n             *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n             */\n            toString: function (formatter) {\n                return (formatter || this.formatter).stringify(this);\n            }\n        });\n\n        /**\n         * Format namespace.\n         */\n        var C_format = C.format = {};\n\n        /**\n         * OpenSSL formatting strategy.\n         */\n        var OpenSSLFormatter = C_format.OpenSSL = {\n            /**\n             * Converts a cipher params object to an OpenSSL-compatible string.\n             *\n             * @param {CipherParams} cipherParams The cipher params object.\n             *\n             * @return {string} The OpenSSL-compatible string.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n             */\n            stringify: function (cipherParams) {\n                // Shortcuts\n                var ciphertext = cipherParams.ciphertext;\n                var salt = cipherParams.salt;\n\n                // Format\n                if (salt) {\n                    var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n                } else {\n                    var wordArray = ciphertext;\n                }\n\n                return wordArray.toString(Base64);\n            },\n\n            /**\n             * Converts an OpenSSL-compatible string to a cipher params object.\n             *\n             * @param {string} openSSLStr The OpenSSL-compatible string.\n             *\n             * @return {CipherParams} The cipher params object.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n             */\n            parse: function (openSSLStr) {\n                // Parse base64\n                var ciphertext = Base64.parse(openSSLStr);\n\n                // Shortcut\n                var ciphertextWords = ciphertext.words;\n\n                // Test for salt\n                if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n                    // Extract salt\n                    var salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n                    // Remove salt from ciphertext\n                    ciphertextWords.splice(0, 4);\n                    ciphertext.sigBytes -= 16;\n                }\n\n                return CipherParams.create({ciphertext: ciphertext, salt: salt});\n            }\n        };\n\n        /**\n         * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n         */\n        var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n            /**\n             * Configuration options.\n             *\n             * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n             */\n            cfg: Base.extend({\n                format: OpenSSLFormatter\n            }),\n\n            /**\n             * Encrypts a message.\n             *\n             * @param {Cipher} cipher The cipher algorithm to use.\n             * @param {WordArray|string} message The message to encrypt.\n             * @param {WordArray} key The key.\n             * @param {Object} cfg (Optional) The configuration options to use for this operation.\n             *\n             * @return {CipherParams} A cipher params object.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n             *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n             *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n             */\n            encrypt: function (cipher, message, key, cfg) {\n                // Apply config defaults\n                cfg = this.cfg.extend(cfg);\n\n                // Encrypt\n                var encryptor = cipher.createEncryptor(key, cfg);\n                var ciphertext = encryptor.finalize(message);\n\n                // Shortcut\n                var cipherCfg = encryptor.cfg;\n\n                // Create and return serializable cipher params\n                return CipherParams.create({\n                    ciphertext: ciphertext,\n                    key: key,\n                    iv: cipherCfg.iv,\n                    algorithm: cipher,\n                    mode: cipherCfg.mode,\n                    padding: cipherCfg.padding,\n                    blockSize: cipher.blockSize,\n                    formatter: cfg.format\n                });\n            },\n\n            /**\n             * Decrypts serialized ciphertext.\n             *\n             * @param {Cipher} cipher The cipher algorithm to use.\n             * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n             * @param {WordArray} key The key.\n             * @param {Object} cfg (Optional) The configuration options to use for this operation.\n             *\n             * @return {WordArray} The plaintext.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n             *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n             */\n            decrypt: function (cipher, ciphertext, key, cfg) {\n                // Apply config defaults\n                cfg = this.cfg.extend(cfg);\n\n                // Convert string to CipherParams\n                ciphertext = this._parse(ciphertext, cfg.format);\n\n                // Decrypt\n                var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n                return plaintext;\n            },\n\n            /**\n             * Converts serialized ciphertext to CipherParams,\n             * else assumed CipherParams already and returns ciphertext unchanged.\n             *\n             * @param {CipherParams|string} ciphertext The ciphertext.\n             * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n             *\n             * @return {CipherParams} The unserialized ciphertext.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n             */\n            _parse: function (ciphertext, format) {\n                if (typeof ciphertext == 'string') {\n                    return format.parse(ciphertext, this);\n                } else {\n                    return ciphertext;\n                }\n            }\n        });\n\n        /**\n         * Key derivation function namespace.\n         */\n        var C_kdf = C.kdf = {};\n\n        /**\n         * OpenSSL key derivation function.\n         */\n        var OpenSSLKdf = C_kdf.OpenSSL = {\n            /**\n             * Derives a key and IV from a password.\n             *\n             * @param {string} password The password to derive from.\n             * @param {number} keySize The size in words of the key to generate.\n             * @param {number} ivSize The size in words of the IV to generate.\n             * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n             *\n             * @return {CipherParams} A cipher params object with the key, IV, and salt.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n             *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n             */\n            execute: function (password, keySize, ivSize, salt) {\n                // Generate random salt\n                if (!salt) {\n                    salt = WordArray.random(64 / 8);\n                }\n\n                // Derive key and IV\n                var key = EvpKDF.create({keySize: keySize + ivSize}).compute(password, salt);\n\n                // Separate key and IV\n                var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n                key.sigBytes = keySize * 4;\n\n                // Return params\n                return CipherParams.create({key: key, iv: iv, salt: salt});\n            }\n        };\n\n        /**\n         * A serializable cipher wrapper that derives the key from a password,\n         * and returns ciphertext as a serializable cipher params object.\n         */\n        var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n            /**\n             * Configuration options.\n             *\n             * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n             */\n            cfg: SerializableCipher.cfg.extend({\n                kdf: OpenSSLKdf\n            }),\n\n            /**\n             * Encrypts a message using a password.\n             *\n             * @param {Cipher} cipher The cipher algorithm to use.\n             * @param {WordArray|string} message The message to encrypt.\n             * @param {string} password The password.\n             * @param {Object} cfg (Optional) The configuration options to use for this operation.\n             *\n             * @return {CipherParams} A cipher params object.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n             *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n             */\n            encrypt: function (cipher, message, password, cfg) {\n                // Apply config defaults\n                cfg = this.cfg.extend(cfg);\n\n                // Derive key and other params\n                var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n                // Add IV to config\n                cfg.iv = derivedParams.iv;\n\n                // Encrypt\n                var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n                // Mix in derived params\n                ciphertext.mixIn(derivedParams);\n\n                return ciphertext;\n            },\n\n            /**\n             * Decrypts serialized ciphertext using a password.\n             *\n             * @param {Cipher} cipher The cipher algorithm to use.\n             * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n             * @param {string} password The password.\n             * @param {Object} cfg (Optional) The configuration options to use for this operation.\n             *\n             * @return {WordArray} The plaintext.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n             *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n             */\n            decrypt: function (cipher, ciphertext, password, cfg) {\n                // Apply config defaults\n                cfg = this.cfg.extend(cfg);\n\n                // Convert string to CipherParams\n                ciphertext = this._parse(ciphertext, cfg.format);\n\n                // Derive key and other params\n                var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n                // Add IV to config\n                cfg.iv = derivedParams.iv;\n\n                // Decrypt\n                var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n                return plaintext;\n            }\n        });\n    }());\n\n    /*\n    CryptoJS v3.1.2\n    code.google.com/p/crypto-js\n    (c) 2009-2013 by Jeff Mott. All rights reserved.\n    code.google.com/p/crypto-js/wiki/License\n    */\n    /**\n     * Electronic Codebook block mode.\n     */\n    CryptoJS.mode.ECB = (function () {\n        var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n        ECB.Encryptor = ECB.extend({\n            processBlock: function (words, offset) {\n                this._cipher.encryptBlock(words, offset);\n            }\n        });\n\n        ECB.Decryptor = ECB.extend({\n            processBlock: function (words, offset) {\n                this._cipher.decryptBlock(words, offset);\n            }\n        });\n\n        return ECB;\n    }());\n\n\n    /*\n    CryptoJS v3.1.2\n    code.google.com/p/crypto-js\n    (c) 2009-2013 by Jeff Mott. All rights reserved.\n    code.google.com/p/crypto-js/wiki/License\n    */\n    (function () {\n        // Shortcuts\n        var C = CryptoJS;\n        var C_lib = C.lib;\n        var BlockCipher = C_lib.BlockCipher;\n        var C_algo = C.algo;\n\n        // Lookup tables\n        var SBOX = [];\n        var INV_SBOX = [];\n        var SUB_MIX_0 = [];\n        var SUB_MIX_1 = [];\n        var SUB_MIX_2 = [];\n        var SUB_MIX_3 = [];\n        var INV_SUB_MIX_0 = [];\n        var INV_SUB_MIX_1 = [];\n        var INV_SUB_MIX_2 = [];\n        var INV_SUB_MIX_3 = [];\n\n        // Compute lookup tables\n        (function () {\n            // Compute double table\n            var d = [];\n            for (var i = 0; i < 256; i++) {\n                if (i < 128) {\n                    d[i] = i << 1;\n                } else {\n                    d[i] = (i << 1) ^ 0x11b;\n                }\n            }\n\n            // Walk GF(2^8)\n            var x = 0;\n            var xi = 0;\n            for (var i = 0; i < 256; i++) {\n                // Compute sbox\n                var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n                sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n                SBOX[x] = sx;\n                INV_SBOX[sx] = x;\n\n                // Compute multiplication\n                var x2 = d[x];\n                var x4 = d[x2];\n                var x8 = d[x4];\n\n                // Compute sub bytes, mix columns tables\n                var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n                SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n                SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n                SUB_MIX_2[x] = (t << 8) | (t >>> 24);\n                SUB_MIX_3[x] = t;\n\n                // Compute inv sub bytes, inv mix columns tables\n                var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n                INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n                INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n                INV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\n                INV_SUB_MIX_3[sx] = t;\n\n                // Compute next counter\n                if (!x) {\n                    x = xi = 1;\n                } else {\n                    x = x2 ^ d[d[d[x8 ^ x2]]];\n                    xi ^= d[d[xi]];\n                }\n            }\n        }());\n\n        // Precomputed Rcon lookup\n        var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n        /**\n         * AES block cipher algorithm.\n         */\n        var AES = C_algo.AES = BlockCipher.extend({\n            _doReset: function () {\n                // Shortcuts\n                var key = this._key;\n                var keyWords = key.words;\n                var keySize = key.sigBytes / 4;\n\n                // Compute number of rounds\n                var nRounds = this._nRounds = keySize + 6;\n\n                // Compute number of key schedule rows\n                var ksRows = (nRounds + 1) * 4;\n\n                // Compute key schedule\n                var keySchedule = this._keySchedule = [];\n                for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n                    if (ksRow < keySize) {\n                        keySchedule[ksRow] = keyWords[ksRow];\n                    } else {\n                        var t = keySchedule[ksRow - 1];\n\n                        if (!(ksRow % keySize)) {\n                            // Rot word\n                            t = (t << 8) | (t >>> 24);\n\n                            // Sub word\n                            t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n                            // Mix Rcon\n                            t ^= RCON[(ksRow / keySize) | 0] << 24;\n                        } else if (keySize > 6 && ksRow % keySize == 4) {\n                            // Sub word\n                            t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n                        }\n\n                        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n                    }\n                }\n\n                // Compute inv key schedule\n                var invKeySchedule = this._invKeySchedule = [];\n                for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n                    var ksRow = ksRows - invKsRow;\n\n                    if (invKsRow % 4) {\n                        var t = keySchedule[ksRow];\n                    } else {\n                        var t = keySchedule[ksRow - 4];\n                    }\n\n                    if (invKsRow < 4 || ksRow <= 4) {\n                        invKeySchedule[invKsRow] = t;\n                    } else {\n                        invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n                            INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n                    }\n                }\n            },\n\n            encryptBlock: function (M, offset) {\n                this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n            },\n\n            decryptBlock: function (M, offset) {\n                // Swap 2nd and 4th rows\n                var t = M[offset + 1];\n                M[offset + 1] = M[offset + 3];\n                M[offset + 3] = t;\n\n                this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n                // Inv swap 2nd and 4th rows\n                var t = M[offset + 1];\n                M[offset + 1] = M[offset + 3];\n                M[offset + 3] = t;\n            },\n\n            _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n                // Shortcut\n                var nRounds = this._nRounds;\n\n                // Get input, add round key\n                var s0 = M[offset] ^ keySchedule[0];\n                var s1 = M[offset + 1] ^ keySchedule[1];\n                var s2 = M[offset + 2] ^ keySchedule[2];\n                var s3 = M[offset + 3] ^ keySchedule[3];\n\n                // Key schedule row counter\n                var ksRow = 4;\n\n                // Rounds\n                for (var round = 1; round < nRounds; round++) {\n                    // Shift rows, sub bytes, mix columns, add round key\n                    var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n                    var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n                    var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n                    var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n                    // Update state\n                    s0 = t0;\n                    s1 = t1;\n                    s2 = t2;\n                    s3 = t3;\n                }\n\n                // Shift rows, sub bytes, add round key\n                var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n                var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n                var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n                var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n                // Set output\n                M[offset] = t0;\n                M[offset + 1] = t1;\n                M[offset + 2] = t2;\n                M[offset + 3] = t3;\n            },\n\n            keySize: 256 / 32\n        });\n\n        /**\n         * Shortcut functions to the cipher's object interface.\n         *\n         * @example\n         *\n         *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n         *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n         */\n        C.AES = BlockCipher._createHelper(AES);\n    }());\n\n\n    _.extend(BI, {\n        /**\n         * aes加密方法\n         * aes-128-ecb\n         *\n         * @example\n         *\n         *     var ciphertext = BI.aesEncrypt(text, key);\n         */\n        aesEncrypt: function (text, key) {\n            key = CryptoJS.enc.Utf8.parse(key);\n            var cipher = CryptoJS.AES.encrypt(text, key, {\n                mode: CryptoJS.mode.ECB,\n                padding: CryptoJS.pad.Pkcs7\n            });\n\n            var base64Cipher = cipher.ciphertext.toString(CryptoJS.enc.Base64);\n            return base64Cipher;\n        },\n\n        /**\n         * aes解密方法\n         * @param {String} text \n         * @param {String} key \n         */\n        aesDecrypt: function (text, key) {\n            key = CryptoJS.enc.Utf8.parse(key);\n            var decipher = CryptoJS.AES.decrypt(text, key, {\n                mode: CryptoJS.mode.ECB,\n                padding: CryptoJS.pad.Pkcs7\n            });\n\n            return CryptoJS.enc.Utf8.stringify(decipher);\n        }\n    });\n}());","!(function () {\n    function aspect (type) {\n        return function (target, methodName, advice) {\n            var exist = target[methodName],\n                dispatcher;\n\n            if (!exist || exist.target != target) {\n                dispatcher = target[methodName] = function () {\n                    // before methods\n                    var beforeArr = dispatcher.before;\n                    var args = arguments, next;\n                    for (var l = beforeArr.length; l--;) {\n                        next = beforeArr[l].advice.apply(this, args);\n                        if (next === false) {\n                            return false;\n                        }\n                        args = next || args;\n                    }\n                    // target method\n                    var rs = dispatcher.method.apply(this, args);\n                    // after methods\n                    var afterArr = dispatcher.after;\n                    for (var i = 0, ii = afterArr.length; i < ii; i++) {\n                        next = afterArr[i].advice.call(this, rs, args);\n                        if (rs === false) {\n                            return false;\n                        }\n                        args = next || args;\n                    }\n                    return rs;\n                };\n\n                dispatcher.before = [];\n                dispatcher.after = [];\n\n                if (exist) {\n                    dispatcher.method = exist;\n                }\n                dispatcher.target = target;\n            }\n\n            var aspectArr = (dispatcher || exist)[type];\n            var obj = {\n                advice: advice,\n                _index: aspectArr.length,\n                remove: function () {\n                    aspectArr.splice(this._index, 1);\n                }\n            };\n            aspectArr.push(obj);\n\n            return obj;\n        };\n    }\n\n    BI.aspect = {\n        before: aspect(\"before\"),\n        after: aspect(\"after\")\n    };\n\n    return BI.aspect;\n\n})();","\n!(function () {\n\n    var _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n\n    // private method for UTF-8 encoding\n    var _utf8_encode = function (string) {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n < string.length; n++) {\n\n            var c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n\n        }\n\n        return utftext;\n    };\n\n    // private method for UTF-8 decoding\n    var _utf8_decode = function (utftext) {\n        var string = \"\";\n        var i = 0;\n        var c = 0, c3 = 0, c2 = 0;\n\n        while (i < utftext.length) {\n\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n\n        }\n        return string;\n    };\n\n    _.extend(BI, {\n\n        encode: function (input) {\n            var output = \"\";\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n\n            input = _utf8_encode(input);\n\n            while (i < input.length) {\n\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n\n                enc1 = chr1 >> 2;\n                enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n                enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n                enc4 = chr3 & 63;\n\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n\n                output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n\n            }\n\n            return output;\n        },\n\n        // public method for decoding\n        decode: function (input) {\n            var output = \"\";\n            var chr1, chr2, chr3;\n            var enc1, enc2, enc3, enc4;\n            var i = 0;\n\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n            while (i < input.length) {\n\n                enc1 = _keyStr.indexOf(input.charAt(i++));\n                enc2 = _keyStr.indexOf(input.charAt(i++));\n                enc3 = _keyStr.indexOf(input.charAt(i++));\n                enc4 = _keyStr.indexOf(input.charAt(i++));\n\n                chr1 = (enc1 << 2) | (enc2 >> 4);\n                chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n                chr3 = ((enc3 & 3) << 6) | enc4;\n\n                output = output + String.fromCharCode(chr1);\n\n                if (enc3 != 64) {\n                    output = output + String.fromCharCode(chr2);\n                }\n                if (enc4 != 64) {\n                    output = output + String.fromCharCode(chr3);\n                }\n\n            }\n\n            output = _utf8_decode(output);\n\n            return output;\n\n        }\n    });\n})();","\nBI.Cache = {\n    _prefix: \"bi\",\n    setUsername: function (username) {\n        localStorage.setItem(BI.Cache._prefix + \".username\", (username + \"\" || \"\").toUpperCase());\n    },\n    getUsername: function () {\n        return localStorage.getItem(BI.Cache._prefix + \".username\") || \"\";\n    },\n    _getKeyPrefix: function () {\n        return BI.Cache.getUsername() + \".\" + BI.Cache._prefix + \".\";\n    },\n    _generateKey: function (key) {\n        return BI.Cache._getKeyPrefix() + (key || \"\");\n    },\n    getItem: function (key) {\n        return localStorage.getItem(BI.Cache._generateKey(key));\n    },\n    setItem: function (key, value) {\n        localStorage.setItem(BI.Cache._generateKey(key), value);\n    },\n    removeItem: function (key) {\n        localStorage.removeItem(BI.Cache._generateKey(key));\n    },\n    clear: function () {\n        for (var i = localStorage.length; i >= 0; i--) {\n            var key = localStorage.key(i);\n            if (key) {\n                if (key.indexOf(BI.Cache._getKeyPrefix()) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        }\n    },\n    keys: function () {\n        var result = [];\n        for (var i = localStorage.length; i >= 0; i--) {\n            var key = localStorage.key(i);\n            if (key) {\n                var prefix = BI.Cache._getKeyPrefix();\n                if (key.indexOf(prefix) === 0) {\n                    result[result.length] = key.substring(prefix.length);\n                }\n            }\n        }\n        return result;\n    },\n\n    addCookie: function (name, value, path, expiresHours) {\n        var cookieString = name + \"=\" + escape(value);\n        // 判断是否设置过期时间\n        if (expiresHours && expiresHours > 0) {\n            var date = new Date();\n            // expires是标准GMT格式时间，应该使用时间戳作为起始时间\n            date.setTime(date.getTime() + expiresHours * 3600 * 1000);\n            cookieString = cookieString + \"; expires=\" + date.toUTCString();\n        }\n        if (path) {\n            cookieString = cookieString + \"; path=\" + path;\n        }\n        document.cookie = cookieString;\n    },\n    getCookie: function (name) {\n        var arr, reg = new RegExp(\"(^| )\" + name + \"=([^;]*)(;|$)\");\n        if (arr = document.cookie.match(reg)) {return unescape(arr[2]);}\n        return null;\n    },\n    deleteCookie: function (name, path) {\n        var date = new Date();\n        date.setTime(date.getTime() - 10000);\n        var cookieString = name + \"=v; expires=\" + date.toUTCString();\n        if (path) {\n            cookieString = cookieString + \"; path=\" + path;\n        }\n        document.cookie = cookieString;\n    }\n};","BI.CellSizeAndPositionManager = function (cellCount, cellSizeGetter, estimatedCellSize) {\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n    this._cellSizeAndPositionData = {};\n    this._lastMeasuredIndex = -1;\n};\n\nBI.CellSizeAndPositionManager.prototype = {\n    constructor: BI.CellSizeAndPositionManager,\n    configure: function (cellCount, estimatedCellSize) {\n        this._cellCount = cellCount;\n        this._estimatedCellSize = estimatedCellSize;\n    },\n\n    getCellCount: function () {\n        return this._cellCount;\n    },\n\n    getEstimatedCellSize: function () {\n        return this._estimatedCellSize;\n    },\n\n    getLastMeasuredIndex: function () {\n        return this._lastMeasuredIndex;\n    },\n\n    getSizeAndPositionOfCell: function (index) {\n        if (index < 0 || index >= this._cellCount) {\n            return;\n        }\n        if (index > this._lastMeasuredIndex) {\n            var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n            var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n            for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n                var size = this._cellSizeGetter(i);\n\n                if (size == null || isNaN(size)) {\n                    continue;\n                }\n\n                this._cellSizeAndPositionData[i] = {\n                    offset: offset,\n                    size: size\n                };\n\n                offset += size;\n            }\n\n            this._lastMeasuredIndex = index;\n        }\n        return this._cellSizeAndPositionData[index];\n    },\n\n    getSizeAndPositionOfLastMeasuredCell: function () {\n        return this._lastMeasuredIndex >= 0\n            ? this._cellSizeAndPositionData[this._lastMeasuredIndex]\n            : {\n                offset: 0,\n                size: 0\n            };\n    },\n\n    getTotalSize: function () {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        return lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size + (this._cellCount - this._lastMeasuredIndex - 1) * this._estimatedCellSize;\n    },\n\n    getUpdatedOffsetForIndex: function (align, containerSize, currentOffset, targetIndex) {\n        var datum = this.getSizeAndPositionOfCell(targetIndex);\n        var maxOffset = datum.offset;\n        var minOffset = maxOffset - containerSize + datum.size;\n\n        var idealOffset;\n\n        switch (align) {\n            case \"start\":\n                idealOffset = maxOffset;\n                break;\n            case \"end\":\n                idealOffset = minOffset;\n                break;\n            case \"center\":\n                idealOffset = maxOffset - ((containerSize - datum.size) / 2);\n                break;\n            default:\n                idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n                break;\n        }\n\n        var totalSize = this.getTotalSize();\n\n        return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    },\n\n    getVisibleCellRange: function (containerSize, offset) {\n        var totalSize = this.getTotalSize();\n\n        if (totalSize === 0) {\n            return {};\n        }\n\n        var maxOffset = offset + containerSize;\n        var start = this._findNearestCell(offset);\n\n        var datum = this.getSizeAndPositionOfCell(start);\n        offset = datum.offset + datum.size;\n\n        var stop = start;\n\n        while (offset < maxOffset && stop < this._cellCount - 1) {\n            stop++;\n            offset += this.getSizeAndPositionOfCell(stop).size;\n        }\n\n        return {\n            start: start,\n            stop: stop\n        };\n    },\n\n    resetCell: function (index) {\n        this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    },\n\n    _binarySearch: function (high, low, offset) {\n        var middle;\n        var currentOffset;\n\n        while (low <= high) {\n            middle = low + Math.floor((high - low) / 2);\n            currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n            if (currentOffset === offset) {\n                return middle;\n            } else if (currentOffset < offset) {\n                low = middle + 1;\n            } else if (currentOffset > offset) {\n                high = middle - 1;\n            }\n        }\n\n        if (low > 0) {\n            return low - 1;\n        }\n    },\n\n    _exponentialSearch: function (index, offset) {\n        var interval = 1;\n\n        while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n            index += interval;\n            interval *= 2;\n        }\n\n        return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    },\n\n    _findNearestCell: function (offset) {\n        if (isNaN(offset)) {\n            return;\n        }\n\n        offset = Math.max(0, offset);\n\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n        if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n            return this._binarySearch(lastMeasuredIndex, 0, offset);\n        }\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n        \n    }\n};\n\nBI.ScalingCellSizeAndPositionManager = function (cellCount, cellSizeGetter, estimatedCellSize, maxScrollSize) {\n    this._cellSizeAndPositionManager = new BI.CellSizeAndPositionManager(cellCount, cellSizeGetter, estimatedCellSize);\n    this._maxScrollSize = maxScrollSize || 10000000;\n};\n\nBI.ScalingCellSizeAndPositionManager.prototype = {\n    constructor: BI.ScalingCellSizeAndPositionManager,\n\n    configure: function () {\n        this._cellSizeAndPositionManager.configure.apply(this._cellSizeAndPositionManager, arguments);\n    },\n\n    getCellCount: function () {\n        return this._cellSizeAndPositionManager.getCellCount();\n    },\n\n    getEstimatedCellSize: function () {\n        return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    },\n\n    getLastMeasuredIndex: function () {\n        return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    },\n\n    getOffsetAdjustment: function (containerSize, offset) {\n        var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n        var safeTotalSize = this.getTotalSize();\n        var offsetPercentage = this._getOffsetPercentage(containerSize, offset, safeTotalSize);\n\n        return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    },\n\n    getSizeAndPositionOfCell: function (index) {\n        return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    },\n\n    getSizeAndPositionOfLastMeasuredCell: function () {\n        return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    },\n\n    getTotalSize: function () {\n        return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    },\n\n    getUpdatedOffsetForIndex: function (align, containerSize, currentOffset, targetIndex) {\n        currentOffset = this._safeOffsetToOffset(containerSize, currentOffset);\n\n        var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex(align, containerSize, currentOffset, targetIndex);\n\n        return this._offsetToSafeOffset(containerSize, offset);\n    },\n\n    getVisibleCellRange: function (containerSize, offset) {\n        offset = this._safeOffsetToOffset(containerSize, offset);\n\n        return this._cellSizeAndPositionManager.getVisibleCellRange(containerSize, offset);\n    },\n\n    resetCell: function (index) {\n        this._cellSizeAndPositionManager.resetCell(index);\n    },\n\n    _getOffsetPercentage: function (containerSize, offset, totalSize) {\n        return totalSize <= containerSize\n            ? 0\n            : offset / (totalSize - containerSize);\n    },\n\n    _offsetToSafeOffset: function (containerSize, offset) {\n        var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n        var safeTotalSize = this.getTotalSize();\n\n        if (totalSize === safeTotalSize) {\n            return offset;\n        }\n        var offsetPercentage = this._getOffsetPercentage(containerSize, offset, totalSize);\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n        \n    },\n\n    _safeOffsetToOffset: function (containerSize, offset) {\n        var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n        var safeTotalSize = this.getTotalSize();\n\n        if (totalSize === safeTotalSize) {\n            return offset;\n        }\n        var offsetPercentage = this._getOffsetPercentage(containerSize, offset, safeTotalSize);\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n        \n    }\n};","/**\n * 汉字拼音索引\n */\n\n!(function () {\n    var _ChineseFirstn\n    // 此处收录了375个多音字,数据来自于http://www.51windows.net/pages/pinyin.asp\n    var oMultiDiff = {\n        19969: \"DZ\",\n        19975: \"WM\",\n        19988: \"QJ\",\n        20048: \"YL\",\n        20056: \"SC\",\n        20060: \"NM\",\n        20094: \"QG\",\n        20127: \"QJ\",\n        20167: \"QC\",\n        20193: \"YG\",\n        20250: \"KH\",\n        20256: \"ZC\",\n        20282: \"SC\",\n        20285: \"QJG\",\n        20291: \"TD\",\n        20314: \"YD\",\n        20315: \"BF\",\n        20340: \"NE\",\n        20375: \"TD\",\n        20389: \"YJ\",\n        20391: \"CZ\",\n        20415: \"PB\",\n        20446: \"YS\",\n        20447: \"SQ\",\n        20504: \"TC\",\n        20608: \"KG\",\n        20854: \"QJ\",\n        20857: \"ZC\",\n        20911: \"PF\",\n        20985: \"AW\",\n        21032: \"PB\",\n        21048: \"XQ\",\n        21049: \"SC\",\n        21089: \"YS\",\n        21119: \"JC\",\n        21242: \"SB\",\n        21273: \"SC\",\n        21305: \"YP\",\n        21306: \"QO\",\n        21330: \"ZC\",\n        21333: \"SDC\",\n        21345: \"QK\",\n        21378: \"CA\",\n        21397: \"SC\",\n        21414: \"XS\",\n        21442: \"SC\",\n        21477: \"JG\",\n        21480: \"TD\",\n        21484: \"ZS\",\n        21494: \"YX\",\n        21505: \"YX\",\n        21512: \"HG\",\n        21523: \"XH\",\n        21537: \"PB\",\n        21542: \"PF\",\n        21549: \"KH\",\n        21571: \"E\",\n        21574: \"DA\",\n        21588: \"TD\",\n        21589: \"O\",\n        21618: \"ZC\",\n        21621: \"KHA\",\n        21632: \"ZJ\",\n        21654: \"KG\",\n        21679: \"LKG\",\n        21683: \"KH\",\n        21710: \"A\",\n        21719: \"YH\",\n        21734: \"WOE\",\n        21769: \"A\",\n        21780: \"WN\",\n        21804: \"XH\",\n        21834: \"A\",\n        21899: \"ZD\",\n        21903: \"RN\",\n        21908: \"WO\",\n        21939: \"ZC\",\n        21956: \"SA\",\n        21964: \"YA\",\n        21970: \"TD\",\n        22003: \"A\",\n        22031: \"JG\",\n        22040: \"XS\",\n        22060: \"ZC\",\n        22066: \"ZC\",\n        22079: \"MH\",\n        22129: \"XJ\",\n        22179: \"XA\",\n        22237: \"NJ\",\n        22244: \"TD\",\n        22280: \"JQ\",\n        22300: \"YH\",\n        22313: \"XW\",\n        22331: \"YQ\",\n        22343: \"YJ\",\n        22351: \"PH\",\n        22395: \"DC\",\n        22412: \"TD\",\n        22484: \"PB\",\n        22500: \"PB\",\n        22534: \"ZD\",\n        22549: \"DH\",\n        22561: \"PB\",\n        22612: \"TD\",\n        22771: \"KQ\",\n        22831: \"HB\",\n        22841: \"JG\",\n        22855: \"QJ\",\n        22865: \"XQ\",\n        23013: \"ML\",\n        23081: \"WM\",\n        23487: \"SX\",\n        23558: \"QJ\",\n        23561: \"YW\",\n        23586: \"YW\",\n        23614: \"YW\",\n        23615: \"SN\",\n        23631: \"PB\",\n        23646: \"ZS\",\n        23663: \"ZT\",\n        23673: \"YG\",\n        23762: \"TD\",\n        23769: \"ZS\",\n        23780: \"QJ\",\n        23884: \"QK\",\n        24055: \"XH\",\n        24113: \"DC\",\n        24162: \"ZC\",\n        24191: \"GA\",\n        24273: \"QJ\",\n        24324: \"NL\",\n        24377: \"TD\",\n        24378: \"QJ\",\n        24439: \"PF\",\n        24554: \"ZS\",\n        24683: \"TD\",\n        24694: \"WE\",\n        24733: \"LK\",\n        24925: \"TN\",\n        25094: \"ZG\",\n        25100: \"XQ\",\n        25103: \"XH\",\n        25153: \"PB\",\n        25170: \"PB\",\n        25179: \"KG\",\n        25203: \"PB\",\n        25240: \"ZS\",\n        25282: \"FB\",\n        25303: \"NA\",\n        25324: \"KG\",\n        25341: \"ZY\",\n        25373: \"WZ\",\n        25375: \"XJ\",\n        25384: \"A\",\n        25457: \"A\",\n        25528: \"SD\",\n        25530: \"SC\",\n        25552: \"TD\",\n        25774: \"ZC\",\n        25874: \"ZC\",\n        26044: \"YW\",\n        26080: \"WM\",\n        26292: \"PB\",\n        26333: \"PB\",\n        26355: \"ZY\",\n        26366: \"CZ\",\n        26397: \"ZC\",\n        26399: \"QJ\",\n        26415: \"ZS\",\n        26451: \"SB\",\n        26526: \"ZC\",\n        26552: \"JG\",\n        26561: \"TD\",\n        26588: \"JG\",\n        26597: \"CZ\",\n        26629: \"ZS\",\n        26638: \"YL\",\n        26646: \"XQ\",\n        26653: \"KG\",\n        26657: \"XJ\",\n        26727: \"HG\",\n        26894: \"ZC\",\n        26937: \"ZS\",\n        26946: \"ZC\",\n        26999: \"KJ\",\n        27099: \"KJ\",\n        27449: \"YQ\",\n        27481: \"XS\",\n        27542: \"ZS\",\n        27663: \"ZS\",\n        27748: \"TS\",\n        27784: \"SC\",\n        27788: \"ZD\",\n        27795: \"TD\",\n        27812: \"O\",\n        27850: \"PB\",\n        27852: \"MB\",\n        27895: \"SL\",\n        27898: \"PL\",\n        27973: \"QJ\",\n        27981: \"KH\",\n        27986: \"HX\",\n        27994: \"XJ\",\n        28044: \"YC\",\n        28065: \"WG\",\n        28177: \"SM\",\n        28267: \"QJ\",\n        28291: \"KH\",\n        28337: \"ZQ\",\n        28463: \"TL\",\n        28548: \"DC\",\n        28601: \"TD\",\n        28689: \"PB\",\n        28805: \"JG\",\n        28820: \"QG\",\n        28846: \"PB\",\n        28952: \"TD\",\n        28975: \"ZC\",\n        29100: \"A\",\n        29325: \"QJ\",\n        29575: \"SL\",\n        29602: \"FB\",\n        30010: \"TD\",\n        30044: \"CX\",\n        30058: \"PF\",\n        30091: \"YSP\",\n        30111: \"YN\",\n        30229: \"XJ\",\n        30427: \"SC\",\n        30465: \"SX\",\n        30631: \"YQ\",\n        30655: \"QJ\",\n        30684: \"QJG\",\n        30707: \"SD\",\n        30729: \"XH\",\n        30796: \"LG\",\n        30917: \"PB\",\n        31074: \"NM\",\n        31085: \"JZ\",\n        31109: \"SC\",\n        31181: \"ZC\",\n        31192: \"MLB\",\n        31293: \"JQ\",\n        31400: \"YX\",\n        31584: \"YJ\",\n        31896: \"ZN\",\n        31909: \"ZY\",\n        31995: \"XJ\",\n        32321: \"PF\",\n        32327: \"ZY\",\n        32418: \"HG\",\n        32420: \"XQ\",\n        32421: \"HG\",\n        32438: \"LG\",\n        32473: \"GJ\",\n        32488: \"TD\",\n        32521: \"QJ\",\n        32527: \"PB\",\n        32562: \"ZSQ\",\n        32564: \"JZ\",\n        32735: \"ZD\",\n        32793: \"PB\",\n        33071: \"PF\",\n        33098: \"XL\",\n        33100: \"YA\",\n        33152: \"PB\",\n        33261: \"CX\",\n        33324: \"BP\",\n        33333: \"TD\",\n        33406: \"YA\",\n        33426: \"WM\",\n        33432: \"PB\",\n        33445: \"JG\",\n        33486: \"ZN\",\n        33493: \"TS\",\n        33507: \"QJ\",\n        33540: \"QJ\",\n        33544: \"ZC\",\n        33564: \"XQ\",\n        33617: \"YT\",\n        33632: \"QJ\",\n        33636: \"XH\",\n        33637: \"YX\",\n        33694: \"WG\",\n        33705: \"PF\",\n        33728: \"YW\",\n        33882: \"SR\",\n        34067: \"WM\",\n        34074: \"YW\",\n        34121: \"QJ\",\n        34255: \"ZC\",\n        34259: \"XL\",\n        34425: \"JH\",\n        34430: \"XH\",\n        34485: \"KH\",\n        34503: \"YS\",\n        34532: \"HG\",\n        34552: \"XS\",\n        34558: \"YE\",\n        34593: \"ZL\",\n        34660: \"YQ\",\n        34892: \"XH\",\n        34928: \"SC\",\n        34999: \"QJ\",\n        35048: \"PB\",\n        35059: \"SC\",\n        35098: \"ZC\",\n        35203: \"TQ\",\n        35265: \"JX\",\n        35299: \"JX\",\n        35782: \"SZ\",\n        35828: \"YS\",\n        35830: \"E\",\n        35843: \"TD\",\n        35895: \"YG\",\n        35977: \"MH\",\n        36158: \"JG\",\n        36228: \"QJ\",\n        36426: \"XQ\",\n        36466: \"DC\",\n        36710: \"CJ\",\n        36711: \"ZYG\",\n        36767: \"PB\",\n        36866: \"SK\",\n        36951: \"YW\",\n        37034: \"YX\",\n        37063: \"XH\",\n        37218: \"ZC\",\n        37325: \"ZC\",\n        38063: \"PB\",\n        38079: \"TD\",\n        38085: \"QY\",\n        38107: \"DC\",\n        38116: \"TD\",\n        38123: \"YD\",\n        38224: \"HG\",\n        38241: \"XTC\",\n        38271: \"ZC\",\n        38415: \"YE\",\n        38426: \"KH\",\n        38461: \"YD\",\n        38463: \"AE\",\n        38466: \"PB\",\n        38477: \"XJ\",\n        38518: \"YT\",\n        38551: \"WK\",\n        38585: \"ZC\",\n        38704: \"XS\",\n        38739: \"LJ\",\n        38761: \"GJ\",\n        38808: \"SQ\",\n        39048: \"JG\",\n        39049: \"XJ\",\n        39052: \"HG\",\n        39076: \"CZ\",\n        39271: \"XT\",\n        39534: \"TD\",\n        39552: \"TD\",\n        39584: \"PB\",\n        39647: \"SB\",\n        39730: \"LG\",\n        39748: \"TPB\",\n        40109: \"ZQ\",\n        40479: \"ND\",\n        40516: \"HG\",\n        40536: \"HG\",\n        40583: \"QJ\",\n        40765: \"YQ\",\n        40784: \"QJ\",\n        40840: \"YK\",\n        40863: \"QJG\"\n    };\n\n    var _checkPYCh = function (ch) {\n        var uni = ch.charCodeAt(0);\n        // 如果不在汉字处理范围之内,返回原字符,也可以调用自己的处理函数\n        if (uni > 40869 || uni < 19968) {return ch;} // dealWithOthers(ch);\n        return (oMultiDiff[uni] ? oMultiDiff[uni] : (_ChineseFirstPY.charAt(uni - 19968)));\n    };\n\n    var _mkPYRslt = function (arr, options) {\n        var ignoreMulti = options.ignoreMulti;\n        var splitChar = options.splitChar;\n        var arrRslt = [\"\"], k, multiLen = 0;\n        for (var i = 0, len = arr.length; i < len; i++) {\n            var str = arr[i];\n            var strlen = str.length;\n            // 多音字过多的情况下，指数增长会造成浏览器卡死，超过20完全卡死，18勉强能用，考虑到不同性能最好是16或者14\n            // 超过14个多音字之后，后面的都用第一个拼音\n            if (strlen == 1 || multiLen > 14 || ignoreMulti) {\n                var tmpStr = str.substring(0, 1);\n                for (k = 0; k < arrRslt.length; k++) {\n                    arrRslt[k] += tmpStr;\n                }\n            } else {\n                var tmpArr = arrRslt.slice(0);\n                arrRslt = [];\n                multiLen ++;\n                for (k = 0; k < strlen; k++) {\n                    // 复制一个相同的arrRslt\n                    var tmp = tmpArr.slice(0);\n                    // 把当前字符str[k]添加到每个元素末尾\n                    for (var j = 0; j < tmp.length; j++) {\n                        tmp[j] += str.charAt(k);\n                    }\n                    // 把复制并修改后的数组连接到arrRslt上\n                    arrRslt = arrRslt.concat(tmp);\n                }\n            }\n        }\n        // BI-56386 这边直接将所有多音字组合拼接是有风险的，因为丢失了每一组的起始索引信息, 外部使用indexOf等方法会造成错位\n        // 一旦错位就可能认为不符合条件， 但实际上还是有可能符合条件的，故此处以一个无法搜索的不可见字符作为连接\n        return arrRslt.join(splitChar || \"\").toLowerCase();\n    };\n\n    _.extend(BI, {\n        makeFirstPY: function (str, options) {\n            options = options || {};\n            if (typeof (str) !== \"string\") {return \"\" + str;}\n            var arrResult = []; // 保存中间结果的数组\n            for (var i = 0, len = str.length; i < len; i++) {\n                // 获得unicode码\n                var ch = str.charAt(i);\n                // 检查该unicode码是否在处理范围之内,在则返回该码对映汉字的拼音首字母,不在则调用其它函数处理\n                arrResult.push(_checkPYCh(ch));\n            }\n            // 处理arrResult,返回所有可能的拼音首字母串数组\n            return _mkPYRslt(arrResult, options);\n        }\n    });\n})();","\n(function () {\n    function defaultComparator (a, b) {\n        return a < b;\n    }\n\n    BI.Heap = function (items, comparator) {\n        this._items = items || [];\n        this._size = this._items.length;\n        this._comparator = comparator || defaultComparator;\n        this._heapify();\n    };\n\n    BI.Heap.prototype = {\n        constructor: BI.Heap,\n        empty: function () {\n            return this._size === 0;\n        },\n\n        pop: function () {\n            if (this._size === 0) {\n                return;\n            }\n\n            var elt = this._items[0];\n\n            var lastElt = this._items.pop();\n            this._size--;\n\n            if (this._size > 0) {\n                this._items[0] = lastElt;\n                this._sinkDown(0);\n            }\n\n            return elt;\n        },\n\n        push: function (item) {\n            this._items[this._size++] = item;\n            this._bubbleUp(this._size - 1);\n        },\n\n        size: function () {\n            return this._size;\n        },\n\n        peek: function () {\n            if (this._size === 0) {\n                return;\n            }\n\n            return this._items[0];\n        },\n\n        _heapify: function () {\n            for (var index = Math.floor((this._size + 1) / 2); index >= 0; index--) {\n                this._sinkDown(index);\n            }\n        },\n\n        _bubbleUp: function (index) {\n            var elt = this._items[index];\n            while (index > 0) {\n                var parentIndex = Math.floor((index + 1) / 2) - 1;\n                var parentElt = this._items[parentIndex];\n\n                // if parentElt < elt, stop\n                if (this._comparator(parentElt, elt)) {\n                    return;\n                }\n\n                // swap\n                this._items[parentIndex] = elt;\n                this._items[index] = parentElt;\n                index = parentIndex;\n            }\n        },\n\n        _sinkDown: function (index) {\n            var elt = this._items[index];\n\n            while (true) {\n                var leftChildIndex = 2 * (index + 1) - 1;\n                var rightChildIndex = 2 * (index + 1);\n                var swapIndex = -1;\n\n                if (leftChildIndex < this._size) {\n                    var leftChild = this._items[leftChildIndex];\n                    if (this._comparator(leftChild, elt)) {\n                        swapIndex = leftChildIndex;\n                    }\n                }\n\n                if (rightChildIndex < this._size) {\n                    var rightChild = this._items[rightChildIndex];\n                    if (this._comparator(rightChild, elt)) {\n                        if (swapIndex === -1 ||\n                            this._comparator(rightChild, this._items[swapIndex])) {\n                            swapIndex = rightChildIndex;\n                        }\n                    }\n                }\n\n                // if we don't have a swap, stop\n                if (swapIndex === -1) {\n                    return;\n                }\n\n                this._items[index] = this._items[swapIndex];\n                this._items[swapIndex] = elt;\n                index = swapIndex;\n            }\n        }\n    };\n})();\n","\n!(function () {\n    BI.LinkHashMap = function () {\n        this.array = [];\n        this.map = {};\n    };\n    BI.LinkHashMap.prototype = {\n        constructor: BI.LinkHashMap,\n        has: function (key) {\n            if (key in this.map) {\n                return true;\n            }\n            return false;\n        },\n\n        add: function (key, value) {\n            if (typeof key === \"undefined\") {\n                return;\n            }\n            if (key in this.map) {\n                this.map[key] = value;\n            } else {\n                this.array.push(key);\n                this.map[key] = value;\n            }\n        },\n\n        remove: function (key) {\n            if (key in this.map) {\n                delete this.map[key];\n                for (var i = 0; i < this.array.length; i++) {\n                    if (this.array[i] == key) {\n                        this.array.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        },\n\n        size: function () {\n            return this.array.length;\n        },\n\n        each: function (fn, scope) {\n            var scope = scope || window;\n            var fn = fn || null;\n            if (fn == null || typeof (fn) !== \"function\") {\n                return;\n            }\n            for (var i = 0; i < this.array.length; i++) {\n                var key = this.array[i];\n                var value = this.map[key];\n                var re = fn.call(scope, key, value, i, this.array, this.map);\n                if (re == false) {\n                    break;\n                }\n            }\n        },\n\n        get: function (key) {\n            return this.map[key];\n        },\n\n        toArray: function () {\n            var array = [];\n            this.each(function (key, value) {\n                array.push(value);\n            });\n            return array;\n        }\n    };\n})();","\n!(function () {\n    BI.LRU = function (limit) {\n        this.size = 0;\n        this.limit = limit;\n        this.head = this.tail = undefined;\n        this._keymap = {};\n    };\n\n    var p = BI.LRU.prototype;\n\n    p.put = function (key, value) {\n        var removed;\n        if (this.size === this.limit) {\n            removed = this.shift();\n        }\n\n        var entry = this.get(key, true);\n        if (!entry) {\n            entry = {\n                key: key\n            };\n            this._keymap[key] = entry;\n            if (this.tail) {\n                this.tail.newer = entry;\n                entry.older = this.tail;\n            } else {\n                this.head = entry;\n            }\n            this.tail = entry;\n            this.size++;\n        }\n        entry.value = value;\n\n        return removed;\n    };\n\n    p.shift = function () {\n        var entry = this.head;\n        if (entry) {\n            this.head = this.head.newer;\n            this.head.older = undefined;\n            entry.newer = entry.older = undefined;\n            this._keymap[entry.key] = undefined;\n            this.size--;\n        }\n        return entry;\n    };\n\n\n    p.get = function (key, returnEntry) {\n        var entry = this._keymap[key];\n        if (entry === undefined) return;\n        if (entry === this.tail) {\n            return returnEntry\n                ? entry\n                : entry.value;\n        }\n        // HEAD--------------TAIL\n        //   <.older   .newer>\n        //  <--- add direction --\n        //   A  B  C  <D>  E\n        if (entry.newer) {\n            if (entry === this.head) {\n                this.head = entry.newer;\n            }\n            entry.newer.older = entry.older; // C <-- E.\n        }\n        if (entry.older) {\n            entry.older.newer = entry.newer; // C. --> E\n        }\n        entry.newer = undefined; // D --x\n        entry.older = this.tail; // D. --> E\n        if (this.tail) {\n            this.tail.newer = entry; // E. <-- D\n        }\n        this.tail = entry;\n        return returnEntry\n            ? entry\n            : entry.value;\n    };\n\n    p.has = function (key) {\n        return this._keymap[key] != null;\n    };\n})();","// 线段树\n(function () {\n    var parent = function (node) {\n        return Math.floor(node / 2);\n    };\n\n    var Int32Array = _global.Int32Array || function (size) {\n        var xs = [];\n        for (var i = size - 1; i >= 0; --i) {\n            xs[i] = 0;\n        }\n        return xs;\n    };\n\n    var ceilLog2 = function (x) {\n        var y = 1;\n        while (y < x) {\n            y *= 2;\n        }\n        return y;\n    };\n\n    BI.PrefixIntervalTree = function (xs) {\n        this._size = xs.length;\n        this._half = ceilLog2(this._size);\n        // _heap是一个_size两倍以上的堆\n        this._heap = new Int32Array(2 * this._half);\n\n        var i;\n        // 初始化 >= _size 的堆空间, 即叶子节点\n        for (i = 0; i < this._size; ++i) {\n            this._heap[this._half + i] = xs[i];\n        }\n        // 初始化 < _size 的堆空间, 即非叶子节点，根节点包含整个区间\n        for (i = this._half - 1; i > 0; --i) {\n            this._heap[i] = this._heap[2 * i] + this._heap[2 * i + 1];\n        }\n    };\n\n    BI.PrefixIntervalTree.prototype = {\n        constructor: BI.PrefixIntervalTree,\n        // 往_half之后的空间set值，需要更新其所有祖先节点的值\n        set: function (index, value) {\n            var node = this._half + index;\n            this._heap[node] = value;\n\n            node = parent(node);\n            for (; node !== 0; node = parent(node)) {\n                this._heap[node] =\n                    this._heap[2 * node] + this._heap[2 * node + 1];\n            }\n        },\n\n        get: function (index) {\n            var node = this._half + index;\n            return this._heap[node];\n        },\n\n        getSize: function () {\n            return this._size;\n        },\n\n        /**\n         * get(0) + get(1) + ... + get(end - 1).\n         */\n        sumUntil: function (end) {\n            if (end === 0) {\n                return 0;\n            }\n\n            var node = this._half + end - 1;\n            var sum = this._heap[node];\n            for (; node !== 1; node = parent(node)) {\n                if (node % 2 === 1) {\n                    sum += this._heap[node - 1];\n                }\n            }\n\n            return sum;\n        },\n\n        /**\n         * get(0) + get(1) + ... + get(inclusiveEnd).\n         */\n        sumTo: function (inclusiveEnd) {\n            return this.sumUntil(inclusiveEnd + 1);\n        },\n\n        /**\n         * sum get(begin) + get(begin + 1) + ... + get(end - 1).\n         */\n        sum: function (begin, end) {\n            return this.sumUntil(end) - this.sumUntil(begin);\n        },\n\n        /**\n         * Returns the smallest i such that 0 <= i <= size and sumUntil(i) <= t, or\n         * -1 if no such i exists.\n         */\n        greatestLowerBound: function (t) {\n            if (t < 0) {\n                return -1;\n            }\n\n            var node = 1;\n            if (this._heap[node] <= t) {\n                return this._size;\n            }\n\n            while (node < this._half) {\n                var leftSum = this._heap[2 * node];\n                if (t < leftSum) {\n                    node = 2 * node;\n                } else {\n                    node = 2 * node + 1;\n                    t -= leftSum;\n                }\n            }\n\n            return node - this._half;\n        },\n\n        /**\n         * Returns the smallest i such that 0 <= i <= size and sumUntil(i) < t, or\n         * -1 if no such i exists.\n         */\n        greatestStrictLowerBound: function (t) {\n            if (t <= 0) {\n                return -1;\n            }\n\n            var node = 1;\n            if (this._heap[node] < t) {\n                return this._size;\n            }\n\n            while (node < this._half) {\n                var leftSum = this._heap[2 * node];\n                if (t <= leftSum) {\n                    node = 2 * node;\n                } else {\n                    node = 2 * node + 1;\n                    t -= leftSum;\n                }\n            }\n\n            return node - this._half;\n        },\n\n        /**\n         * Returns the smallest i such that 0 <= i <= size and t <= sumUntil(i), or\n         * size + 1 if no such i exists.\n         */\n        leastUpperBound: function (t) {\n            return this.greatestStrictLowerBound(t) + 1;\n        },\n\n        /**\n         * Returns the smallest i such that 0 <= i <= size and t < sumUntil(i), or\n         * size + 1 if no such i exists.\n         */\n        leastStrictUpperBound: function (t) {\n            return this.greatestLowerBound(t) + 1;\n        }\n    };\n\n    BI.PrefixIntervalTree.uniform = function (size, initialValue) {\n        var xs = [];\n        for (var i = size - 1; i >= 0; --i) {\n            xs[i] = initialValue;\n        }\n\n        return new BI.PrefixIntervalTree(xs);\n    };\n\n    BI.PrefixIntervalTree.empty = function (size) {\n        return BI.PrefixIntervalTree.uniform(size, 0);\n    };\n\n})();\n","\n!(function () {\n    BI.Queue = function (capacity) {\n        this.capacity = capacity;\n        this.array = [];\n    };\n    BI.Queue.prototype = {\n        constructor: BI.Queue,\n\n        contains: function (v) {\n            return BI.contains(this.array, v);\n        },\n\n        indexOf: function (v) {\n            return BI.contains(this.array, v);\n        },\n\n        getElementByIndex: function (index) {\n            return this.array[index];\n        },\n\n        push: function (v) {\n            this.array.push(v);\n            if (this.capacity && this.array.length > this.capacity) {\n                this.array.shift();\n            }\n        },\n\n        pop: function () {\n            this.array.pop();\n        },\n\n        shift: function () {\n            this.array.shift();\n        },\n\n        unshift: function (v) {\n            this.array.unshift(v);\n            if (this.capacity && this.array.length > this.capacity) {\n                this.array.pop();\n            }\n        },\n\n        remove: function (v) {\n            BI.remove(this.array, v);\n        },\n\n        splice: function () {\n            this.array.splice.apply(this.array, arguments);\n        },\n\n        slice: function () {\n            this.array.slice.apply(this.array, arguments);\n        },\n\n        size: function () {\n            return this.array.length;\n        },\n\n        each: function (fn, scope) {\n            var scope = scope || window;\n            var fn = fn || null;\n            if (fn == null || typeof (fn) !== \"function\") {\n                return;\n            }\n            for (var i = 0; i < this.array.length; i++) {\n                var re = fn.call(scope, i, this.array[i], this.array);\n                if (re == false) {\n                    break;\n                }\n            }\n        },\n\n        toArray: function () {\n            return this.array;\n        },\n\n        fromArray: function (array) {\n            var self = this;\n            BI.each(array, function (i, v) {\n                self.push(v);\n            });\n        },\n\n        clear: function () {\n            this.array.length = 0;\n        }\n    };\n})();","!(function () {\n    var Section = function (height, width, x, y) {\n        this.height = height;\n        this.width = width;\n        this.x = x;\n        this.y = y;\n\n        this._indexMap = {};\n        this._indices = [];\n    };\n\n    Section.prototype = {\n        constructor: Section,\n        addCellIndex: function (index) {\n            if (!this._indexMap[index]) {\n                this._indexMap[index] = true;\n                this._indices.push(index);\n            }\n        },\n\n        getCellIndices: function () {\n            return this._indices;\n        }\n    };\n\n    var SECTION_SIZE = 100;\n    BI.SectionManager = function (sectionSize) {\n        this._sectionSize = sectionSize || SECTION_SIZE;\n        this._cellMetadata = [];\n        this._sections = {};\n    };\n\n    BI.SectionManager.prototype = {\n        constructor: BI.SectionManager,\n        getCellIndices: function (height, width, x, y) {\n            var indices = {};\n\n            BI.each(this.getSections(height, width, x, y), function (i, section) {\n                BI.each(section.getCellIndices(), function (j, index) {\n                    indices[index] = index;\n                });\n            });\n\n            return BI.map(BI.keys(indices), function (i, index) {\n                return indices[index];\n            });\n        },\n\n        getCellMetadata: function (index) {\n            return this._cellMetadata[index];\n        },\n\n        getSections: function (height, width, x, y) {\n            var sectionXStart = Math.floor(x / this._sectionSize);\n            var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n            var sectionYStart = Math.floor(y / this._sectionSize);\n            var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n\n            var sections = [];\n\n            for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n                for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n                    var key = sectionX + \".\" + sectionY;\n\n                    if (!this._sections[key]) {\n                        this._sections[key] = new Section(this._sectionSize, this._sectionSize, sectionX * this._sectionSize, sectionY * this._sectionSize);\n                    }\n\n                    sections.push(this._sections[key]);\n                }\n            }\n\n            return sections;\n        },\n\n        getTotalSectionCount: function () {\n            return BI.size(this._sections);\n        },\n\n        registerCell: function (cellMetadatum, index) {\n            this._cellMetadata[index] = cellMetadatum;\n\n            BI.each(this.getSections(cellMetadatum.height, cellMetadatum.width, cellMetadatum.x, cellMetadatum.y), function (i, section) {\n                section.addCellIndex(index);\n            });\n        }\n    };\n})();","(function () {\n    BI.Tree = function () {\n        this.root = new BI.Node(BI.UUID());\n    };\n\n    BI.Tree.prototype = {\n        constructor: BI.Tree,\n        addNode: function (node, newNode, index) {\n            if (BI.isNull(newNode)) {\n                this.root.addChild(node, index);\n            } else if (BI.isNull(node)) {\n                this.root.addChild(newNode, index);\n            } else {\n                node.addChild(newNode, index);\n            }\n        },\n\n        isRoot: function (node) {\n            return node === this.root;\n        },\n\n        getRoot: function () {\n            return this.root;\n        },\n\n        clear: function () {\n            this.root.clear();\n        },\n\n        initTree: function (nodes) {\n            var self = this;\n            this.clear();\n            var queue = [];\n            BI.each(nodes, function (i, node) {\n                var n = new BI.Node(node);\n                n.set(\"data\", node);\n                self.addNode(n);\n                queue.push(n);\n            });\n            while (!BI.isEmpty(queue)) {\n                var parent = queue.shift();\n                var node = parent.get(\"data\");\n                BI.each(node.children, function (i, child) {\n                    var n = new BI.Node(child);\n                    n.set(\"data\", child);\n                    queue.push(n);\n                    self.addNode(parent, n);\n                });\n            }\n        },\n\n        _toJSON: function (node) {\n            var self = this;\n            var children = [];\n            BI.each(node.getChildren(), function (i, child) {\n                children.push(self._toJSON(child));\n            });\n            return BI.extend({\n                id: node.id\n            }, BI.deepClone(node.get(\"data\")), (children.length > 0 ? {\n                    children: children\n                } : {}));\n        },\n\n        toJSON: function (node) {\n            var self = this, result = [];\n            BI.each((node || this.root).getChildren(), function (i, child) {\n                result.push(self._toJSON(child));\n            });\n            return result;\n        },\n\n        _toJSONWithNode: function (node) {\n            var self = this;\n            var children = [];\n            BI.each(node.getChildren(), function (i, child) {\n                children.push(self._toJSONWithNode(child));\n            });\n            return BI.extend({\n                id: node.id\n            }, BI.deepClone(node.get(\"data\")), {\n                node: node\n            }, (children.length > 0 ? {\n                    children: children\n                } : {}));\n        },\n\n        toJSONWithNode: function (node) {\n            var self = this, result = [];\n            BI.each((node || this.root).getChildren(), function (i, child) {\n                result.push(self._toJSONWithNode(child));\n            });\n            return result;\n        },\n\n        search: function (root, target, param) {\n            if (!(root instanceof BI.Node)) {\n                return arguments.callee.apply(this, [this.root, root, target]);\n            }\n            var self = this, next = null;\n\n            if (BI.isNull(target)) {\n                return null;\n            }\n            if (BI.isEqual(root[param || \"id\"], target)) {\n                return root;\n            }\n            BI.any(root.getChildren(), function (i, child) {\n                next = self.search(child, target, param);\n                if (null !== next) {\n                    return true;\n                }\n            });\n            return next;\n        },\n\n        _traverse: function (node, callback) {\n            var queue = [];\n            queue.push(node);\n            while (!BI.isEmpty(queue)) {\n                var temp = queue.shift();\n                var b = callback && callback(temp);\n                if (b === false) {\n                    break;\n                }\n                if (b === true) {\n                    continue;\n                }\n                if (temp != null) {\n                    queue = queue.concat(temp.getChildren());\n                }\n            }\n        },\n\n        traverse: function (callback) {\n            this._traverse(this.root, callback);\n        },\n\n        _recursion: function (node, route, callback) {\n            var self = this;\n            return BI.every(node.getChildren(), function (i, child) {\n                var next = BI.clone(route);\n                next.push(child.id);\n                var b = callback && callback(child, next);\n                if (b === false) {\n                    return false;\n                }\n                if (b === true) {\n                    return true;\n                }\n                return self._recursion(child, next, callback);\n            });\n        },\n\n        recursion: function (callback) {\n            this._recursion(this.root, [], callback);\n        },\n\n        inOrderTraverse: function (callback) {\n            this._inOrderTraverse(this.root, callback);\n        },\n\n        // 中序遍历(递归)\n        _inOrderTraverse: function (node, callback) {\n            if (node != null) {\n                this._inOrderTraverse(node.getLeft());\n                callback && callback(node);\n                this._inOrderTraverse(node.getRight());\n            }\n        },\n\n        // 中序遍历(非递归)\n        nrInOrderTraverse: function (callback) {\n\n            var stack = [];\n            var node = this.root;\n            while (node != null || !BI.isEmpty(stack)) {\n                while (node != null) {\n                    stack.push(node);\n                    node = node.getLeft();\n                }\n                node = stack.pop();\n                callback && callback(node);\n                node = node.getRight();\n            }\n        },\n\n        preOrderTraverse: function (callback) {\n            this._preOrderTraverse(this.root, callback);\n        },\n\n        // 先序遍历(递归)\n        _preOrderTraverse: function (node, callback) {\n            if (node != null) {\n                callback && callback(node);\n                this._preOrderTraverse(node.getLeft());\n                this._preOrderTraverse(node.getRight());\n            }\n        },\n\n        // 先序遍历（非递归）\n        nrPreOrderTraverse: function (callback) {\n\n            var stack = [];\n            var node = this.root;\n\n            while (node != null || !BI.isEmpty(stack)) {\n\n                while (node != null) {\n                    callback && callback(node);\n                    stack.push(node);\n                    node = node.getLeft();\n                }\n                node = stack.pop();\n                node = node.getRight();\n            }\n        },\n\n        postOrderTraverse: function (callback) {\n            this._postOrderTraverse(this.root, callback);\n        },\n\n        // 后序遍历(递归)\n        _postOrderTraverse: function (node, callback) {\n            if (node != null) {\n                this._postOrderTraverse(node.getLeft());\n                this._postOrderTraverse(node.getRight());\n                callback && callback(node);\n            }\n        },\n\n        // 后续遍历(非递归)\n        nrPostOrderTraverse: function (callback) {\n\n            var stack = [];\n            var node = this.root;\n            var preNode = null;// 表示最近一次访问的节点\n\n            while (node != null || !BI.isEmpty(stack)) {\n\n                while (node != null) {\n                    stack.push(node);\n                    node = node.getLeft();\n                }\n\n                node = BI.last(stack);\n\n                if (node.getRight() == null || node.getRight() == preNode) {\n                    callback && callback(node);\n                    node = stack.pop();\n                    preNode = node;\n                    node = null;\n                } else {\n                    node = node.getRight();\n                }\n            }\n        }\n    };\n\n    BI.Node = function (id) {\n        if (BI.isObject(id)) {\n            BI.extend(this, id);\n        } else {\n            this.id = id;\n        }\n        this.clear.apply(this, arguments);\n    };\n\n    BI.Node.prototype = {\n        constructor: BI.Node,\n\n        set: function (key, value) {\n            if (BI.isObject(key)) {\n                BI.extend(this, key);\n                return;\n            }\n            this[key] = value;\n        },\n\n        get: function (key) {\n            return this[key];\n        },\n\n        isLeaf: function () {\n            return BI.isEmpty(this.children);\n        },\n\n        getChildren: function () {\n            return this.children;\n        },\n\n        getChildrenLength: function () {\n            return this.children.length;\n        },\n\n        getFirstChild: function () {\n            return BI.first(this.children);\n        },\n\n        getLastChild: function () {\n            return BI.last(this.children);\n        },\n\n        setLeft: function (left) {\n            this.left = left;\n        },\n\n        getLeft: function () {\n            return this.left;\n        },\n\n        setRight: function (right) {\n            this.right = right;\n        },\n\n        getRight: function () {\n            return this.right;\n        },\n\n        setParent: function (parent) {\n            this.parent = parent;\n        },\n\n        getParent: function () {\n            return this.parent;\n        },\n\n        getChild: function (index) {\n            return this.children[index];\n        },\n\n        getChildIndex: function (id) {\n            return BI.findIndex(this.children, function (i, ch) {\n                return ch.get(\"id\") === id;\n            });\n        },\n\n        removeChild: function (id) {\n            this.removeChildByIndex(this.getChildIndex(id));\n        },\n\n        removeChildByIndex: function (index) {\n            var before = this.getChild(index - 1);\n            var behind = this.getChild(index + 1);\n            if (before != null) {\n                before.setRight(behind || null);\n            }\n            if (behind != null) {\n                behind.setLeft(before || null);\n            }\n            this.children.splice(index, 1);\n        },\n\n        removeAllChilds: function () {\n            this.children = [];\n        },\n\n        addChild: function (child, index) {\n            var cur = null;\n            if (BI.isUndefined(index)) {\n                cur = this.children.length - 1;\n            } else {\n                cur = index - 1;\n            }\n            child.setParent(this);\n            if (cur >= 0) {\n                this.getChild(cur) && this.getChild(cur).setRight(child);\n                child.setLeft(this.getChild(cur));\n            }\n            if (BI.isUndefined(index)) {\n                this.children.push(child);\n            } else {\n                this.children.splice(index, 0, child);\n            }\n        },\n\n        equals: function (obj) {\n            return this === obj || this.id === obj.id;\n        },\n\n        clear: function () {\n            this.parent = null;\n            this.left = null;\n            this.right = null;\n            this.children = [];\n        }\n    };\n\n    BI.extend(BI.Tree, {\n        transformToArrayFormat: function (nodes, pId) {\n            if (!nodes) return [];\n            var r = [];\n            if (BI.isArray(nodes)) {\n                for (var i = 0, l = nodes.length; i < l; i++) {\n                    var node = BI.clone(nodes[i]);\n                    node.pId = node.pId == null ? pId : node.pId;\n                    delete node.children;\n                    r.push(node);\n                    if (nodes[i][\"children\"]) {\n                        r = r.concat(BI.Tree.transformToArrayFormat(nodes[i][\"children\"], node.id));\n                    }\n                }\n            } else {\n                var newNodes = BI.clone(nodes);\n                newNodes.pId = newNodes.pId == null ? pId : newNodes.pId;\n                delete newNodes.children;\n                r.push(newNodes);\n                if (nodes[\"children\"]) {\n                    r = r.concat(BI.Tree.transformToArrayFormat(nodes[\"children\"], newNodes.id));\n                }\n            }\n            return r;\n        },\n\n        arrayFormat: function (nodes, pId) {\n            if (!nodes) {\n                return [];\n            }\n            var r = [];\n            if (BI.isArray(nodes)) {\n                for (var i = 0, l = nodes.length; i < l; i++) {\n                    var node = nodes[i];\n                    node.pId = node.pId == null ? pId : node.pId;\n                    r.push(node);\n                    if (nodes[i][\"children\"]) {\n                        r = r.concat(BI.Tree.arrayFormat(nodes[i][\"children\"], node.id));\n                    }\n                }\n            } else {\n                var newNodes = nodes;\n                newNodes.pId = newNodes.pId == null ? pId : newNodes.pId;\n                r.push(newNodes);\n                if (nodes[\"children\"]) {\n                    r = r.concat(BI.Tree.arrayFormat(nodes[\"children\"], newNodes.id));\n                }\n            }\n            return r;\n        },\n\n        transformToTreeFormat: function (sNodes) {\n            var i, l;\n            if (!sNodes) {\n                return [];\n            }\n\n            if (BI.isArray(sNodes)) {\n                var r = [];\n                var tmpMap = {};\n                for (i = 0, l = sNodes.length; i < l; i++) {\n                    if (BI.isNull(sNodes[i].id)) {\n                        return sNodes;\n                    }\n                    tmpMap[sNodes[i].id] = BI.clone(sNodes[i]);\n                }\n                for (i = 0, l = sNodes.length; i < l; i++) {\n                    if (tmpMap[sNodes[i].pId] && sNodes[i].id !== sNodes[i].pId) {\n                        if (!tmpMap[sNodes[i].pId].children) {\n                            tmpMap[sNodes[i].pId].children = [];\n                        }\n                        tmpMap[sNodes[i].pId].children.push(tmpMap[sNodes[i].id]);\n                    } else {\n                        r.push(tmpMap[sNodes[i].id]);\n                    }\n                    delete tmpMap[sNodes[i].id].pId;\n                }\n                return r;\n            }\n            return [sNodes];\n            \n        },\n\n        treeFormat: function (sNodes) {\n            var i, l;\n            if (!sNodes) {\n                return [];\n            }\n\n            if (BI.isArray(sNodes)) {\n                var r = [];\n                var tmpMap = {};\n                for (i = 0, l = sNodes.length; i < l; i++) {\n                    if (BI.isNull(sNodes[i].id)) {\n                        return sNodes;\n                    }\n                    tmpMap[sNodes[i].id] = sNodes[i];\n                }\n                for (i = 0, l = sNodes.length; i < l; i++) {\n                    if (tmpMap[sNodes[i].pId] && sNodes[i].id !== sNodes[i].pId) {\n                        if (!tmpMap[sNodes[i].pId].children) {\n                            tmpMap[sNodes[i].pId].children = [];\n                        }\n                        tmpMap[sNodes[i].pId].children.push(tmpMap[sNodes[i].id]);\n                    } else {\n                        r.push(tmpMap[sNodes[i].id]);\n                    }\n                }\n                return r;\n            }\n            return [sNodes];\n            \n        },\n\n        traversal: function (array, callback) {\n            if (BI.isNull(array)) {\n                return;\n            }\n            var self = this;\n            BI.some(array, function (i, item) {\n                if (callback(i, item) === false) {\n                    return true;\n                }\n                self.traversal(item.children, callback);\n            });\n        }\n    });\n})();","// 向量操作\nBI.Vector = function (x, y) {\n    this.x = x;\n    this.y = y;\n};\nBI.Vector.prototype = {\n    constructor: BI.Vector,\n    cross: function (v) {\n        return (this.x * v.y - this.y * v.x);\n    },\n    length: function (v) {\n        return (Math.sqrt(this.x * v.x + this.y * v.y));\n    }\n};\nBI.Region = function (x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n};\nBI.Region.prototype = {\n    constructor: BI.Region,\n    // 判断两个区域是否相交，若相交，则要么顶点互相包含，要么矩形边界（或对角线）相交\n    isIntersects: function (obj) {\n        if (this.isPointInside(obj.x, obj.y) ||\n            this.isPointInside(obj.x + obj.w, obj.y) ||\n            this.isPointInside(obj.x, obj.y + obj.h) ||\n            this.isPointInside(obj.x + obj.w, obj.y + obj.h)) {\n            return true;\n        } else if (obj.isPointInside(this.x, this.y) ||\n            obj.isPointInside(this.x + this.w, this.y) ||\n            obj.isPointInside(this.x, this.y + this.h) ||\n            obj.isPointInside(this.x + this.w, this.y + this.h)) {\n            return true;\n        } else if (obj.x != null && obj.y != null)// 判断矩形对角线相交 |v1 X v2||v1 X v3| < 0\n        {\n            var vector1 = new BI.Vector(this.w, this.h);// 矩形对角线向量\n            var vector2 = new BI.Vector(obj.x - this.x, obj.y - this.y);\n            var vector3 = new BI.Vector(vector2.x + obj.w, vector2.y + obj.h);\n            if ((vector1.cross(vector2) * vector1.cross(vector3)) < 0) {\n                return true;\n            }\n        }\n        return false;\n    },\n    // 判断一个点是否在这个区域内部\n    isPointInside: function (x, y) {\n        if (this.x == null || this.y == null) {\n            return false;\n        }\n        if (x >= this.x && x <= this.x + this.w && y >= this.y && y <= this.y + this.h) {\n            return true;\n        }\n        return false;\n    },\n    // 返回区域的重心，因为是矩形所以返回中点\n    getPosition: function () {\n        var pos = [];\n        pos.push(this.x + this.w / 2);\n        pos.push(this.y + this.h / 2);\n        return pos;\n    }\n};","(function () {\n    var _global;\n    if (typeof window !== \"undefined\") {\n        _global = window;\n    } else if (typeof global !== \"undefined\") {\n        _global = global;\n    } else if (typeof self !== \"undefined\") {\n        _global = self;\n    } else {\n        _global = this;\n    }\n    if (!_global.BI) {\n        _global.BI = {};\n    }\n\n    function isEmpty (value) {\n        // 判断是否为空值\n        var result = value === \"\" || value === null || value === undefined;\n        return result;\n    }\n\n    // 判断是否是无效的日期\n    function isInvalidDate (date) {\n        return date == \"Invalid Date\" || date == \"NaN\";\n    }\n\n    /**\n     * CHART-1400\n     * 使用数值计算的方式来获取任意数值的科学技术表示值。\n     * 科学计数格式\n     */\n    function _eFormat (text, fmt) {\n        text = +text;\n\n        return eFormat(text, fmt);\n\n        /**\n         * 科学计数格式具体计算过程\n         * @param num\n         * @param format {String}有两种形式，\n         *      1、\"0.00E00\"这样的字符串表示正常的科学计数表示，只不过规定了数值精确到百分位，\n         *         而数量级的绝对值如果是10以下的时候在前面补零。\n         *      2、 \"##0.0E0\"这样的字符串则规定用科学计数法表示之后的数值的整数部分是三位，精确到十分位，\n         *         数量级没有规定，因为没见过实数里有用科学计数法表示之后E的后面会小于一位的情况（0无所谓）。\n         * @returns {*}\n         */\n        function eFormat (num, format) {\n            var neg = num < 0 ? (num *= -1, \"-\") : \"\",\n                magnitudeNeg = \"\";\n\n            var funcName = num > 0 && num < 1 ? \"floor\" : \"ceil\";  // -0.9999->-1\n            // 数量级\n            var magnitude = Math[funcName](Math.log(num) / Math.log(10));\n\n            if (!isFinite(magnitude)) {\n                return format.replace(/#/ig, \"\").replace(/\\.e/ig, \"E\");\n            }\n\n            num = num / Math.pow(10, magnitude);\n\n            // 让num转化成[1, 10)区间上的数\n            if (num > 0 && num < 1) {\n                num *= 10;\n                magnitude -= 1;\n            }\n\n            // 计算出format中需要显示的整数部分的位数，然后更新这个数值，也更新数量级\n            var integerLen = getInteger(magnitude, format);\n            integerLen > 1 && (magnitude -= integerLen - 1, num *= Math.pow(10, integerLen - 1));\n\n            magnitude < 0 && (magnitudeNeg = \"-\", magnitude *= -1);\n\n            // 获取科学计数法精确到的位数\n            var precision = getPrecision(format);\n            // 判断num经过四舍五入之后是否有进位\n            var isValueCarry = isValueCarried(num);\n\n            num *= Math.pow(10, precision);\n            num = Math.round(num);\n            // 如果出现进位的情况，将num除以10\n            isValueCarry && (num /= 10, magnitude += magnitudeNeg === \"-\" ? -1 : 1);\n            num /= Math.pow(10, precision);\n\n            // 小数部分保留precision位\n            num = num.toFixed(precision);\n            // 格式化指数的部分\n            magnitude = formatExponential(format, magnitude, magnitudeNeg);\n\n            return neg + num + \"E\" + magnitude;\n        }\n\n        // 获取format格式规定的数量级的形式\n        function formatExponential (format, num, magnitudeNeg) {\n            num += \"\";\n            if (!/e/ig.test(format)) {\n                return num;\n            }\n            format = format.split(/e/ig)[1];\n\n            while (num.length < format.length) {\n                num = \"0\" + num;\n            }\n\n            // 如果magnitudeNeg是一个\"-\"，而且num正好全是0，那么就别显示负号了\n            var isAllZero = true;\n            for (var i = 0, len = num.length; i < len; i++) {\n                if (!isAllZero) {\n                    continue;\n                }\n                isAllZero = num.charAt(i) === \"0\";\n            }\n            magnitudeNeg = isAllZero ? \"\" : magnitudeNeg;\n\n            return magnitudeNeg + num;\n        }\n\n        // 获取format规定的科学计数法精确到的位数\n        function getPrecision (format) {\n            if (!/e/ig.test(format)) {\n                return 0;\n            }\n            var arr = format.split(/e/ig)[0].split(\".\");\n\n            return arr.length > 1 ? arr[1].length : 0;\n        }\n\n        // 获取数值科学计数法表示之后整数的位数\n        // 这边我们还需要考虑#和0的问题\n        function getInteger (magnitude, format) {\n            if (!/e/ig.test(format)) {\n                return 0;\n            }\n            // return format.split(/e/ig)[0].split(\".\")[0].length;\n\n            var formatLeft = format.split(/e/ig)[0].split(\".\")[0], i, f, len = formatLeft.length;\n            var valueLeftLen = 0;\n\n            for (i = 0; i < len; i++) {\n                f = formatLeft.charAt(i);\n                // \"#\"所在的位置到末尾长度小于等于值的整数部分长度，那么这个#才可以占位\n                if (f == 0 || (f == \"#\" && (len - i <= magnitude + 1))) {\n                    valueLeftLen++;\n                }\n            }\n\n            return valueLeftLen;\n        }\n\n        // 判断num通过round函数之后是否有进位\n        function isValueCarried (num) {\n            var roundNum = Math.round(num);\n            num = (num + \"\").split(\".\")[0];\n            roundNum = (roundNum + \"\").split(\".\")[0];\n            return num.length !== roundNum.length;\n        }\n    }\n\n    //'#.##'之类的格式处理 1.324e-18 这种的科学数字\n    function _dealNumberPrecision (text, fright) {\n        if (/[eE]/.test(text)) {\n            var precision = 0, i = 0, ch;\n\n            if (/[%‰]$/.test(fright)) {\n                precision = /[%]$/.test(fright) ? 2 : 3;\n            }\n\n            for (var len = fright.length; i < len; i++) {\n                if ((ch = fright.charAt(i)) == \"0\" || ch == \"#\") {\n                    precision++;\n                }\n            }\n            return Number(text).toFixed(precision);\n        }\n\n        return text;\n    }\n\n    /**\n     * 数字格式\n     */\n    function _numberFormat (text, format) {\n        var text = text + \"\";\n\n        //在调用数字格式的时候如果text里没有任何数字则不处理\n        if (!(/[0-9]/.test(text)) || !format) {\n            return text;\n        }\n\n        // 数字格式，区分正负数\n        var numMod = format.indexOf(\";\");\n        if (numMod > -1) {\n            if (text >= 0) {\n                return _numberFormat(text + \"\", format.substring(0, numMod));\n            }\n            return _numberFormat((-text) + \"\", format.substr(numMod + 1));\n\n        } else {\n            // 兼容格式处理负数的情况(copy:fr-jquery.format.js)\n            if (+text < 0 && format.charAt(0) !== \"-\") {\n                return _numberFormat((-text) + \"\", \"-\" + format);\n            }\n        }\n\n        var fp = format.split(\".\"), fleft = fp[0] || \"\", fright = fp[1] || \"\";\n        text = _dealNumberPrecision(text, fright);\n        var tp = text.split(\".\"), tleft = tp[0] || \"\", tright = tp[1] || \"\";\n\n        // 百分比,千分比的小数点移位处理\n        if (/[%‰]$/.test(format)) {\n            var paddingZero = /[%]$/.test(format) ? \"00\" : \"000\";\n            tright += paddingZero;\n            tleft += tright.substr(0, paddingZero.length);\n            tleft = tleft.replace(/^0+/gi, \"\");\n            tright = tright.substr(paddingZero.length).replace(/0+$/gi, \"\");\n        }\n        var right = _dealWithRight(tright, fright);\n        if (right.leftPlus) {\n            // 小数点后有进位\n            tleft = parseInt(tleft) + 1 + \"\";\n\n            tleft = isNaN(tleft) ? \"1\" : tleft;\n        }\n        right = right.num;\n        var left = _dealWithLeft(tleft, fleft);\n        if (!(/[0-9]/.test(left))) {\n            left = left + \"0\";\n        }\n        if (!(/[0-9]/.test(right))) {\n            return left + right;\n        } else {\n            return left + \".\" + right;\n        }\n    }\n\n    /**\n     * 处理小数点右边小数部分\n     * @param tright 右边内容\n     * @param fright 右边格式\n     * @returns {JSON} 返回处理结果和整数部分是否需要进位\n     * @private\n     */\n    function _dealWithRight (tright, fright) {\n        var right = \"\", j = 0, i = 0;\n        for (var len = fright.length; i < len; i++) {\n            var ch = fright.charAt(i);\n            var c = tright.charAt(j);\n            switch (ch) {\n                case \"0\":\n                    if (isEmpty(c)) {\n                        c = \"0\";\n                    }\n                    right += c;\n                    j++;\n                    break;\n                case \"#\":\n                    right += c;\n                    j++;\n                    break;\n                default :\n                    right += ch;\n                    break;\n            }\n        }\n        var rll = tright.substr(j);\n        var result = {};\n        if (!isEmpty(rll) && rll.charAt(0) > 4) {\n            // 有多余字符，需要四舍五入\n            result.leftPlus = true;\n            var numReg = right.match(/^[0-9]+/);\n            if (numReg) {\n                var num = numReg[0];\n                var orilen = num.length;\n                var newnum = parseInt(num) + 1 + \"\";\n                // 进位到整数部分\n                if (newnum.length > orilen) {\n                    newnum = newnum.substr(1);\n                } else {\n                    newnum = BI.leftPad(newnum, orilen, \"0\");\n                    result.leftPlus = false;\n                }\n                right = right.replace(/^[0-9]+/, newnum);\n            }\n        }\n        result.num = right;\n        return result;\n    }\n\n    /**\n     * 处理小数点左边整数部分\n     * @param tleft 左边内容\n     * @param fleft 左边格式\n     * @returns {string} 返回处理结果\n     * @private\n     */\n    function _dealWithLeft (tleft, fleft) {\n        var left = \"\";\n        var j = tleft.length - 1;\n        var combo = -1, last = -1;\n        var i = fleft.length - 1;\n        for (; i >= 0; i--) {\n            var ch = fleft.charAt(i);\n            var c = tleft.charAt(j);\n            switch (ch) {\n                case \"0\":\n                    if (isEmpty(c)) {\n                        c = \"0\";\n                    }\n                    last = -1;\n                    left = c + left;\n                    j--;\n                    break;\n                case \"#\":\n                    last = i;\n                    left = c + left;\n                    j--;\n                    break;\n                case \",\":\n                    if (!isEmpty(c)) {\n                        // 计算一个,分隔区间的长度\n                        var com = fleft.match(/,[#0]+/);\n                        if (com) {\n                            combo = com[0].length - 1;\n                        }\n                        left = \",\" + left;\n                    }\n                    break;\n                default :\n                    left = ch + left;\n                    break;\n            }\n        }\n        if (last > -1) {\n            // 处理剩余字符\n            var tll = tleft.substr(0, j + 1);\n            left = left.substr(0, last) + tll + left.substr(last);\n        }\n        if (combo > 0) {\n            // 处理,分隔区间\n            var res = left.match(/[0-9]+,/);\n            if (res) {\n                res = res[0];\n                var newstr = \"\", n = res.length - 1 - combo;\n                for (; n >= 0; n = n - combo) {\n                    newstr = res.substr(n, combo) + \",\" + newstr;\n                }\n                var lres = res.substr(0, n + combo);\n                if (!isEmpty(lres)) {\n                    newstr = lres + \",\" + newstr;\n                }\n            }\n            left = left.replace(/[0-9]+,/, newstr);\n        }\n        return left;\n    }\n\n\n    BI.cjkEncode = function (text) {\n        // alex:如果非字符串,返回其本身(cjkEncode(234) 返回 \"\"是不对的)\n        if (typeof text !== \"string\") {\n            return text;\n        }\n\n        var newText = \"\";\n        for (var i = 0; i < text.length; i++) {\n            var code = text.charCodeAt(i);\n            if (code >= 128 || code === 91 || code === 93) {// 91 is \"[\", 93 is \"]\".\n                newText += \"[\" + code.toString(16) + \"]\";\n            } else {\n                newText += text.charAt(i);\n            }\n        }\n\n        return newText;\n    };\n\n    /**\n     * 将cjkEncode处理过的字符串转化为原始字符串\n     *\n     * @static\n     * @param text 需要做解码的字符串\n     * @return {String} 解码后的字符串\n     */\n    BI.cjkDecode = function (text) {\n        if (text == null) {\n            return \"\";\n        }\n        // 查找没有 \"[\", 直接返回.  kunsnat:数字的时候, 不支持indexOf方法, 也是直接返回.\n        if (!isNaN(text) || text.indexOf(\"[\") == -1) {\n            return text;\n        }\n\n        var newText = \"\";\n        for (var i = 0; i < text.length; i++) {\n            var ch = text.charAt(i);\n            if (ch == \"[\") {\n                var rightIdx = text.indexOf(\"]\", i + 1);\n                if (rightIdx > i + 1) {\n                    var subText = text.substring(i + 1, rightIdx);\n                    // james：主要是考虑[CDATA[]]这样的值的出现\n                    if (subText.length > 0) {\n                        ch = String.fromCharCode(eval(\"0x\" + subText));\n                    }\n\n                    i = rightIdx;\n                }\n            }\n\n            newText += ch;\n        }\n\n        return newText;\n    };\n\n    // replace the html special tags\n    var SPECIAL_TAGS = {\n        \"&\": \"&amp;\",\n        \"\\\"\": \"&quot;\",\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\"\n    };\n    BI.htmlEncode = function (text) {\n        return BI.isNull(text) ? \"\" : BI.replaceAll(text + \"\", \"&|\\\"|<|>\", function (v) {\n            return SPECIAL_TAGS[v] ? SPECIAL_TAGS[v] : \"&nbsp;\";\n        });\n    };\n    // html decode\n    BI.htmlDecode = function (text) {\n        return BI.isNull(text) ? \"\" : BI.replaceAll(text + \"\", \"&amp;|&quot;|&lt;|&gt;|&nbsp;\", function (v) {\n            switch (v) {\n                case \"&amp;\":\n                    return \"&\";\n                case \"&quot;\":\n                    return \"\\\"\";\n                case \"&lt;\":\n                    return \"<\";\n                case \"&gt;\":\n                    return \">\";\n                case \"&nbsp;\":\n                default:\n                    return \" \";\n            }\n        });\n    };\n\n    BI.cjkEncodeDO = function (o) {\n        if (BI.isPlainObject(o)) {\n            var result = {};\n            _.each(o, function (v, k) {\n                if (!(typeof v === \"string\")) {\n                    v = BI.jsonEncode(v);\n                }\n                // wei:bug 43338，如果key是中文，cjkencode后o的长度就加了1，ie9以下版本死循环，所以新建对象result。\n                k = BI.cjkEncode(k);\n                result[k] = BI.cjkEncode(v);\n            });\n            return result;\n        }\n        return o;\n    };\n\n    BI.jsonEncode = function (o) {\n        // james:这个Encode是抄的EXT的\n        var useHasOwn = !!{}.hasOwnProperty;\n\n        // crashes Safari in some instances\n        // var validRE = /^(\"(\\\\.|[^\"\\\\\\n\\r])*?\"|[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t])+?$/;\n\n        var m = {\n            \"\\b\": \"\\\\b\",\n            \"\\t\": \"\\\\t\",\n            \"\\n\": \"\\\\n\",\n            \"\\f\": \"\\\\f\",\n            \"\\r\": \"\\\\r\",\n            \"\\\"\": \"\\\\\\\"\",\n            \"\\\\\": \"\\\\\\\\\"\n        };\n\n        var encodeString = function (s) {\n            if (/[\"\\\\\\x00-\\x1f]/.test(s)) {\n                return \"\\\"\" + s.replace(/([\\x00-\\x1f\\\\\"])/g, function (a, b) {\n                    var c = m[b];\n                    if (c) {\n                        return c;\n                    }\n                    c = b.charCodeAt();\n                    return \"\\\\u00\" +\n                        Math.floor(c / 16).toString(16) +\n                        (c % 16).toString(16);\n                }) + \"\\\"\";\n            }\n            return \"\\\"\" + s + \"\\\"\";\n        };\n\n        var encodeArray = function (o) {\n            var a = [\"[\"], b, i, l = o.length, v;\n            for (i = 0; i < l; i += 1) {\n                v = o[i];\n                switch (typeof v) {\n                    case \"undefined\":\n                    case \"function\":\n                    case \"unknown\":\n                        break;\n                    default:\n                        if (b) {\n                            a.push(\",\");\n                        }\n                        a.push(v === null ? \"null\" : BI.jsonEncode(v));\n                        b = true;\n                }\n            }\n            a.push(\"]\");\n            return a.join(\"\");\n        };\n\n        if (typeof o === \"undefined\" || o === null) {\n            return \"null\";\n        } else if (BI.isArray(o)) {\n            return encodeArray(o);\n        } else if (o instanceof Date) {\n            /*\n             * alex:原来只是把年月日时分秒简单地拼成一个String,无法decode\n             * 现在这么处理就可以decode了,但是JS.jsonDecode和Java.JSONObject也要跟着改一下\n             */\n            return BI.jsonEncode({\n                __time__: o.getTime()\n            });\n        } else if (typeof o === \"string\") {\n            return encodeString(o);\n        } else if (typeof o === \"number\") {\n            return isFinite(o) ? String(o) : \"null\";\n        } else if (typeof o === \"boolean\") {\n            return String(o);\n        } else if (BI.isFunction(o)) {\n            return String(o);\n        }\n        var a = [\"{\"], b, i, v;\n        for (i in o) {\n            if (!useHasOwn || o.hasOwnProperty(i)) {\n                v = o[i];\n                switch (typeof v) {\n                    case \"undefined\":\n                    case \"unknown\":\n                        break;\n                    default:\n                        if (b) {\n                            a.push(\",\");\n                        }\n                        a.push(BI.jsonEncode(i), \":\",\n                            v === null ? \"null\" : BI.jsonEncode(v));\n                        b = true;\n                }\n            }\n        }\n        a.push(\"}\");\n        return a.join(\"\");\n\n    };\n\n    BI.jsonDecode = function (text) {\n\n        try {\n            // 注意0啊\n            // var jo = $.parseJSON(text) || {};\n            var jo = BI.$ ? BI.$.parseJSON(text) : _global.JSON.parse(text);\n            if (jo == null) {\n                jo = {};\n            }\n        } catch (e) {\n            /*\n             * richie:浏览器只支持标准的JSON字符串转换，而jQuery会默认调用浏览器的window.JSON.parse()函数进行解析\n             * 比如：var str = \"{'a':'b'}\",这种形式的字符串转换为JSON就会抛异常\n             */\n            try {\n                jo = new Function(\"return \" + text)() || {};\n            } catch (e) {\n                // do nothing\n            }\n            if (jo == null) {\n                jo = [];\n            }\n        }\n        if (!_hasDateInJson(text)) {\n            return jo;\n        }\n\n        function _hasDateInJson (json) {\n            if (!json || typeof json !== \"string\") {\n                return false;\n            }\n            return json.indexOf(\"__time__\") != -1;\n        }\n\n        return (function (o) {\n            if (typeof o === \"string\") {\n                return o;\n            }\n            if (o && o.__time__ != null) {\n                return new Date(o.__time__);\n            }\n            for (var a in o) {\n                if (o[a] == o || typeof o[a] === \"object\" || _.isFunction(o[a])) {\n                    break;\n                }\n                o[a] = arguments.callee(o[a]);\n            }\n\n            return o;\n        })(jo);\n    };\n\n    /**\n     * 获取编码后的url\n     * @param urlTemplate url模板\n     * @param param 参数\n     * @returns {*|String}\n     * @example\n     * BI.getEncodeURL(\"design/{tableName}/{fieldName}\",{tableName: \"A\", fieldName: \"a\"}) //  design/A/a\n     */\n    BI.getEncodeURL = function (urlTemplate, param) {\n        return BI.replaceAll(urlTemplate, \"\\\\{(.*?)\\\\}\", function (ori, str) {\n            return BI.encodeURIComponent(BI.isObject(param) ? param[str] : param);\n        });\n    };\n\n    BI.encodeURIComponent = function (url) {\n        BI.specialCharsMap = BI.specialCharsMap || {};\n        url = url || \"\";\n        url = BI.replaceAll(url + \"\", BI.keys(BI.specialCharsMap || []).join(\"|\"), function (str) {\n            switch (str) {\n                case \"\\\\\":\n                    return BI.specialCharsMap[\"\\\\\\\\\"] || str;\n                default:\n                    return BI.specialCharsMap[str] || str;\n            }\n        });\n        return _global.encodeURIComponent(url);\n    };\n\n    BI.decodeURIComponent = function (url) {\n        var reserveSpecialCharsMap = {};\n        BI.each(BI.specialCharsMap, function (initialChar, encodeChar) {\n            reserveSpecialCharsMap[encodeChar] = initialChar === \"\\\\\\\\\" ? \"\\\\\" : initialChar;\n        });\n        url = url || \"\";\n        url = BI.replaceAll(url + \"\", BI.keys(reserveSpecialCharsMap || []).join(\"|\"), function (str) {\n            return reserveSpecialCharsMap[str] || str;\n        });\n        return _global.decodeURIComponent(url);\n    };\n\n    BI.contentFormat = function (cv, fmt) {\n        if (isEmpty(cv)) {\n            // 原值为空，返回空字符\n            return \"\";\n        }\n        var text = cv.toString();\n        if (isEmpty(fmt)) {\n            // 格式为空，返回原字符\n            return text;\n        }\n        if (fmt.match(/^T/)) {\n            // T - 文本格式\n            return text;\n        } else if (fmt.match(/^D/)) {\n            // D - 日期(时间)格式\n            if (!(cv instanceof Date)) {\n                if (typeof cv === \"number\") {\n                    // 毫秒数类型\n                    cv = new Date(cv);\n                } else {\n                    //字符串类型转化为date类型\n                    cv = new Date(Date.parse((\"\" + cv).replace(/-|\\./g, \"/\")));\n                }\n            }\n            if (!isInvalidDate(cv) && !BI.isNull(cv)) {\n                var needTrim = fmt.match(/^DT/);\n                text = BI.date2Str(cv, fmt.substring(needTrim ? 2 : 1));\n            }\n        } else if (fmt.match(/E/)) {\n            // 科学计数格式\n            text = _eFormat(text, fmt);\n        } else {\n            // 数字格式\n            text = _numberFormat(text, fmt);\n        }\n        // ¤ - 货币格式\n        text = text.replace(/¤/g, \"￥\");\n        return text;\n    };\n\n    /**\n     * 将Java提供的日期格式字符串装换为JS识别的日期格式字符串\n     * @class FR.parseFmt\n     * @param fmt 日期格式\n     * @returns {String}\n     */\n    BI.parseFmt = function (fmt) {\n        if (!fmt) {\n            return \"\";\n        }\n        //日期\n        fmt = String(fmt)\n        //年\n            .replace(/y{4,}/g, \"%Y\")//yyyy的时候替换为Y\n            .replace(/y{2}/g, \"%y\")//yy的时候替换为y\n            //月\n            .replace(/M{4,}/g, \"%b\")//MMMM的时候替换为b，八\n            .replace(/M{3}/g, \"%B\")//MMM的时候替换为M，八月\n            .replace(/M{2}/g, \"%X\")//MM的时候替换为X，08\n            .replace(/M{1}/g, \"%x\")//M的时候替换为x，8\n            .replace(/a{1}/g, \"%p\");\n        //天\n        if (new RegExp(\"d{2,}\", \"g\").test(fmt)) {\n            fmt = fmt.replace(/d{2,}/g, \"%d\");//dd的时候替换为d\n        } else {\n            fmt = fmt.replace(/d{1}/g, \"%e\");//d的时候替换为j\n        }\n        //时\n        if (new RegExp(\"h{2,}\", \"g\").test(fmt)) {//12小时制\n            fmt = fmt.replace(/h{2,}/g, \"%I\");\n        } else {\n            fmt = fmt.replace(/h{1}/g, \"%I\");\n        }\n        if (new RegExp(\"H{2,}\", \"g\").test(fmt)) {//24小时制\n            fmt = fmt.replace(/H{2,}/g, \"%H\");\n        } else {\n            fmt = fmt.replace(/H{1}/g, \"%H\");\n        }\n        fmt = fmt.replace(/m{2,}/g, \"%M\")//分\n        //秒\n            .replace(/s{2,}/g, \"%S\");\n\n        return fmt;\n    };\n\n    /**\n     * 把字符串按照对应的格式转化成日期对象\n     *\n     *      @example\n     *      var result = BI.str2Date('2013-12-12', 'yyyy-MM-dd');//Thu Dec 12 2013 00:00:00 GMT+0800\n     *\n     * @class BI.str2Date\n     * @param str 字符串\n     * @param format 日期格式\n     * @returns {*}\n     */\n    BI.str2Date = function (str, format) {\n        if (typeof str != \"string\" || typeof format != \"string\") {\n            return null;\n        }\n        var fmt = BI.parseFmt(format);\n        return BI.parseDateTime(str, fmt);\n    };\n\n    /**\n     * 把日期对象按照指定格式转化成字符串\n     *\n     *      @example\n     *      var date = new Date('Thu Dec 12 2013 00:00:00 GMT+0800');\n     *      var result = BI.date2Str(date, 'yyyy-MM-dd');//2013-12-12\n     *\n     * @class BI.date2Str\n     * @param date 日期\n     * @param format 日期格式\n     * @returns {String}\n     */\n    BI.date2Str = function (date, format) {\n        if (!date) {\n            return \"\";\n        }\n        // O(len(format))\n        var len = format.length, result = \"\";\n        if (len > 0) {\n            var flagch = format.charAt(0), start = 0, str = flagch;\n            for (var i = 1; i < len; i++) {\n                var ch = format.charAt(i);\n                if (flagch !== ch) {\n                    result += compileJFmt({\n                        char: flagch,\n                        str: str,\n                        len: i - start\n                    }, date);\n                    flagch = ch;\n                    start = i;\n                    str = flagch;\n                } else {\n                    str += ch;\n                }\n            }\n            result += compileJFmt({\n                char: flagch,\n                str: str,\n                len: len - start\n            }, date);\n        }\n        return result;\n\n        function compileJFmt (jfmt, date) {\n            var str = jfmt.str, len = jfmt.len, ch = jfmt[\"char\"];\n            switch (ch) {\n                case \"E\": // 星期\n                    str = BI.Date._DN[date.getDay()];\n                    break;\n                case \"y\": // 年\n                    if (len <= 3) {\n                        str = (date.getFullYear() + \"\").slice(2, 4);\n                    } else {\n                        str = date.getFullYear();\n                    }\n                    break;\n                case \"M\": // 月\n                    if (len > 2) {\n                        str = BI.Date._MN[date.getMonth()];\n                    } else if (len < 2) {\n                        str = date.getMonth() + 1;\n                    } else {\n                        str = BI.leftPad(date.getMonth() + 1 + \"\", 2, \"0\");\n                    }\n                    break;\n                case \"d\": // 日\n                    if (len > 1) {\n                        str = BI.leftPad(date.getDate() + \"\", 2, \"0\");\n                    } else {\n                        str = date.getDate();\n                    }\n                    break;\n                case \"h\": // 时(12)\n                    var hour = date.getHours() % 12;\n                    if (hour === 0) {\n                        hour = 12;\n                    }\n                    if (len > 1) {\n                        str = BI.leftPad(hour + \"\", 2, \"0\");\n                    } else {\n                        str = hour;\n                    }\n                    break;\n                case \"H\": // 时(24)\n                    if (len > 1) {\n                        str = BI.leftPad(date.getHours() + \"\", 2, \"0\");\n                    } else {\n                        str = date.getHours();\n                    }\n                    break;\n                case \"m\":\n                    if (len > 1) {\n                        str = BI.leftPad(date.getMinutes() + \"\", 2, \"0\");\n                    } else {\n                        str = date.getMinutes();\n                    }\n                    break;\n                case \"s\":\n                    if (len > 1) {\n                        str = BI.leftPad(date.getSeconds() + \"\", 2, \"0\");\n                    } else {\n                        str = date.getSeconds();\n                    }\n                    break;\n                case \"a\":\n                    str = date.getHours() < 12 ? \"am\" : \"pm\";\n                    break;\n                case \"z\":\n                    str = BI.getTimezone(date);\n                    break;\n                default:\n                    str = jfmt.str;\n                    break;\n            }\n            return str;\n        }\n    };\n\n    BI.object2Number = function (value) {\n        if (value == null) {\n            return 0;\n        }\n        if (typeof value === \"number\") {\n            return value;\n        }\n        var str = value + \"\";\n        if (str.indexOf(\".\") === -1) {\n            return parseInt(str);\n        }\n        return parseFloat(str);\n    };\n\n    BI.object2Date = function (obj) {\n        if (obj == null) {\n            return new Date();\n        }\n        if (obj instanceof Date) {\n            return obj;\n        } else if (typeof obj === \"number\") {\n            return new Date(obj);\n        }\n        var str = obj + \"\";\n        str = str.replace(/-/g, \"/\");\n        var dt = new Date(str);\n        if (!isInvalidDate(dt)) {\n            return dt;\n        }\n\n        return new Date();\n\n    };\n\n    BI.object2Time = function (obj) {\n        if (obj == null) {\n            return new Date();\n        }\n        if (obj instanceof Date) {\n            return obj;\n        }\n        var str = obj + \"\";\n        str = str.replace(/-/g, \"/\");\n        var dt = new Date(str);\n        if (!isInvalidDate(dt)) {\n            return dt;\n        }\n        if (str.indexOf(\"/\") === -1 && str.indexOf(\":\") !== -1) {\n            dt = new Date(\"1970/01/01 \" + str);\n            if (!isInvalidDate(dt)) {\n                return dt;\n            }\n        }\n        dt = BI.parseDateTime(str, \"HH:mm:ss\");\n        if (!isInvalidDate(dt)) {\n            return dt;\n        }\n        return new Date();\n\n    };\n})();\n","/**\n * 对数组对象的扩展\n * @class Array\n */\n_.extend(BI, {\n\n    pushArray: function (sArray, array) {\n        for (var i = 0; i < array.length; i++) {\n            sArray.push(array[i]);\n        }\n    },\n    pushDistinct: function (sArray, obj) {\n        if (!BI.contains(sArray, obj)) {\n            sArray.push(obj);\n        }\n    },\n    pushDistinctArray: function (sArray, array) {\n        for (var i = 0, len = array.length; i < len; i++) {\n            BI.pushDistinct(sArray, array[i]);\n        }\n    }\n});\n","/** Constants used for time computations */\nBI.Date = BI.Date || {};\nBI.Date.SECOND = 1000;\nBI.Date.MINUTE = 60 * BI.Date.SECOND;\nBI.Date.HOUR = 60 * BI.Date.MINUTE;\nBI.Date.DAY = 24 * BI.Date.HOUR;\nBI.Date.WEEK = 7 * BI.Date.DAY;\n\n_.extend(BI, {\n    /**\n     * 获取时区\n     * @returns {String}\n     */\n    getTimezone: function (date) {\n        return date.toString().replace(/^.* (?:\\((.*)\\)|([A-Z]{1,4})(?:[\\-+][0-9]{4})?(?: -?\\d+)?)$/, \"$1$2\").replace(/[^A-Z]/g, \"\");\n    },\n\n    /** Returns the number of days in the current month */\n    getMonthDays: function (date, month) {\n        var year = date.getFullYear();\n        if (typeof month === \"undefined\") {\n            month = date.getMonth();\n        }\n        if (((0 == (year % 4)) && ((0 != (year % 100)) || (0 == (year % 400)))) && month == 1) {\n            return 29;\n        }\n        return BI.Date._MD[month];\n\n    },\n\n    /**\n     * 获取每月的最后一天\n     * @returns {Date}\n     */\n    getLastDateOfMonth: function (date) {\n        return BI.getDate(date.getFullYear(), date.getMonth(), BI.getMonthDays(date));\n    },\n\n    /** Returns the number of day in the year. */\n    getDayOfYear: function (date) {\n        var now = BI.getDate(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);\n        var then = BI.getDate(date.getFullYear(), 0, 0, 0, 0, 0);\n        var time = now - then;\n        return Math.floor(time / BI.Date.DAY);\n    },\n\n    /** Returns the number of the week in year, as defined in ISO 8601. */\n    getWeekNumber: function (date) {\n        var d = BI.getDate(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);\n        var week = d.getDay();\n        var startOfWeek = BI.StartOfWeek % 7;\n        var middleDay = (startOfWeek + 3) % 7;\n        middleDay = middleDay || 7;\n        // 偏移到周周首之前需要多少天\n        var offsetWeekStartCount = week < startOfWeek ? (7 + week - startOfWeek) : (week - startOfWeek);\n        var offsetWeekMiddleCount = middleDay < startOfWeek ? (7 + middleDay - startOfWeek) : (middleDay - startOfWeek);\n        d.setDate(d.getDate() - offsetWeekStartCount + offsetWeekMiddleCount);\n        var ms = d.valueOf();\n        d.setMonth(0);\n        d.setDate(1);\n        return Math.floor((ms - d.valueOf()) / (7 * 864e5)) + 1;\n    },\n\n    getQuarter: function (date) {\n        return Math.floor(date.getMonth() / 3) + 1;\n    },\n\n    // 离当前时间多少天的时间\n    getOffsetDate: function (date, offset) {\n        return BI.getDate(BI.getTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()) + offset * 864e5);\n    },\n\n    getOffsetQuarter: function (date, n) {\n        var dt = BI.getDate(BI.getTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));\n        var day = dt.getDate();\n        var monthDay = BI.getMonthDays(BI.getDate(dt.getFullYear(), dt.getMonth() + BI.parseInt(n) * 3, 1));\n        if (day > monthDay) {\n            day = monthDay;\n        }\n        dt.setDate(day);\n        dt.setMonth(dt.getMonth() + parseInt(n) * 3);\n        return dt;\n    },\n\n    // 得到本季度的起始月份\n    getQuarterStartMonth: function (date) {\n        var quarterStartMonth = 0;\n        var nowMonth = date.getMonth();\n        if (nowMonth < 3) {\n            quarterStartMonth = 0;\n        }\n        if (2 < nowMonth && nowMonth < 6) {\n            quarterStartMonth = 3;\n        }\n        if (5 < nowMonth && nowMonth < 9) {\n            quarterStartMonth = 6;\n        }\n        if (nowMonth > 8) {\n            quarterStartMonth = 9;\n        }\n        return quarterStartMonth;\n    },\n    // 获得本季度的起始日期\n    getQuarterStartDate: function (date) {\n        return BI.getDate(date.getFullYear(), BI.getQuarterStartMonth(date), 1);\n    },\n    // 得到本季度的结束日期\n    getQuarterEndDate: function (date) {\n        var quarterEndMonth = BI.getQuarterStartMonth(date) + 2;\n        return BI.getDate(date.getFullYear(), quarterEndMonth, BI.getMonthDays(date, quarterEndMonth));\n    },\n\n    // 指定日期n个月之前或之后的日期\n    getOffsetMonth: function (date, n) {\n        var dt = BI.getDate(BI.getTime(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));\n        var day = dt.getDate();\n        var monthDay = BI.getMonthDays(BI.getDate(dt.getFullYear(), dt.getMonth() + parseInt(n), 1));\n        if (day > monthDay) {\n            day = monthDay;\n        }\n        dt.setDate(day);\n        dt.setMonth(dt.getMonth() + parseInt(n));\n        return dt;\n    },\n\n    // 获得本周的起始日期\n    getWeekStartDate: function (date) {\n        var w = date.getDay();\n        var startOfWeek = BI.StartOfWeek % 7;\n        return BI.getOffsetDate(date, BI.Date._OFFSET[w < startOfWeek ? (7 + w - startOfWeek) : (w - startOfWeek)]);\n    },\n    // 得到本周的结束日期\n    getWeekEndDate: function (date) {\n        var w = date.getDay();\n        var startOfWeek = BI.StartOfWeek % 7;\n        return BI.getOffsetDate(date, BI.Date._OFFSET[w < startOfWeek ? (7 + w - startOfWeek) : (w - startOfWeek)] + 6);\n    },\n\n    // 格式化打印日期\n    print: function (date, str) {\n        var m = date.getMonth();\n        var d = date.getDate();\n        var y = date.getFullYear();\n        var yWith4number = y + \"\";\n        while (yWith4number.length < 4) {\n            yWith4number = \"0\" + yWith4number;\n        }\n        var wn = BI.getWeekNumber(date);\n        var qr = BI.getQuarter(date);\n        var w = date.getDay();\n        var s = {};\n        var hr = date.getHours();\n        var pm = (hr >= 12);\n        var ir = (pm) ? (hr - 12) : hr;\n        var dy = BI.getDayOfYear(date);\n        if (ir == 0) {\n            ir = 12;\n        }\n        var min = date.getMinutes();\n        var sec = date.getSeconds();\n        s[\"%a\"] = BI.Date._SDN[w]; // abbreviated weekday name [FIXME: I18N]\n        s[\"%A\"] = BI.Date._DN[w]; // full weekday name\n        s[\"%b\"] = BI.Date._SMN[m]; // abbreviated month name [FIXME: I18N]\n        s[\"%B\"] = BI.Date._MN[m]; // full month name\n        // FIXME: %c : preferred date and time representation for the current locale\n        s[\"%C\"] = 1 + Math.floor(y / 100); // the century number\n        s[\"%d\"] = (d < 10) ? (\"0\" + d) : d; // the day of the month (range 01 to 31)\n        s[\"%e\"] = d; // the day of the month (range 1 to 31)\n        // FIXME: %D : american date style: %m/%d/%y\n        // FIXME: %E, %F, %G, %g, %h (man strftime)\n        s[\"%H\"] = (hr < 10) ? (\"0\" + hr) : hr; // hour, range 00 to 23 (24h format)\n        s[\"%I\"] = (ir < 10) ? (\"0\" + ir) : ir; // hour, range 01 to 12 (12h format)\n        s[\"%j\"] = (dy < 100) ? ((dy < 10) ? (\"00\" + dy) : (\"0\" + dy)) : dy; // day of the year (range 001 to 366)\n        s[\"%k\"] = hr + \"\";\t\t// hour, range 0 to 23 (24h format)\n        s[\"%l\"] = ir + \"\";\t\t// hour, range 1 to 12 (12h format)\n        s[\"%X\"] = (m < 9) ? (\"0\" + (1 + m)) : (1 + m); // month, range 01 to 12\n        s[\"%x\"] = m + 1; // month, range 1 to 12\n        s[\"%M\"] = (min < 10) ? (\"0\" + min) : min; // minute, range 00 to 59\n        s[\"%n\"] = \"\\n\";\t\t// a newline character\n        s[\"%p\"] = pm ? \"PM\" : \"AM\";\n        s[\"%P\"] = pm ? \"pm\" : \"am\";\n        // FIXME: %r : the time in am/pm notation %I:%M:%S %p\n        // FIXME: %R : the time in 24-hour notation %H:%M\n        s[\"%s\"] = Math.floor(date.getTime() / 1000);\n        s[\"%S\"] = (sec < 10) ? (\"0\" + sec) : sec; // seconds, range 00 to 59\n        s[\"%t\"] = \"\\t\";\t\t// a tab character\n        // FIXME: %T : the time in 24-hour notation (%H:%M:%S)\n        s[\"%U\"] = s[\"%W\"] = s[\"%V\"] = (wn < 10) ? (\"0\" + wn) : wn;\n        s[\"%u\"] = w + 1;\t// the day of the week (range 1 to 7, 1 = MON)\n        s[\"%w\"] = w;\t\t// the day of the week (range 0 to 6, 0 = SUN)\n        // FIXME: %x : preferred date representation for the current locale without the time\n        // FIXME: %X : preferred time representation for the current locale without the date\n        s[\"%y\"] = yWith4number.substr(2, 2); // year without the century (range 00 to 99)\n        s[\"%Y\"] = yWith4number;\t\t// year with the century\n        s[\"%%\"] = \"%\";\t\t// a literal '%' character\n        s[\"%Q\"] = qr;\n\n        var re = /%./g;\n        BI.isKhtml = BI.isKhtml || function () {\n            if(!_global.navigator) {\n                return false;\n            }\n            return /Konqueror|Safari|KHTML/i.test(navigator.userAgent);\n        };\n\n        // 包含年周的格式化，ISO8601标准周的计数会影响年\n        if ((str.indexOf(\"%Y\") !== -1 || str.indexOf(\"%y\") !== -1) && (str.indexOf(\"%W\") !== -1 || str.indexOf(\"%U\") !== -1 || str.indexOf(\"%V\") !== -1)) {\n            switch (wn) {\n                // 如果周数是1，但是当前却在12月，表示此周数为下一年的\n                case 1:\n                    if (m === 11) {\n                        s[\"%y\"] = parseInt(s[\"%y\"]) + 1;\n                        s[\"%Y\"] = parseInt(s[\"%Y\"]) + 1;\n                    }\n                    break;\n                // 如果周数是53，但是当前却在1月，表示此周数为上一年的\n                case 53:\n                    if (m === 0) {\n                        s[\"%y\"] = parseInt(s[\"%y\"]) - 1;\n                        s[\"%Y\"] = parseInt(s[\"%Y\"]) - 1;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        if (!BI.isKhtml()) {\n            return str.replace(re, function (par) {\n                return s[par] || par;\n            });\n        }\n        var a = str.match(re);\n        for (var i = 0; i < a.length; i++) {\n            var tmp = s[a[i]];\n            if (tmp) {\n                re = new RegExp(a[i], \"g\");\n                str = str.replace(re, tmp);\n            }\n        }\n\n        return str;\n    }\n});\n","/**\n * 基本的函数\n * Created by GUY on 2015/6/24.\n */\nBI.Func = {};\n_.extend(BI.Func, {\n    /**\n     * 创建唯一的名字\n     * @param array\n     * @param name\n     * @returns {*}\n     */\n    createDistinctName: function (array, name) {\n        var src = name, idx = 1;\n        name = name || \"\";\n        while (true) {\n            if (BI.every(array, function (i, item) {\n                    return BI.isKey(item) ? item !== name : item.name !== name;\n                })) {\n                break;\n            }\n            name = src + (idx++);\n        }\n        return name;\n    },\n\n    /**\n     * 获取字符宽度\n     * @param str\n     * @return {number}\n     */\n    getGBWidth: function (str) {\n        str = str + \"\";\n        str = str.replace(/[^\\x00-\\xff]/g, \"xx\");\n        return Math.ceil(str.length / 2);\n    },\n\n    /**\n     * 获取搜索结果\n     * @param items\n     * @param keyword\n     * @param param  搜索哪个属性\n     */\n    getSearchResult: function (items, keyword, param) {\n        var isArray = BI.isArray(items);\n        items = isArray ? BI.flatten(items) : items;\n        param || (param = \"text\");\n        if (!BI.isKey(keyword)) {\n            return {\n                find: BI.deepClone(items),\n                match: isArray ? [] : {}\n            };\n        }\n        var t, text, py;\n        keyword = BI.toUpperCase(keyword);\n        var matched = isArray ? [] : {}, find = isArray ? [] : {};\n        BI.each(items, function (i, item) {\n            // 兼容item为null的处理\n            if (BI.isNull(item)) {\n                return;\n            }\n            item = BI.deepClone(item);\n            t = BI.stripEL(item);\n            text = BI.find([t[param], t.text, t.value, t.name, t], function (index, val) {\n                return BI.isNotNull(val);\n            });\n\n            if (BI.isNull(text) || BI.isObject(text)) return;\n\n            py = BI.makeFirstPY(text, {\n                splitChar: \"\\u200b\"\n            });\n            text = BI.toUpperCase(text);\n            py = BI.toUpperCase(py);\n            var pidx;\n            if (text.indexOf(keyword) > -1) {\n                if (text === keyword) {\n                    isArray ? matched.push(item) : (matched[i] = item);\n                } else {\n                    isArray ? find.push(item) : (find[i] = item);\n                }\n                // BI-56386 这边两个pid / text.length是为了防止截取的首字符串不是完整的，但光这样做还不够，即时错位了，也不能说明就不符合条件\n            } else if (pidx = py.indexOf(keyword), (pidx > -1)) {\n                if (text === keyword || keyword.length === text.length) {\n                    isArray ? matched.push(item) : (matched[i] = item);\n                } else {\n                    isArray ? find.push(item) : (find[i] = item);\n                }\n            }\n        });\n        return {\n            match: matched,\n            find: find\n        };\n    }\n});\n\n_.extend(BI, {\n    beforeFunc: function (sFunc, func) {\n        var __self = sFunc;\n        return function () {\n            if (func.apply(sFunc, arguments) === false) {\n                return false;\n            }\n            return __self.apply(sFunc, arguments);\n        };\n    },\n\n    afterFunc: function (sFunc, func) {\n        var __self = sFunc;\n        return function () {\n            var ret = __self.apply(sFunc, arguments);\n            if (ret === false) {\n                return false;\n            }\n            func.apply(sFunc, arguments);\n            return ret;\n        };\n    }\n});","_.extend(BI, {\n    // 给Number类型增加一个add方法，调用起来更加方便。\n    add: function (num, arg) {\n        return accAdd(arg, num);\n\n        /**\n         ** 加法函数，用来得到精确的加法结果\n         ** 说明：javascript的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。\n         ** 调用：accAdd(arg1,arg2)\n         ** 返回值：arg1加上arg2的精确结果\n         **/\n        function accAdd (arg1, arg2) {\n            var r1, r2, m, c;\n            try {\n                r1 = arg1.toString().split(\".\")[1].length;\n            } catch (e) {\n                r1 = 0;\n            }\n            try {\n                r2 = arg2.toString().split(\".\")[1].length;\n            } catch (e) {\n                r2 = 0;\n            }\n            c = Math.abs(r1 - r2);\n            m = Math.pow(10, Math.max(r1, r2));\n            if (c > 0) {\n                var cm = Math.pow(10, c);\n                if (r1 > r2) {\n                    arg1 = Number(arg1.toString().replace(\".\", \"\"));\n                    arg2 = Number(arg2.toString().replace(\".\", \"\")) * cm;\n                } else {\n                    arg1 = Number(arg1.toString().replace(\".\", \"\")) * cm;\n                    arg2 = Number(arg2.toString().replace(\".\", \"\"));\n                }\n            } else {\n                arg1 = Number(arg1.toString().replace(\".\", \"\"));\n                arg2 = Number(arg2.toString().replace(\".\", \"\"));\n            }\n            return (arg1 + arg2) / m;\n        }\n    },\n\n    // 给Number类型增加一个sub方法，调用起来更加方便。\n    sub: function (num, arg) {\n        return accSub(num, arg);\n\n        /**\n         ** 减法函数，用来得到精确的减法结果\n         ** 说明：javascript的减法结果会有误差，在两个浮点数相减的时候会比较明显。这个函数返回较为精确的减法结果。\n         ** 调用：accSub(arg1,arg2)\n         ** 返回值：arg1加上arg2的精确结果\n         **/\n        function accSub (arg1, arg2) {\n            var r1, r2, m, n;\n            try {\n                r1 = arg1.toString().split(\".\")[1].length;\n            } catch (e) {\n                r1 = 0;\n            }\n            try {\n                r2 = arg2.toString().split(\".\")[1].length;\n            } catch (e) {\n                r2 = 0;\n            }\n            m = Math.pow(10, Math.max(r1, r2)); // last modify by deeka //动态控制精度长度\n            n = (r1 >= r2) ? r1 : r2;\n            return ((arg1 * m - arg2 * m) / m).toFixed(n);\n        }\n    },\n\n    // 给Number类型增加一个mul方法，调用起来更加方便。\n    mul: function (num, arg) {\n        return accMul(arg, num);\n\n        /**\n         ** 乘法函数，用来得到精确的乘法结果\n         ** 说明：javascript的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。\n         ** 调用：accMul(arg1,arg2)\n         ** 返回值：arg1乘以 arg2的精确结果\n         **/\n        function accMul (arg1, arg2) {\n            var m = 0, s1 = arg1.toString(), s2 = arg2.toString();\n            try {\n                m += s1.split(\".\")[1].length;\n            } catch (e) {\n            }\n            try {\n                m += s2.split(\".\")[1].length;\n            } catch (e) {\n            }\n            return Number(s1.replace(\".\", \"\")) * Number(s2.replace(\".\", \"\")) / Math.pow(10, m);\n        }\n    },\n    \n    // 给Number类型增加一个div方法，调用起来更加方便。\n    div: function (num, arg) {\n        return accDivide(num, arg);\n\n        /**\n         * Return digits length of a number\n         * @param {*number} num Input number\n         */\n        function digitLength (num) {\n            // Get digit length of e\n            var eSplit = num.toString().split(/[eE]/);\n            var len = (eSplit[0].split(\".\")[1] || \"\").length - (+(eSplit[1] || 0));\n            return len > 0 ? len : 0;\n        }\n        /**\n         * 把小数转成整数，支持科学计数法。如果是小数则放大成整数\n         * @param {*number} num 输入数\n         */\n        function float2Fixed (num) {\n            if (num.toString().indexOf(\"e\") === -1) {\n                return Number(num.toString().replace(\".\", \"\"));\n            }\n            var dLen = digitLength(num);\n            return dLen > 0 ? num * Math.pow(10, dLen) : num;\n        }\n\n        /**\n         * 精确乘法\n         */\n        function times (num1, num2) {\n            var others = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                others[_i - 2] = arguments[_i];\n            }\n            if (others.length > 0) {\n                return times.apply(void 0, [times(num1, num2), others[0]].concat(others.slice(1)));\n            }\n            var num1Changed = float2Fixed(num1);\n            var num2Changed = float2Fixed(num2);\n            var baseNum = digitLength(num1) + digitLength(num2);\n            var leftValue = num1Changed * num2Changed;\n            return leftValue / Math.pow(10, baseNum);\n        }\n\n        /**\n         * 精确除法\n         */\n        function accDivide (num1, num2) {\n            var others = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                others[_i - 2] = arguments[_i];\n            }\n            if (others.length > 0) {\n                return accDivide.apply(void 0, [accDivide(num1, num2), others[0]].concat(others.slice(1)));\n            }\n            var num1Changed = float2Fixed(num1);\n            var num2Changed = float2Fixed(num2);\n            return times((num1Changed / num2Changed), Math.pow(10, digitLength(num2) - digitLength(num1)));\n        }\n    }\n\n});","/**\n * 对字符串对象的扩展\n * @class String\n */\n_.extend(BI, {\n\n    /**\n     * 判断字符串是否已指定的字符串开始\n     * @param str source字符串\n     * @param {String} startTag   指定的开始字符串\n     * @return {Boolean}  如果字符串以指定字符串开始则返回true，否则返回false\n     */\n    startWith: function (str, startTag) {\n        str = str || \"\";\n        if (startTag == null || startTag == \"\" || str.length === 0 || startTag.length > str.length) {\n            return false;\n        }\n        return str.substr(0, startTag.length) == startTag;\n    },\n    /**\n     * 判断字符串是否以指定的字符串结束\n     * @param str source字符串\n     * @param {String} endTag 指定的字符串\n     * @return {Boolean}  如果字符串以指定字符串结束则返回true，否则返回false\n     */\n    endWith: function (str, endTag) {\n        if (endTag == null || endTag == \"\" || str.length === 0 || endTag.length > str.length) {\n            return false;\n        }\n        return str.substring(str.length - endTag.length) == endTag;\n    },\n\n    /**\n     * 获取url中指定名字的参数\n     * @param str source字符串\n     * @param {String} name 参数的名字\n     * @return {String} 参数的值\n     */\n    getQuery: function (str, name) {\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n        var r = str.substr(str.indexOf(\"?\") + 1).match(reg);\n        if (r) {\n            return unescape(r[2]);\n        }\n        return null;\n    },\n\n    /**\n     * 给url加上给定的参数\n     * @param str source字符串\n     * @param {Object} paras 参数对象，是一个键值对对象\n     * @return {String} 添加了给定参数的url\n     */\n    appendQuery: function (str, paras) {\n        if (!paras) {\n            return str;\n        }\n        var src = str;\n        // 没有问号说明还没有参数\n        if (src.indexOf(\"?\") === -1) {\n            src += \"?\";\n        }\n        // 如果以问号结尾，说明没有其他参数\n        if (BI.endWith(src, \"?\") !== false) {\n        } else {\n            src += \"&\";\n        }\n        _.each(paras, function (value, name) {\n            if (typeof(name) === \"string\") {\n                src += name + \"=\" + value + \"&\";\n            }\n        });\n        src = src.substr(0, src.length - 1);\n        return src;\n    },\n    /**\n     * 将所有符合第一个字符串所表示的字符串替换成为第二个字符串\n     * @param str source字符串\n     * @param {String} s1 要替换的字符串的正则表达式\n     * @param {String} s2 替换的结果字符串\n     * @returns {String} 替换后的字符串\n     */\n    replaceAll: function (str, s1, s2) {\n        return BI.isString(str) ? str.replace(new RegExp(s1, \"gm\"), s2) : str;\n    },\n    /**\n     * 总是让字符串以指定的字符开头\n     * @param str source字符串\n     * @param {String} start 指定的字符\n     * @returns {String} 以指定字符开头的字符串\n     */\n    perfectStart: function (str, start) {\n        if (BI.startWith(str, start)) {\n            return str;\n        }\n        return start + str;\n\n    },\n\n    /**\n     * 获取字符串中某字符串的所有项位置数组\n     * @param str source字符串\n     * @param {String} sub 子字符串\n     * @return {Number[]} 子字符串在父字符串中出现的所有位置组成的数组\n     */\n    allIndexOf: function (str, sub) {\n        if (typeof sub !== \"string\") {\n            return [];\n        }\n        var location = [];\n        var offset = 0;\n        while (str.length > 0) {\n            var loc = str.indexOf(sub);\n            if (loc === -1) {\n                break;\n            }\n            location.push(offset + loc);\n            str = str.substring(loc + sub.length, str.length);\n            offset += loc + sub.length;\n        }\n        return location;\n    }\n});","!(function () {\n    var i18nStore = {};\n    _.extend(BI, {\n        addI18n: function (i18n) {\n            BI.extend(i18nStore, i18n);\n        },\n        i18nText: function (key) {\n            var localeText = i18nStore[key] || (BI.i18n && BI.i18n[key]) || \"\";\n            if (!localeText) {\n                localeText = key;\n            }\n            var len = arguments.length;\n            if (len > 1) {\n                if (localeText.indexOf(\"{R1}\") > -1) {\n                    for (var i = 1; i < len; i++) {\n                        var key = \"{R\" + i + \"}\";\n                        localeText = BI.replaceAll(localeText, key, arguments[i] + \"\");\n                    }\n                } else {\n                    var args = Array.prototype.slice.call(arguments);\n                    var count = 1;\n                    return BI.replaceAll(localeText, \"\\\\{\\\\s*\\\\}\", function () {\n                        return args[count++] + \"\";\n                    });\n                }\n            }\n            return localeText;\n        }\n    });\n})();","(function () {\n    var moduleInjection = {};\n    BI.module = function (xtype, cls) {\n        if (moduleInjection[xtype] != null) {\n            _global.console && console.error(\"module:[\" + xtype + \"] has been registed\");\n        }\n        moduleInjection[xtype] = cls;\n    };\n\n    var constantInjection = {};\n    BI.constant = function (xtype, cls) {\n        if (constantInjection[xtype] != null) {\n            _global.console && console.error(\"constant:[\" + xtype + \"] has been registed\");\n        }\n        constantInjection[xtype] = cls;\n    };\n\n    var modelInjection = {};\n    BI.model = function (xtype, cls) {\n        if (modelInjection[xtype] != null) {\n            _global.console && console.error(\"model:[\" + xtype + \"] has been registed\");\n        }\n        modelInjection[xtype] = cls;\n    };\n\n    var storeInjection = {};\n    BI.store = function (xtype, cls) {\n        if (storeInjection[xtype] != null) {\n            _global.console && console.error(\"store:[\" + xtype + \"] has been registed\");\n        }\n        storeInjection[xtype] = cls;\n    };\n\n    var serviceInjection = {};\n    BI.service = function (xtype, cls) {\n        if (serviceInjection[xtype] != null) {\n            _global.console && console.error(\"service:[\" + xtype + \"] has been registed\");\n        }\n        serviceInjection[xtype] = cls;\n    };\n\n    var providerInjection = {};\n    BI.provider = function (xtype, cls) {\n        if (providerInjection[xtype] != null) {\n            _global.console && console.error(\"provider:[\" + xtype + \"] has been registed\");\n        }\n        providerInjection[xtype] = cls;\n    };\n\n    var configFunctions = {};\n    BI.config = function (type, configFn) {\n        if (BI.initialized) {\n            if (constantInjection[type]) {\n                return (constantInjection[type] = configFn(constantInjection[type]));\n            }\n            if (providerInjection[type]) {\n                if (!providers[type]) {\n                    providers[type] = new providerInjection[type]();\n                }\n                // 如果config被重新配置的话，需要删除掉之前的实例\n                if (providerInstance[type]) {\n                    delete providerInstance[type];\n                }\n                return configFn(providers[type]);\n            }\n            return BI.Plugin.configWidget(type, configFn);\n        }\n        if (!configFunctions[type]) {\n            configFunctions[type] = [];\n            BI.prepares.push(function () {\n                var queue = configFunctions[type];\n                for (var i = 0; i < queue.length; i++) {\n                    if (constantInjection[type]) {\n                        constantInjection[type] = queue[i](constantInjection[type]);\n                        continue;\n                    }\n                    if (providerInjection[type]) {\n                        if (!providers[type]) {\n                            providers[type] = new providerInjection[type]();\n                        }\n                        if (providerInstance[type]) {\n                            delete providerInstance[type];\n                        }\n                        queue[i](providers[type]);\n                        continue;\n                    }\n                    BI.Plugin.configWidget(type, queue[i]);\n                }\n                configFunctions[type] = null;\n            });\n        }\n        configFunctions[type].push(configFn);\n    };\n\n    var actions = {};\n    var globalAction = [];\n    BI.action = function (type, actionFn) {\n        if (BI.isFunction(type)) {\n            globalAction.push(type);\n            return function () {\n                BI.remove(globalAction, function (idx) {\n                    return globalAction.indexOf(actionFn) === idx;\n                });\n            };\n        }\n        if (!actions[type]) {\n            actions[type] = [];\n        }\n        actions[type].push(actionFn);\n        return function () {\n            BI.remove(actions[type], function (idx) {\n                return actions[type].indexOf(actionFn) === idx;\n            });\n            if (actions[type].length === 0) {\n                delete actions[type];\n            }\n        };\n    };\n\n    var points = {};\n    BI.point = function (type, action, pointFn, after) {\n        if (!points[type]) {\n            points[type] = {};\n        }\n        if (!points[type][action]) {\n            points[type][action] = {};\n        }\n        if (!points[type][action][after ? \"after\" : \"before\"]) {\n            points[type][action][after ? \"after\" : \"before\"] = [];\n        }\n        points[type][action][after ? \"after\" : \"before\"].push(pointFn);\n    };\n\n    BI.Modules = {\n        getModule: function (type) {\n            if (!moduleInjection[type]) {\n                _global.console && console.error(\"module:[\" + type + \"] does not exists\");\n                return false;\n            }\n            return moduleInjection[type];\n        },\n        getAllModules: function () {\n            return moduleInjection;\n        }\n    };\n\n    BI.Constants = {\n        getConstant: function (type) {\n            return constantInjection[type];\n        }\n    };\n\n    var callPoint = function (inst, types) {\n        types = BI.isArray(types) ? types : [types];\n        BI.each(types, function (idx, type) {\n            if (points[type]) {\n                for (var action in points[type]) {\n                    var bfns = points[type][action].before;\n                    if (bfns) {\n                        BI.aspect.before(inst, action, function (bfns) {\n                            return function () {\n                                for (var i = 0, len = bfns.length; i < len; i++) {\n                                    try {\n                                        bfns[i].apply(inst, arguments);\n                                    } catch (e) {\n                                        _global.console && console.error(e);\n                                    }\n                                }\n                            };\n                        }(bfns));\n                    }\n                    var afns = points[type][action].after;\n                    if (afns) {\n                        BI.aspect.after(inst, action, function (afns) {\n                            return function () {\n                                for (var i = 0, len = afns.length; i < len; i++) {\n                                    try {\n                                        afns[i].apply(inst, arguments);\n                                    } catch (e) {\n                                        _global.console && console.error(e);\n                                    }\n                                }\n                            };\n                        }(afns));\n                    }\n                }\n            }\n        });\n    };\n\n    BI.Models = {\n        getModel: function (type, config) {\n            var inst = new modelInjection[type](config);\n            inst._constructor && inst._constructor(config);\n            inst.mixins && callPoint(inst, inst.mixins);\n            callPoint(inst, type);\n            return inst;\n        }\n    };\n\n    var stores = {};\n\n    BI.Stores = {\n        getStore: function (type, config) {\n            if (stores[type]) {\n                return stores[type];\n            }\n            var inst = stores[type] = new storeInjection[type](config);\n            inst._constructor && inst._constructor(config, function () {\n                delete stores[type];\n            });\n            callPoint(inst, type);\n            return inst;\n        }\n    };\n\n    var services = {};\n\n    BI.Services = {\n        getService: function (type, config) {\n            if (services[type]) {\n                return services[type];\n            }\n            services[type] = new serviceInjection[type](config);\n            callPoint(services[type], type);\n            return services[type];\n        }\n    };\n\n    var providers = {},\n        providerInstance = {};\n\n    BI.Providers = {\n        getProvider: function (type, config) {\n            if (!providers[type]) {\n                providers[type] = new providerInjection[type]();\n            }\n            if (!providerInstance[type]) {\n                providerInstance[type] = new (providers[type].$get())(config);\n            }\n            return providerInstance[type];\n        }\n    };\n\n    BI.Actions = {\n        runAction: function (type, event, config) {\n            BI.each(actions[type], function (i, act) {\n                try {\n                    act(event, config);\n                } catch (e) {\n                    _global.console && console.error(e);\n                }\n            });\n        },\n        runGlobalAction: function () {\n            var args = [].slice.call(arguments);\n            BI.each(globalAction, function (i, act) {\n                try {\n                    act.apply(null, args);\n                } catch (e) {\n                    _global.console && console.error(e);\n                }\n            });\n        }\n    };\n\n    BI.getContext = function (type, config) {\n        if (constantInjection[type]) {\n            return BI.Constants.getConstant(type);\n        }\n        if (modelInjection[type]) {\n            return BI.Models.getModel(type, config);\n        }\n        if (storeInjection[type]) {\n            return BI.Stores.getStore(type, config);\n        }\n        if (serviceInjection[type]) {\n            return BI.Services.getService(type, config);\n        }\n        if (providerInjection[type]) {\n            return BI.Providers.getProvider(type, config);\n        }\n    };\n})();","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * 常量\n */\n\n_.extend(BI, {\n    MAX: 0xfffffffffffffff,\n    MIN: -0xfffffffffffffff,\n    EVENT_RESPONSE_TIME: 200,\n    zIndex_layer: 1e5,\n    zIndex_popover: 1e6,\n    zIndex_popup: 1e7,\n    zIndex_masker: 1e8,\n    zIndex_tip: 1e9,\n    emptyStr: \"\",\n    emptyFn: function () {\n    },\n    empty: null,\n    Key: {\n        48: \"0\",\n        49: \"1\",\n        50: \"2\",\n        51: \"3\",\n        52: \"4\",\n        53: \"5\",\n        54: \"6\",\n        55: \"7\",\n        56: \"8\",\n        57: \"9\",\n        65: \"a\",\n        66: \"b\",\n        67: \"c\",\n        68: \"d\",\n        69: \"e\",\n        70: \"f\",\n        71: \"g\",\n        72: \"h\",\n        73: \"i\",\n        74: \"j\",\n        75: \"k\",\n        76: \"l\",\n        77: \"m\",\n        78: \"n\",\n        79: \"o\",\n        80: \"p\",\n        81: \"q\",\n        82: \"r\",\n        83: \"s\",\n        84: \"t\",\n        85: \"u\",\n        86: \"v\",\n        87: \"w\",\n        88: \"x\",\n        89: \"y\",\n        90: \"z\",\n        96: \"0\",\n        97: \"1\",\n        98: \"2\",\n        99: \"3\",\n        100: \"4\",\n        101: \"5\",\n        102: \"6\",\n        103: \"7\",\n        104: \"8\",\n        105: \"9\",\n        106: \"*\",\n        107: \"+\",\n        109: \"-\",\n        110: \".\",\n        111: \"/\"\n    },\n    KeyCode: {\n        BACKSPACE: 8,\n        COMMA: 188,\n        DELETE: 46,\n        DOWN: 40,\n        END: 35,\n        ENTER: 13,\n        ESCAPE: 27,\n        HOME: 36,\n        LEFT: 37,\n        NUMPAD_ADD: 107,\n        NUMPAD_DECIMAL: 110,\n        NUMPAD_DIVIDE: 111,\n        NUMPAD_ENTER: 108,\n        NUMPAD_MULTIPLY: 106,\n        NUMPAD_SUBTRACT: 109,\n        PAGE_DOWN: 34,\n        PAGE_UP: 33,\n        PERIOD: 190,\n        RIGHT: 39,\n        SPACE: 32,\n        TAB: 9,\n        UP: 38\n    },\n    Status: {\n        SUCCESS: 1,\n        WRONG: 2,\n        START: 3,\n        END: 4,\n        WAITING: 5,\n        READY: 6,\n        RUNNING: 7,\n        OUTOFBOUNDS: 8,\n        NULL: -1\n    },\n    Direction: {\n        Top: \"top\",\n        Bottom: \"bottom\",\n        Left: \"left\",\n        Right: \"right\",\n        Custom: \"custom\"\n    },\n    Axis: {\n        Vertical: \"vertical\",\n        Horizontal: \"horizontal\"\n    },\n    Selection: {\n        Default: -2,\n        None: -1,\n        Single: 0,\n        Multi: 1,\n        All: 2\n    },\n    HorizontalAlign: {\n        Left: \"left\",\n        Right: \"right\",\n        Center: \"center\",\n        Stretch: \"stretch\"\n    },\n    VerticalAlign: {\n        Middle: \"middle\",\n        Top: \"top\",\n        Bottom: \"bottom\",\n        Stretch: \"stretch\"\n    },\n    StartOfWeek: 1\n});","/**\n * 缓冲池\n * @type {{Buffer: {}}}\n */\n\n(function () {\n    var Buffer = {};\n    var MODE = false;// 设置缓存模式为关闭\n\n    BI.BufferPool = {\n        put: function (name, cache) {\n            if (BI.isNotNull(Buffer[name])) {\n                throw new Error(\"Buffer Pool has the key already!\");\n            }\n            Buffer[name] = cache;\n        },\n\n        get: function (name) {\n            return Buffer[name];\n        }\n    };\n})();","/**\n * 共享池\n * @type {{Shared: {}}}\n */\n\n(function () {\n    var _Shared = {};\n    BI.SharingPool = {\n        _Shared: _Shared,\n        put: function (name, shared) {\n            _Shared[name] = shared;\n        },\n\n        cat: function () {\n            var args = Array.prototype.slice.call(arguments, 0),\n                copy = _Shared;\n            for (var i = 0; i < args.length; i++) {\n                copy = copy && copy[args[i]];\n            }\n            return copy;\n        },\n\n        get: function () {\n            return BI.deepClone(this.cat.apply(this, arguments));\n        },\n\n        remove: function (key) {\n            delete _Shared[key];\n        }\n    };\n})();","BI.Req = {\n\n};\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","BI.i18n = {\n    \"BI-Multi_Date_Quarter_End\": \"季度末\",\n    \"BI-Multi_Date_Month_Begin\": \"月初\",\n    \"BI-Multi_Date_YMD\": \"年月日\",\n    \"BI-Custom_Color\": \"自定义颜色\",\n    \"BI-Numerical_Interval_Input_Data\": \"请输入数值\",\n    \"BI-Please_Input_Natural_Number\": \"请输入非负整数\",\n    \"BI-No_More_Data\": \"无更多数据\",\n    \"BI-Basic_Altogether\": \"共\",\n    \"BI-Basic_Sunday\": \"星期日\",\n    \"BI-Widget_Background_Colour\": \"组件背景\",\n    \"BI-Color_Picker_Error_Text\": \"请输入0~255的正整数\",\n    \"BI-Multi_Date_Month\": \"月\",\n    \"BI-No_Selected_Item\": \"没有可选项\",\n    \"BI-Multi_Date_Year_Begin\": \"年初\",\n    \"BI-Quarter_1\": \"第1季度\",\n    \"BI-Quarter_2\": \"第2季度\",\n    \"BI-Quarter_3\": \"第3季度\",\n    \"BI-Quarter_4\": \"第4季度\",\n    \"BI-Multi_Date_Year_Next\": \"年后\",\n    \"BI-Multi_Date_Month_Prev\": \"个月前\",\n    \"BI-Month_Trigger_Error_Text\": \"请输入1~12的正整数\",\n    \"BI-Less_And_Equal\": \"小于等于\",\n    \"BI-Year_Trigger_Invalid_Text\": \"请输入有效时间\",\n    \"BI-Multi_Date_Week_Next\": \"周后\",\n    \"BI-Font_Size\": \"字号\",\n    \"BI-Basic_Total\": \"共\",\n    \"BI-Already_Selected\": \"已选择\",\n    \"BI-Formula_Insert\": \"插入\",\n    \"BI-Select_All\": \"全选\",\n    \"BI-Basic_Tuesday\": \"星期二\",\n    \"BI-Multi_Date_Month_End\": \"月末\",\n    \"BI-Load_More\": \"点击加载更多数据\",\n    \"BI-Basic_September\": \"九月\",\n    \"BI-Current_Is_Last_Page\": \"当前已是最后一页\",\n    \"BI-Basic_Auto\": \"自动\",\n    \"BI-Basic_Count\": \"个\",\n    \"BI-Basic_Value\": \"值\",\n    \"BI-Basic_Unrestricted\": \"无限制\",\n    \"BI-Quarter_Trigger_Error_Text\": \"请输入1~4的正整数\",\n    \"BI-Basic_More\": \"更多\",\n    \"BI-Basic_Wednesday\": \"星期三\",\n    \"BI-Basic_Bold\": \"加粗\",\n    \"BI-Basic_Simple_Saturday\": \"六\",\n    \"BI-Multi_Date_Month_Next\": \"个月后\",\n    \"BI-Basic_March\": \"三月\",\n    \"BI-Current_Is_First_Page\": \"当前已是第一页\",\n    \"BI-Basic_Thursday\": \"星期四\",\n    \"BI-Basic_Prompt\": \"提示\",\n    \"BI-Multi_Date_Today\": \"今天\",\n    \"BI-Multi_Date_Quarter_Prev\": \"个季度前\",\n    \"BI-Row_Header\": \"行表头\",\n    \"BI-Date_Trigger_Error_Text\": \"日期格式示例:2015-3-11\",\n    \"BI-Basic_Cancel\": \"取消\",\n    \"BI-Basic_January\": \"一月\",\n    \"BI-Basic_June\": \"六月\",\n    \"BI-Basic_July\": \"七月\",\n    \"BI-Basic_April\": \"四月\",\n    \"BI-Multi_Date_Quarter_Begin\": \"季度初\",\n    \"BI-Multi_Date_Week\": \"周\",\n    \"BI-Click_Blank_To_Select\": \"点击\\\"空格键\\\"选中完全匹配项\",\n    \"BI-Basic_August\": \"八月\",\n    \"BI-Word_Align_Left\": \"文字居左\",\n    \"BI-Basic_November\": \"十一月\",\n    \"BI-Font_Colour\": \"字体颜色\",\n    \"BI-Multi_Date_Day_Prev\": \"天前\",\n    \"BI-Select_Part\": \"部分选择\",\n    \"BI-Multi_Date_Day_Next\": \"天后\",\n    \"BI-Less_Than\": \"小于\",\n    \"BI-Basic_February\": \"二月\",\n    \"BI-Multi_Date_Year\": \"年\",\n    \"BI-Number_Index\": \"序号\",\n    \"BI-Multi_Date_Week_Prev\": \"周前\",\n    \"BI-Next_Page\": \"下一页\",\n    \"BI-Right_Page\": \"向右翻页\",\n    \"BI-Numerical_Interval_Signal_Value\": \"前后值相等，请将操作符改为“≤”\",\n    \"BI-Basic_December\": \"十二月\",\n    \"BI-Basic_Saturday\": \"星期六\",\n    \"BI-Basic_Simple_Wednesday\": \"三\",\n    \"BI-Multi_Date_Quarter_Next\": \"个季度后\",\n    \"BI-Basic_October\": \"十月\",\n    \"BI-Basic_Simple_Friday\": \"五\",\n    \"BI-Basic_Save\": \"保存\",\n    \"BI-Numerical_Interval_Number_Value\": \"请保证前面的数值小于/等于后面的数值\",\n    \"BI-Previous_Page\": \"上一页\",\n    \"BI-No_Select\": \"搜索结果为空\",\n    \"BI-Basic_Clears\": \"清空\",\n    \"BI-Created_By_Me\": \"我创建的\",\n    \"BI-Basic_Simple_Tuesday\": \"二\",\n    \"BI-Word_Align_Right\": \"文字居右\",\n    \"BI-Summary_Values\": \"汇总\",\n    \"BI-Basic_Clear\": \"清除\",\n    \"BI-Upload_File_Size_Error\": \"文件大小不支持\",\n    \"BI-Up_Page\": \"向上翻页\",\n    \"BI-Basic_Simple_Sunday\": \"日\",\n    \"BI-Multi_Date_Relative_Current_Time\": \"相对当前时间\",\n    \"BI-Selected_Data\": \"已选数据：\",\n    \"BI-Multi_Date_Quarter\": \"季度\",\n    \"BI-Check_Selected\": \"查看已选\",\n    \"BI-Basic_Search\": \"搜索\",\n    \"BI-Basic_May\": \"五月\",\n    \"BI-Continue_Select\": \"继续选择\",\n    \"BI-Please_Input_Positive_Integer\": \"请输入正整数\",\n    \"BI-Upload_File_Type_Error\": \"文件类型不支持\",\n    \"BI-Upload_File_Error\": \"文件上传失败\",\n    \"BI-Basic_Friday\": \"星期五\",\n    \"BI-Down_Page\": \"向下翻页\",\n    \"BI-Basic_Monday\": \"星期一\",\n    \"BI-Left_Page\": \"向左翻页\",\n    \"BI-Transparent_Color\": \"透明\",\n    \"BI-Basic_Simple_Monday\": \"一\",\n    \"BI-Multi_Date_Year_End\": \"年末\",\n    \"BI-Time_Interval_Error_Text\": \"请保证开始时间早于/等于结束时间\",\n    \"BI-Basic_Time\": \"时间\",\n    \"BI-Basic_OK\": \"确定\",\n    \"BI-Basic_Sure\": \"确定\",\n    \"BI-Basic_Simple_Thursday\": \"四\",\n    \"BI-Multi_Date_Year_Prev\": \"年前\",\n    \"BI-Tiao_Data\": \"条数据\",\n    \"BI-Basic_Italic\": \"斜体\",\n    \"BI-Basic_Dynamic_Title\": \"动态时间\",\n    \"BI-Basic_Year\": \"年\",\n    \"BI-Basic_Single_Quarter\": \"季\",\n    \"BI-Basic_Month\": \"月\",\n    \"BI-Basic_Week\": \"周\",\n    \"BI-Basic_Day\": \"天\",\n    \"BI-Basic_Work_Day\": \"工作日\",\n    \"BI-Basic_Front\": \"前\",\n    \"BI-Basic_Behind\": \"后\",\n    \"BI-Basic_Empty\": \"空\",\n    \"BI-Basic_Month_End\": \"月末\",\n    \"BI-Basic_Month_Begin\": \"月初\",\n    \"BI-Basic_Year_End\": \"年末\",\n    \"BI-Basic_Year_Begin\": \"年初\",\n    \"BI-Basic_Quarter_End\": \"季末\",\n    \"BI-Basic_Quarter_Begin\": \"季初\",\n    \"BI-Basic_Week_End\": \"周末\",\n    \"BI-Basic_Week_Begin\": \"周初\",\n    \"BI-Basic_Current_Day\": \"当天\",\n    \"BI-Basic_Begin_Start\": \"初\",\n    \"BI-Basic_End_Stop\": \"末\",\n    \"BI-Basic_Current_Year\": \"今年\",\n    \"BI-Basic_Year_Fen\": \"年份\",\n    \"BI-Basic_Current_Month\": \"本月\",\n    \"BI-Basic_Current_Quarter\": \"本季度\",\n    \"BI-Basic_Year_Month\": \"年月\",\n    \"BI-Basic_Year_Quarter\": \"年季度\",\n    \"BI-Basic_Input_Can_Not_Null\": \"输入框不能为空\",\n    \"BI-Basic_Date_Time_Error_Text\": \"日期格式示例:2015-3-11 00:00:00\",\n    \"BI-Basic_Input_From_To_Number\": \"请输入{R1}的数值\",\n    \"BI-Basic_Or\": \"或\",\n    \"BI-Basic_And\": \"且\",\n    \"BI-Conf_Add_Formula\": \"添加公式\",\n    \"BI-Conf_Add_Condition\": \"添加条件\",\n    \"BI-Conf_Formula_And\": \"且公式条件\",\n    \"BI-Conf_Formula_Or\": \"或公式条件\",\n    \"BI-Conf_Condition_And\": \"且条件\",\n    \"BI-Conf_Condition_Or\": \"或条件\",\n    \"BI-Microsoft_YaHei\": \"微软雅黑\",\n    \"BI-Apple_Light\": \"苹方-light\",\n    \"BI-Font_Family\": \"字体\",\n    \"BI-Basic_Please_Input_Content\": \"请输入内容\",\n    \"BI-Word_Align_Center\": \"文字居中\",\n    \"BI-Basic_Please_Enter_Number_Between\": \"请输入{R1}-{R2}的值\",\n    \"BI-More_Than\": \"大于\",\n    \"BI-More_And_Equal\": \"大于等于\",\n    \"BI-Please_Enter_SQL\": \"请输入SQL\",\n    \"BI-Basic_Click_To_Add_Text\": \"+点击新增\\\"{R1}\\\"\",\n    \"BI-Basic_Please_Select\": \"请选择\",\n    \"BI-Basic_Font_Color\": \"文字颜色\",\n    \"BI-Basic_Background_Color\": \"背景色\",\n    \"BI-Basic_Underline\": \"下划线\",\n    \"BI-Basic_Param_Month\": \"{R1}月\",\n    \"BI-Basic_Param_Day\": \"{R1}日\",\n    \"BI-Basic_Param_Quarter\": \"{R1}季度\",\n    \"BI-Basic_Param_Week_Count\": \"第{R1}周\",\n    \"BI-Basic_Param_Hour\": \"{R1}时\",\n    \"BI-Basic_Param_Minute\": \"{R1}分\",\n    \"BI-Basic_Param_Second\": \"{R1}秒\",\n    \"BI-Basic_Param_Year\": \"{R1}年\",\n    \"BI-Basic_Date_Day\": \"日\",\n    \"BI-Basic_Hour_Sin\": \"时\",\n    \"BI-Basic_Seconds\": \"秒\",\n    \"BI-Basic_Minute\": \"分\",\n    \"BI-Basic_Wan\": \"万\",\n    \"BI-Basic_Million\": \"百万\",\n    \"BI-Basic_Billion\": \"亿\",\n    \"BI-Basic_Quarter\": \"季度\",\n    \"BI-Basic_No_Select\": \"不选\",\n    \"BI-Basic_Now\": \"此刻\"\n};"],"sourceRoot":""}